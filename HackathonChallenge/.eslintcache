[{"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/index.js":"1","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/reportWebVitals.js":"2","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/App.js":"3","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/context/ThemeContext.js":"4","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/store.js":"5","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/context/ThemeDemo.js":"6","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/PostsReducer.js":"7","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/AuthReducer.js":"8","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/Reducers.js":"9","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/index.js":"10","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/actions/AuthActions.js":"11","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/actions/PostTypes.js":"12","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/Footer.js":"13","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Todo.js":"14","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/Setting.js":"15","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Widget.js":"16","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Home.js":"17","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js":"18","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/DEX.js":"19","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js":"20","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Transactions.js":"21","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js":"22","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js":"23","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/MarketCapital.js":"24","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js":"25","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/MyWallet.js":"26","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js":"27","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js":"28","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/index.js":"29","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/services/AuthService.js":"30","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/PageTitle.js":"31","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js":"32","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js":"33","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js":"34","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js":"35","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/SwiperSlider2.js":"36","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js":"37","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/WalletTab.js":"38","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js":"39","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js":"40","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js":"41","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js":"42","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js":"43","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/OrderData.js":"44","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/PreviousTab.js":"45","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/CardSlider.js":"46","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js":"47","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js":"48","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinDetailTab.js":"49","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinDetailTab.js":"50","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js":"51","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js":"52","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js":"53","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js":"54","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js":"55","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js":"56","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js":"57","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js":"58","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js":"59","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js":"60","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js":"61","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js":"62","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js":"63","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js":"64","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js":"65","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js":"66","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js":"67","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js":"68","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js":"69","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js":"70","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js":"71","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js":"72","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js":"73","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js":"74","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/ChatBox.js":"75","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/SideBar.js":"76","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/NavHader.js":"77","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/Header.js":"78","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Editable.js":"79","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js":"80","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/EthereumTab.js":"81","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/OrderBlog.js":"82","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/MoneroTab.js":"83","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/LitecoinTab.js":"84","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/QuickTradeTab.js":"85","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js":"86","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/LitecoinTab.js":"87","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/MoneroTab.js":"88","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/QuickTradeTab.js":"89","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/EthereumTab.js":"90","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/EthereumTab.js":"91","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/OrderBlog.js":"92","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/LitecoinTab.js":"93","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/MoneroTab.js":"94","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/QuickTradeTab.js":"95","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart1.js":"96","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js":"97","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart1.js":"98","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/TabContent.js":"99","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js":"100","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js":"101","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/Logout.js":"102","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart2.js":"103","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart4.js":"104","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart3.js":"105","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js":"106","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js":"107","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js":"108","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart2.js":"109","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart4.js":"110","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart3.js":"111","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js":"112","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/selectors/AuthSelectors.js":"113","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/AMTC6_FE.js":"114","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Setup.js":"115","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/BlockchainData.js":"116","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Token54u.js":"117","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Predeployed.js":"118","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Notes.js":"119","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Alerts.js":"120","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Chat.js":"121","/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/MsgBox.js":"122","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/index.js":"123","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/reportWebVitals.js":"124","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/App.js":"125","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/store.js":"126","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/context/ThemeContext.js":"127","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/Setup.js":"128","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/PostsReducer.js":"129","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/context/ThemeDemo.js":"130","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/Reducers.js":"131","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/AuthReducer.js":"132","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/index.js":"133","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/actions/PostTypes.js":"134","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/actions/AuthActions.js":"135","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/Footer.js":"136","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/Header.js":"137","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/Setting.js":"138","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/NavHader.js":"139","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/SideBar.js":"140","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/DEX.js":"141","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js":"142","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js":"143","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MyWallet.js":"144","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js":"145","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Transactions.js":"146","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js":"147","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js":"148","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Home.js":"149","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js":"150","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MarketCapital.js":"151","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js":"152","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/services/AuthService.js":"153","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/PageTitle.js":"154","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js":"155","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js":"156","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js":"157","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js":"158","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js":"159","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js":"160","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js":"161","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js":"162","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js":"163","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js":"164","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js":"165","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js":"166","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js":"167","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js":"168","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js":"169","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js":"170","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js":"171","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js":"172","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js":"173","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js":"174","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js":"175","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js":"176","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js":"177","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js":"178","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js":"179","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js":"180","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js":"181","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js":"182","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js":"183","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js":"184","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js":"185","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js":"186","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js":"187","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js":"188","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js":"189","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/QuickTradeTab.js":"190","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/selectors/AuthSelectors.js":"191","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js":"192","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js":"193","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js":"194","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js":"195","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/Predeployed_EVM.js":"196","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MARKET.js":"197","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Withdrawal.js":"198","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Deposit.js":"199","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/VaultDetailTab.js":"200","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETPortfolio.js":"201","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETOverview.js":"202","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/ManageLoan.js":"203","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/AuthorizeLoan.js":"204","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/TransferFromLoan.js":"205","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/AMTC6_API.js":"206","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js":"207","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js":"208","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js":"209","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js":"210","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js":"211","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js":"212","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/Index.js":"213","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ReduxForm.js":"214","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/MaterialUiForm.js":"215","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ShowResults.js":"216","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardForm.js":"217","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/AsyncValidate.js":"218","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/Validate.js":"219","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormThirdPage.js":"220","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormSecondPage.js":"221","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormFirstPage.js":"222","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/renderField.js":"223","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/validate.js":"224","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Todo.js":"225","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Widget.js":"226","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Editable.js":"227","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/index.js":"228","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/App.js":"229","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/reportWebVitals.js":"230","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/store.js":"231","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/context/ThemeContext.js":"232","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/Setup.js":"233","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/AMTC6_API.js":"234","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/Predeployed_EVM.js":"235","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/context/ThemeDemo.js":"236","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/Reducers.js":"237","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/PostsReducer.js":"238","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/AuthReducer.js":"239","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/index.js":"240","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/actions/PostTypes.js":"241","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/actions/AuthActions.js":"242","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/NavHader.js":"243","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/Footer.js":"244","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/Setting.js":"245","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/Header.js":"246","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/SideBar.js":"247","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Todo.js":"248","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Widget.js":"249","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js":"250","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js":"251","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/DEX.js":"252","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js":"253","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js":"254","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js":"255","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ReduxForm.js":"256","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/Index.js":"257","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js":"258","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js":"259","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/PageTitle.js":"260","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Editable.js":"261","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/MaterialUiForm.js":"262","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardForm.js":"263","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ShowResults.js":"264","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js":"265","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js":"266","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js":"267","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js":"268","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js":"269","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js":"270","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js":"271","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js":"272","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js":"273","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/Validate.js":"274","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormSecondPage.js":"275","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormThirdPage.js":"276","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormFirstPage.js":"277","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/AsyncValidate.js":"278","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js":"279","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/renderField.js":"280","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/validate.js":"281","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js":"282","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js":"283","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js":"284","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js":"285","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js":"286","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js":"287","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/MARKET.js":"288","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js":"289","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETOverview.js":"290","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETPortfolio.js":"291","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js":"292","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js":"293","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js":"294","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js":"295","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/TransferFromLoan.js":"296","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/AuthorizeLoan.js":"297","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/ManageLoan.js":"298","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js":"299","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js":"300","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js":"301","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js":"302","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js":"303","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js":"304","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js":"305","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js":"306","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js":"307","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js":"308","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js":"309","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js":"310","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js":"311","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js":"312","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js":"313","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js":"314","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js":"315","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/VaultDetailTab.js":"316","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/services/AuthService.js":"317","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js":"318","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js":"319","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js":"320","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Withdrawal.js":"321","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Deposit.js":"322","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js":"323","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js":"324","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js":"325"},{"size":831,"mtime":1635063469103,"results":"326","hashOfConfig":"327"},{"size":375,"mtime":1611919422000,"results":"328","hashOfConfig":"327"},{"size":27788,"mtime":1635065195365,"results":"329","hashOfConfig":"327"},{"size":10123,"mtime":1634900024539,"results":"330","hashOfConfig":"327"},{"size":705,"mtime":1629710426000,"results":"331","hashOfConfig":"327"},{"size":2353,"mtime":1634898005161,"results":"332","hashOfConfig":"327"},{"size":1666,"mtime":1616801006000,"results":"333","hashOfConfig":"327"},{"size":1799,"mtime":1626532810000,"results":"334","hashOfConfig":"327"},{"size":581,"mtime":1629365730000,"results":"335","hashOfConfig":"327"},{"size":15124,"mtime":1635068012904,"results":"336","hashOfConfig":"327"},{"size":2683,"mtime":1629733338000,"results":"337","hashOfConfig":"327"},{"size":503,"mtime":1616801006000,"results":"338","hashOfConfig":"327"},{"size":518,"mtime":1634908009029,"results":"339","hashOfConfig":"327"},{"size":12355,"mtime":1631181356000,"results":"340","hashOfConfig":"327"},{"size":12133,"mtime":1634917119674,"results":"341","hashOfConfig":"327"},{"size":155573,"mtime":1630067260000,"results":"342","hashOfConfig":"327"},{"size":22162,"mtime":1634902802479,"results":"343","hashOfConfig":"327"},{"size":473,"mtime":1635068561886,"results":"344","hashOfConfig":"327"},{"size":471,"mtime":1635068574621,"results":"345","hashOfConfig":"327"},{"size":473,"mtime":1635068541307,"results":"346","hashOfConfig":"327"},{"size":13475,"mtime":1635068676283,"results":"347","hashOfConfig":"327"},{"size":22686,"mtime":1635069240493,"results":"348","hashOfConfig":"327"},{"size":13501,"mtime":1635068651770,"results":"349","hashOfConfig":"327"},{"size":13507,"mtime":1635068610500,"results":"350","hashOfConfig":"327"},{"size":22319,"mtime":1635068634200,"results":"351","hashOfConfig":"327"},{"size":8672,"mtime":1635068619675,"results":"352","hashOfConfig":"327"},{"size":19081,"mtime":1635068403883,"results":"353","hashOfConfig":"327"},{"size":551,"mtime":1611919422000,"results":"354","hashOfConfig":"327"},{"size":877,"mtime":1613897210000,"results":"355","hashOfConfig":"327"},{"size":2479,"mtime":1629710758000,"results":"356","hashOfConfig":"327"},{"size":1171,"mtime":1628005418000,"results":"357","hashOfConfig":"327"},{"size":937,"mtime":1629990322000,"results":"358","hashOfConfig":"327"},{"size":1741,"mtime":1631610596000,"results":"359","hashOfConfig":"327"},{"size":850,"mtime":1612896616000,"results":"360","hashOfConfig":"327"},{"size":1837,"mtime":1629988150000,"results":"361","hashOfConfig":"327"},{"size":3973,"mtime":1630054598000,"results":"362","hashOfConfig":"327"},{"size":2997,"mtime":1629975676000,"results":"363","hashOfConfig":"327"},{"size":8139,"mtime":1629975404000,"results":"364","hashOfConfig":"327"},{"size":903,"mtime":1630163252000,"results":"365","hashOfConfig":"327"},{"size":3452,"mtime":1631554582000,"results":"366","hashOfConfig":"327"},{"size":1795,"mtime":1629897896000,"results":"367","hashOfConfig":"327"},{"size":6796,"mtime":1631554568000,"results":"368","hashOfConfig":"327"},{"size":958,"mtime":1631610010000,"results":"369","hashOfConfig":"327"},{"size":1083,"mtime":1629888928000,"results":"370","hashOfConfig":"327"},{"size":4764,"mtime":1631554558000,"results":"371","hashOfConfig":"327"},{"size":6739,"mtime":1630147090000,"results":"372","hashOfConfig":"327"},{"size":12505,"mtime":1630054638000,"results":"373","hashOfConfig":"327"},{"size":11386,"mtime":1635068861492,"results":"374","hashOfConfig":"327"},{"size":11379,"mtime":1635068830301,"results":"375","hashOfConfig":"327"},{"size":11383,"mtime":1635068841131,"results":"376","hashOfConfig":"327"},{"size":2322,"mtime":1614172172000,"results":"377","hashOfConfig":"327"},{"size":1815,"mtime":1630072184000,"results":"378","hashOfConfig":"327"},{"size":2107,"mtime":1628351762000,"results":"379","hashOfConfig":"327"},{"size":2092,"mtime":1630072090000,"results":"380","hashOfConfig":"327"},{"size":1675,"mtime":1630068034000,"results":"381","hashOfConfig":"327"},{"size":2312,"mtime":1630067368000,"results":"382","hashOfConfig":"327"},{"size":1368,"mtime":1628347566000,"results":"383","hashOfConfig":"327"},{"size":2256,"mtime":1628350496000,"results":"384","hashOfConfig":"327"},{"size":3184,"mtime":1612336616000,"results":"385","hashOfConfig":"327"},{"size":642,"mtime":1612336616000,"results":"386","hashOfConfig":"327"},{"size":2117,"mtime":1614172128000,"results":"387","hashOfConfig":"327"},{"size":1542,"mtime":1612336616000,"results":"388","hashOfConfig":"327"},{"size":1475,"mtime":1612336616000,"results":"389","hashOfConfig":"327"},{"size":2112,"mtime":1612336616000,"results":"390","hashOfConfig":"327"},{"size":2888,"mtime":1614172058000,"results":"391","hashOfConfig":"327"},{"size":1753,"mtime":1630068064000,"results":"392","hashOfConfig":"327"},{"size":2002,"mtime":1630067516000,"results":"393","hashOfConfig":"327"},{"size":2118,"mtime":1612336616000,"results":"394","hashOfConfig":"327"},{"size":438,"mtime":1630067654000,"results":"395","hashOfConfig":"327"},{"size":439,"mtime":1630067888000,"results":"396","hashOfConfig":"327"},{"size":1494,"mtime":1628348458000,"results":"397","hashOfConfig":"327"},{"size":1584,"mtime":1614171880000,"results":"398","hashOfConfig":"327"},{"size":1541,"mtime":1628347964000,"results":"399","hashOfConfig":"327"},{"size":1584,"mtime":1628349072000,"results":"400","hashOfConfig":"327"},{"size":2355,"mtime":1635068081821,"results":"401","hashOfConfig":"327"},{"size":26405,"mtime":1635054858102,"results":"402","hashOfConfig":"327"},{"size":12306,"mtime":1634916106845,"results":"403","hashOfConfig":"327"},{"size":20170,"mtime":1635065539636,"results":"404","hashOfConfig":"327"},{"size":2362,"mtime":1628703572000,"results":"405","hashOfConfig":"327"},{"size":305,"mtime":1611919422000,"results":"406","hashOfConfig":"327"},{"size":5056,"mtime":1634908958339,"results":"407","hashOfConfig":"327"},{"size":3641,"mtime":1634908958363,"results":"408","hashOfConfig":"327"},{"size":5041,"mtime":1634908958359,"results":"409","hashOfConfig":"327"},{"size":5036,"mtime":1634908958342,"results":"410","hashOfConfig":"327"},{"size":12788,"mtime":1634908958379,"results":"411","hashOfConfig":"327"},{"size":3641,"mtime":1634908483349,"results":"412","hashOfConfig":"327"},{"size":5036,"mtime":1634908483346,"results":"413","hashOfConfig":"327"},{"size":5041,"mtime":1634908483348,"results":"414","hashOfConfig":"327"},{"size":12788,"mtime":1634908483350,"results":"415","hashOfConfig":"327"},{"size":5056,"mtime":1634908483344,"results":"416","hashOfConfig":"327"},{"size":5056,"mtime":1634908478529,"results":"417","hashOfConfig":"327"},{"size":3641,"mtime":1634908478544,"results":"418","hashOfConfig":"327"},{"size":5036,"mtime":1634908478532,"results":"419","hashOfConfig":"327"},{"size":5041,"mtime":1634908478535,"results":"420","hashOfConfig":"327"},{"size":12788,"mtime":1634908478547,"results":"421","hashOfConfig":"327"},{"size":1348,"mtime":1634908958117,"results":"422","hashOfConfig":"327"},{"size":1348,"mtime":1634908483318,"results":"423","hashOfConfig":"327"},{"size":1348,"mtime":1634908478464,"results":"424","hashOfConfig":"327"},{"size":9501,"mtime":1631554360000,"results":"425","hashOfConfig":"327"},{"size":2760,"mtime":1630147938000,"results":"426","hashOfConfig":"327"},{"size":6328,"mtime":1611919422000,"results":"427","hashOfConfig":"327"},{"size":1368,"mtime":1628764258000,"results":"428","hashOfConfig":"327"},{"size":1350,"mtime":1634908958119,"results":"429","hashOfConfig":"327"},{"size":1350,"mtime":1634908958138,"results":"430","hashOfConfig":"327"},{"size":1350,"mtime":1634908958129,"results":"431","hashOfConfig":"327"},{"size":1350,"mtime":1634908483339,"results":"432","hashOfConfig":"327"},{"size":1350,"mtime":1634908483321,"results":"433","hashOfConfig":"327"},{"size":1350,"mtime":1634908483320,"results":"434","hashOfConfig":"327"},{"size":1350,"mtime":1634908478467,"results":"435","hashOfConfig":"327"},{"size":1350,"mtime":1634908478493,"results":"436","hashOfConfig":"327"},{"size":1350,"mtime":1634908478470,"results":"437","hashOfConfig":"327"},{"size":2212,"mtime":1611919422000,"results":"438","hashOfConfig":"327"},{"size":111,"mtime":1626362340000,"results":"439","hashOfConfig":"327"},{"size":109138,"mtime":1634925713343,"results":"440","hashOfConfig":"327"},{"size":22361,"mtime":1634624457197,"results":"441","hashOfConfig":"327"},{"size":1418,"mtime":1633331622923,"results":"442","hashOfConfig":"327"},{"size":22308,"mtime":1633331792218,"results":"443","hashOfConfig":"327"},{"size":56925,"mtime":1633937259007,"results":"444","hashOfConfig":"327"},{"size":5948,"mtime":1629820254000,"results":"445","hashOfConfig":"327"},{"size":5894,"mtime":1629819860000,"results":"446","hashOfConfig":"327"},{"size":12953,"mtime":1629819862000,"results":"447","hashOfConfig":"327"},{"size":12988,"mtime":1629820254000,"results":"448","hashOfConfig":"327"},{"size":832,"mtime":1635072058073,"results":"449","hashOfConfig":"450"},{"size":375,"mtime":1611919422000,"results":"451","hashOfConfig":"450"},{"size":35401,"mtime":1635629671088,"results":"452","hashOfConfig":"450"},{"size":705,"mtime":1629710426000,"results":"453","hashOfConfig":"450"},{"size":9171,"mtime":1635659251998,"results":"454","hashOfConfig":"450"},{"size":22361,"mtime":1634624457197,"results":"455","hashOfConfig":"450"},{"size":1666,"mtime":1616801006000,"results":"456","hashOfConfig":"450"},{"size":364,"mtime":1635659196917,"results":"457","hashOfConfig":"450"},{"size":581,"mtime":1629365730000,"results":"458","hashOfConfig":"450"},{"size":1799,"mtime":1626532810000,"results":"459","hashOfConfig":"450"},{"size":5593,"mtime":1635629362523,"results":"460","hashOfConfig":"450"},{"size":503,"mtime":1616801006000,"results":"461","hashOfConfig":"450"},{"size":2683,"mtime":1629733338000,"results":"462","hashOfConfig":"450"},{"size":301,"mtime":1635664060623,"results":"463","hashOfConfig":"450"},{"size":4897,"mtime":1635628822130,"results":"464","hashOfConfig":"450"},{"size":365,"mtime":1635627458304,"results":"465","hashOfConfig":"450"},{"size":1695,"mtime":1635629065603,"results":"466","hashOfConfig":"450"},{"size":7424,"mtime":1635628998208,"results":"467","hashOfConfig":"450"},{"size":1428,"mtime":1635627111993,"results":"468","hashOfConfig":"450"},{"size":474,"mtime":1635371556981,"results":"469","hashOfConfig":"450"},{"size":8623,"mtime":1635628604498,"results":"470","hashOfConfig":"450"},{"size":8680,"mtime":1635339914078,"results":"471","hashOfConfig":"450"},{"size":8355,"mtime":1635628673870,"results":"472","hashOfConfig":"450"},{"size":13475,"mtime":1635068676283,"results":"473","hashOfConfig":"450"},{"size":13679,"mtime":1635244016161,"results":"474","hashOfConfig":"450"},{"size":19134,"mtime":1635626642035,"results":"475","hashOfConfig":"450"},{"size":22162,"mtime":1634902802479,"results":"476","hashOfConfig":"450"},{"size":32036,"mtime":1635619687753,"results":"477","hashOfConfig":"450"},{"size":13507,"mtime":1635068610500,"results":"478","hashOfConfig":"450"},{"size":563,"mtime":1635368949071,"results":"479","hashOfConfig":"450"},{"size":2479,"mtime":1629710758000,"results":"480","hashOfConfig":"450"},{"size":551,"mtime":1635664037891,"results":"481","hashOfConfig":"450"},{"size":2151,"mtime":1635272467662,"results":"482","hashOfConfig":"450"},{"size":954,"mtime":1635627515568,"results":"483","hashOfConfig":"450"},{"size":1815,"mtime":1630072184000,"results":"484","hashOfConfig":"450"},{"size":2092,"mtime":1630072090000,"results":"485","hashOfConfig":"450"},{"size":2322,"mtime":1614172172000,"results":"486","hashOfConfig":"450"},{"size":1340,"mtime":1635602329776,"results":"487","hashOfConfig":"450"},{"size":6759,"mtime":1635625472717,"results":"488","hashOfConfig":"450"},{"size":7033,"mtime":1635625470194,"results":"489","hashOfConfig":"450"},{"size":305,"mtime":1611919422000,"results":"490","hashOfConfig":"450"},{"size":2987,"mtime":1635626970797,"results":"491","hashOfConfig":"450"},{"size":2609,"mtime":1635627608636,"results":"492","hashOfConfig":"450"},{"size":2212,"mtime":1611919422000,"results":"493","hashOfConfig":"450"},{"size":2107,"mtime":1628351762000,"results":"494","hashOfConfig":"450"},{"size":2312,"mtime":1630067368000,"results":"495","hashOfConfig":"450"},{"size":1675,"mtime":1630068034000,"results":"496","hashOfConfig":"450"},{"size":1368,"mtime":1628347566000,"results":"497","hashOfConfig":"450"},{"size":642,"mtime":1612336616000,"results":"498","hashOfConfig":"450"},{"size":3184,"mtime":1612336616000,"results":"499","hashOfConfig":"450"},{"size":2112,"mtime":1612336616000,"results":"500","hashOfConfig":"450"},{"size":1475,"mtime":1612336616000,"results":"501","hashOfConfig":"450"},{"size":7963,"mtime":1635626803356,"results":"502","hashOfConfig":"450"},{"size":1542,"mtime":1612336616000,"results":"503","hashOfConfig":"450"},{"size":2888,"mtime":1614172058000,"results":"504","hashOfConfig":"450"},{"size":2117,"mtime":1614172128000,"results":"505","hashOfConfig":"450"},{"size":439,"mtime":1630067888000,"results":"506","hashOfConfig":"450"},{"size":2256,"mtime":1628350496000,"results":"507","hashOfConfig":"450"},{"size":2118,"mtime":1612336616000,"results":"508","hashOfConfig":"450"},{"size":438,"mtime":1630067654000,"results":"509","hashOfConfig":"450"},{"size":1494,"mtime":1628348458000,"results":"510","hashOfConfig":"450"},{"size":2002,"mtime":1630067516000,"results":"511","hashOfConfig":"450"},{"size":1753,"mtime":1630068064000,"results":"512","hashOfConfig":"450"},{"size":1541,"mtime":1628347964000,"results":"513","hashOfConfig":"450"},{"size":1584,"mtime":1614171880000,"results":"514","hashOfConfig":"450"},{"size":1584,"mtime":1628349072000,"results":"515","hashOfConfig":"450"},{"size":3641,"mtime":1634908483349,"results":"516","hashOfConfig":"450"},{"size":12788,"mtime":1634908483350,"results":"517","hashOfConfig":"450"},{"size":111,"mtime":1626362340000,"results":"518","hashOfConfig":"450"},{"size":1349,"mtime":1635373162040,"results":"519","hashOfConfig":"450"},{"size":1350,"mtime":1634908483321,"results":"520","hashOfConfig":"450"},{"size":1350,"mtime":1634908483320,"results":"521","hashOfConfig":"450"},{"size":1350,"mtime":1634908483339,"results":"522","hashOfConfig":"450"},{"size":64016,"mtime":1635629732659,"results":"523","hashOfConfig":"450"},{"size":12547,"mtime":1635627812060,"results":"524","hashOfConfig":"450"},{"size":3192,"mtime":1635627195178,"results":"525","hashOfConfig":"450"},{"size":3135,"mtime":1635627931170,"results":"526","hashOfConfig":"450"},{"size":5799,"mtime":1635626905732,"results":"527","hashOfConfig":"450"},{"size":7565,"mtime":1635628165592,"results":"528","hashOfConfig":"450"},{"size":10152,"mtime":1635628091854,"results":"529","hashOfConfig":"450"},{"size":5535,"mtime":1635619257103,"results":"530","hashOfConfig":"450"},{"size":6198,"mtime":1635617237634,"results":"531","hashOfConfig":"450"},{"size":4542,"mtime":1635617738063,"results":"532","hashOfConfig":"450"},{"size":123570,"mtime":1635619854575,"results":"533","hashOfConfig":"450"},{"size":2997,"mtime":1629975676000,"results":"534","hashOfConfig":"450"},{"size":903,"mtime":1630163252000,"results":"535","hashOfConfig":"450"},{"size":1336,"mtime":1635345036102,"results":"536","hashOfConfig":"450"},{"size":1837,"mtime":1629988150000,"results":"537","hashOfConfig":"450"},{"size":1741,"mtime":1631610596000,"results":"538","hashOfConfig":"450"},{"size":12505,"mtime":1630054638000,"results":"539","hashOfConfig":"450"},{"size":844,"mtime":1629303002000,"results":"540","hashOfConfig":"450"},{"size":1067,"mtime":1629474162000,"results":"541","hashOfConfig":"450"},{"size":3504,"mtime":1628602060000,"results":"542","hashOfConfig":"450"},{"size":628,"mtime":1624531914000,"results":"543","hashOfConfig":"450"},{"size":1195,"mtime":1624466342000,"results":"544","hashOfConfig":"450"},{"size":283,"mtime":1629303348000,"results":"545","hashOfConfig":"450"},{"size":467,"mtime":1629303272000,"results":"546","hashOfConfig":"450"},{"size":1864,"mtime":1628609956000,"results":"547","hashOfConfig":"450"},{"size":1956,"mtime":1628609976000,"results":"548","hashOfConfig":"450"},{"size":1255,"mtime":1628603114000,"results":"549","hashOfConfig":"450"},{"size":408,"mtime":1624525346000,"results":"550","hashOfConfig":"450"},{"size":557,"mtime":1624460796000,"results":"551","hashOfConfig":"450"},{"size":12355,"mtime":1631181356000,"results":"552","hashOfConfig":"450"},{"size":155573,"mtime":1630067260000,"results":"553","hashOfConfig":"450"},{"size":2362,"mtime":1628703572000,"results":"554","hashOfConfig":"450"},{"size":832,"mtime":1635072058073,"results":"555","hashOfConfig":"556"},{"size":35401,"mtime":1635629671088,"results":"557","hashOfConfig":"556"},{"size":375,"mtime":1611919422000,"results":"558","hashOfConfig":"556"},{"size":705,"mtime":1629710426000,"results":"559","hashOfConfig":"556"},{"size":9171,"mtime":1635659251998,"results":"560","hashOfConfig":"556"},{"size":22361,"mtime":1634624457197,"results":"561","hashOfConfig":"556"},{"size":123570,"mtime":1635619854575,"results":"562","hashOfConfig":"556"},{"size":64016,"mtime":1635629732659,"results":"563","hashOfConfig":"556"},{"size":364,"mtime":1635659196917,"results":"564","hashOfConfig":"556"},{"size":581,"mtime":1629365730000,"results":"565","hashOfConfig":"556"},{"size":1666,"mtime":1616801006000,"results":"566","hashOfConfig":"556"},{"size":1799,"mtime":1626532810000,"results":"567","hashOfConfig":"556"},{"size":5593,"mtime":1635629362523,"results":"568","hashOfConfig":"556"},{"size":503,"mtime":1616801006000,"results":"569","hashOfConfig":"556"},{"size":2683,"mtime":1629733338000,"results":"570","hashOfConfig":"556"},{"size":1695,"mtime":1635629065603,"results":"571","hashOfConfig":"556"},{"size":301,"mtime":1635664060623,"results":"572","hashOfConfig":"556"},{"size":365,"mtime":1635627458304,"results":"573","hashOfConfig":"556"},{"size":4897,"mtime":1635628822130,"results":"574","hashOfConfig":"556"},{"size":7424,"mtime":1635628998208,"results":"575","hashOfConfig":"556"},{"size":12355,"mtime":1631181356000,"results":"576","hashOfConfig":"556"},{"size":155573,"mtime":1630067260000,"results":"577","hashOfConfig":"556"},{"size":8355,"mtime":1635628673870,"results":"578","hashOfConfig":"556"},{"size":8623,"mtime":1635628604498,"results":"579","hashOfConfig":"556"},{"size":1428,"mtime":1635627111993,"results":"580","hashOfConfig":"556"},{"size":13679,"mtime":1635244016161,"results":"581","hashOfConfig":"556"},{"size":19134,"mtime":1635626642035,"results":"582","hashOfConfig":"556"},{"size":474,"mtime":1635371556981,"results":"583","hashOfConfig":"556"},{"size":1067,"mtime":1629474162000,"results":"584","hashOfConfig":"556"},{"size":844,"mtime":1629303002000,"results":"585","hashOfConfig":"556"},{"size":32036,"mtime":1635619687753,"results":"586","hashOfConfig":"556"},{"size":563,"mtime":1635368949071,"results":"587","hashOfConfig":"556"},{"size":551,"mtime":1635664037891,"results":"588","hashOfConfig":"556"},{"size":2362,"mtime":1628703572000,"results":"589","hashOfConfig":"556"},{"size":3504,"mtime":1628602060000,"results":"590","hashOfConfig":"556"},{"size":1195,"mtime":1624466342000,"results":"591","hashOfConfig":"556"},{"size":628,"mtime":1624531914000,"results":"592","hashOfConfig":"556"},{"size":954,"mtime":1635627515568,"results":"593","hashOfConfig":"556"},{"size":2322,"mtime":1614172172000,"results":"594","hashOfConfig":"556"},{"size":2092,"mtime":1630072090000,"results":"595","hashOfConfig":"556"},{"size":2107,"mtime":1628351762000,"results":"596","hashOfConfig":"556"},{"size":1815,"mtime":1630072184000,"results":"597","hashOfConfig":"556"},{"size":2312,"mtime":1630067368000,"results":"598","hashOfConfig":"556"},{"size":1675,"mtime":1630068034000,"results":"599","hashOfConfig":"556"},{"size":2997,"mtime":1629975676000,"results":"600","hashOfConfig":"556"},{"size":305,"mtime":1611919422000,"results":"601","hashOfConfig":"556"},{"size":467,"mtime":1629303272000,"results":"602","hashOfConfig":"556"},{"size":1956,"mtime":1628609976000,"results":"603","hashOfConfig":"556"},{"size":1864,"mtime":1628609956000,"results":"604","hashOfConfig":"556"},{"size":1255,"mtime":1628603114000,"results":"605","hashOfConfig":"556"},{"size":283,"mtime":1629303348000,"results":"606","hashOfConfig":"556"},{"size":2609,"mtime":1635627608636,"results":"607","hashOfConfig":"556"},{"size":408,"mtime":1624525346000,"results":"608","hashOfConfig":"556"},{"size":557,"mtime":1624460796000,"results":"609","hashOfConfig":"556"},{"size":903,"mtime":1630163252000,"results":"610","hashOfConfig":"556"},{"size":1336,"mtime":1635345036102,"results":"611","hashOfConfig":"556"},{"size":1741,"mtime":1631610596000,"results":"612","hashOfConfig":"556"},{"size":1837,"mtime":1629988150000,"results":"613","hashOfConfig":"556"},{"size":7963,"mtime":1635626803356,"results":"614","hashOfConfig":"556"},{"size":12505,"mtime":1630054638000,"results":"615","hashOfConfig":"556"},{"size":12547,"mtime":1635627812060,"results":"616","hashOfConfig":"556"},{"size":642,"mtime":1612336616000,"results":"617","hashOfConfig":"556"},{"size":10152,"mtime":1635628091854,"results":"618","hashOfConfig":"556"},{"size":7565,"mtime":1635628165592,"results":"619","hashOfConfig":"556"},{"size":1368,"mtime":1628347566000,"results":"620","hashOfConfig":"556"},{"size":1340,"mtime":1635602329776,"results":"621","hashOfConfig":"556"},{"size":6759,"mtime":1635625472717,"results":"622","hashOfConfig":"556"},{"size":2151,"mtime":1635272467662,"results":"623","hashOfConfig":"556"},{"size":4542,"mtime":1635617738063,"results":"624","hashOfConfig":"556"},{"size":6198,"mtime":1635617237634,"results":"625","hashOfConfig":"556"},{"size":5535,"mtime":1635619257103,"results":"626","hashOfConfig":"556"},{"size":2256,"mtime":1628350496000,"results":"627","hashOfConfig":"556"},{"size":3184,"mtime":1612336616000,"results":"628","hashOfConfig":"556"},{"size":7033,"mtime":1635625470194,"results":"629","hashOfConfig":"556"},{"size":2112,"mtime":1612336616000,"results":"630","hashOfConfig":"556"},{"size":1542,"mtime":1612336616000,"results":"631","hashOfConfig":"556"},{"size":2117,"mtime":1614172128000,"results":"632","hashOfConfig":"556"},{"size":1475,"mtime":1612336616000,"results":"633","hashOfConfig":"556"},{"size":1753,"mtime":1630068064000,"results":"634","hashOfConfig":"556"},{"size":1584,"mtime":1614171880000,"results":"635","hashOfConfig":"556"},{"size":439,"mtime":1630067888000,"results":"636","hashOfConfig":"556"},{"size":2118,"mtime":1612336616000,"results":"637","hashOfConfig":"556"},{"size":2002,"mtime":1630067516000,"results":"638","hashOfConfig":"556"},{"size":438,"mtime":1630067654000,"results":"639","hashOfConfig":"556"},{"size":1494,"mtime":1628348458000,"results":"640","hashOfConfig":"556"},{"size":1584,"mtime":1628349072000,"results":"641","hashOfConfig":"556"},{"size":1541,"mtime":1628347964000,"results":"642","hashOfConfig":"556"},{"size":2888,"mtime":1614172058000,"results":"643","hashOfConfig":"556"},{"size":5799,"mtime":1635626905732,"results":"644","hashOfConfig":"556"},{"size":2479,"mtime":1629710758000,"results":"645","hashOfConfig":"556"},{"size":1349,"mtime":1635373162040,"results":"646","hashOfConfig":"556"},{"size":2987,"mtime":1635626970797,"results":"647","hashOfConfig":"556"},{"size":3641,"mtime":1634908483349,"results":"648","hashOfConfig":"556"},{"size":3192,"mtime":1635627195178,"results":"649","hashOfConfig":"556"},{"size":3135,"mtime":1635627931170,"results":"650","hashOfConfig":"556"},{"size":1350,"mtime":1634908483320,"results":"651","hashOfConfig":"556"},{"size":1350,"mtime":1634908483321,"results":"652","hashOfConfig":"556"},{"size":1350,"mtime":1634908483339,"results":"653","hashOfConfig":"556"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rf2pcs",{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"882","messages":"883","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"888","messages":"889","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},"10nxwou",{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"900"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"900"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"900"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"900"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"900"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"900"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"900"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"951"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"900"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"951"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"900"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"900"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"951"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"900"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"951"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"900"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"900"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1003"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"900"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"951"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"951"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065","usedDeprecatedRules":"900"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"900"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"900"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"900"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"900"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"900"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"900"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"900"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092","usedDeprecatedRules":"900"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mqgqe0",{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/reportWebVitals.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/App.js",["1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/context/ThemeContext.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/store.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/context/ThemeDemo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/PostsReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/AuthReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/reducers/Reducers.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/index.js",["1342","1343","1344","1345","1346"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/actions/AuthActions.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/actions/PostTypes.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/Footer.js",["1347"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Todo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/Setting.js",["1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Widget.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Home.js",["1385","1386"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/DEX.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Transactions.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js",["1387","1388"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/MarketCapital.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/MyWallet.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/services/AuthService.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/PageTitle.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/SwiperSlider2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/WalletTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/OrderData.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/PreviousTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/CardSlider.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinDetailTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinDetailTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/ChatBox.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/SideBar.js",["1389","1390","1391","1392","1393","1394","1395","1396","1397","1398"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/NavHader.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/Header.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/pages/Editable.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/EthereumTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/OrderBlog.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/MoneroTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/LitecoinTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/QuickTradeTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/LitecoinTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/MoneroTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/QuickTradeTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/EthereumTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/EthereumTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/OrderBlog.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/LitecoinTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/MoneroTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/QuickTradeTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/TabContent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/layouts/nav/Logout.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart4.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/DEX/CoinCharts/CoinLineChart3.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart4.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/Boltz/LOANS/CoinCharts/CoinLineChart3.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/store/selectors/AuthSelectors.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/AMTC6_FE.js",["1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Setup.js",["1412","1413","1414"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/BlockchainData.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Token54u.js",["1415","1416","1417","1418","1419","1420","1421"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/Predeployed.js",["1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Notes.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Alerts.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/Chat.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/BoilerPlate_Ntt54/BoilerPlate_AcalaMandalaTC6/FrontEnd/HackathonChallenge/src/jsx/components/todelete_chatBox/MsgBox.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/index.js",[],["1438","1439"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/reportWebVitals.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/App.js",["1440","1441","1442","1443","1444","1445","1446","1447","1448"],"// import { lazy, Suspense, useEffect } from 'react';\r\nimport React, { lazy, Suspense, useEffect, useState, useCallback } from 'react';\r\nimport { web3Enable } from '@polkadot/extension-dapp';\r\nimport {setup, getGasPrice} from './Setup.js';     //Blockchain provider,signer setup and helper functions\r\n// import BlockchainData from './BlockchainData.js';\r\n// import Token54u from './Token54u.js';\r\n// import Predeployed from './Predeployed.js';   //Acala Mandala TC6 Predeployed contract\r\nimport {EVM_Setup, get_EVM_OraclePrices, TokenBindings} from './Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\n\r\nimport {API_Setup, decimals, update_CustomerAccount, customer_portfolio, accountLoans, loansOverview, setExtensionAPI, subscribeToAccountEvents, unsubscribeToAccountEvents, get_API_OraclePrices, oracle_API_Prices} from './AMTC6_API.js';          \r\n\r\n \r\n \r\n/// Components\r\nimport Index from \"./jsx\";\r\n/// Style\r\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./css/style.css\";\r\n\r\nlet EVMisSetup = false, APIisSetup = false;\r\n\r\n\r\nfunction App (props) {\r\n    const [setupSpecs,setSetupSpecs]            = useState({ wallet: null, provider: null, pair: null, connected: \"Not connected\", walletAddress: null });\r\n    const [blockChainSpecs,setBlockChainSpecs]  = useState({ networkName: undefined, chainID: undefined, blockNumber: undefined, gasPrice: undefined});\r\n    const [blockHeader, setBlockHeader]         = useState({ number: undefined , hash: undefined, size: undefined });\r\n    const [blockTimestamp, setBlockTimestamp]   = useState(undefined);\r\n\r\n    const [extension, setExtension] = useState();      //stores the polkadot browser extension\r\n    const [accountList, setAccountList] = useState();  //stores the list of accounts from the extensions\r\n\r\n    const [selectedAddress, setSelectedAddress] = useState(\"Choose Account\");\r\n    const [selectedAccountName, setSelectedAccountName] = useState(\"\");\r\n    const [selected_EVM_Address, setSelected_EVM_Address] = useState(\"\");\r\n\r\n    const [evm_api_state,setEvm_Api_State] = useState(false);\r\n\r\n    const [customerPortfolio, setCustomerPortfolio] = useState(\r\n          { \r\n              ACA: undefined , AUSD: undefined, DOT: undefined , LDOT: undefined, RENBTC: undefined  , KAR: undefined\r\n            , KUSD: undefined, KSM: undefined , LKSM: undefined, XBTC: undefined, POLKABTC: undefined, PLM: undefined \r\n            , PHA: undefined , HDT: undefined, BCG: undefined, SDN: undefined\r\n          }\r\n    );\r\n\r\n    const [customerPortfolioAnalytics, setCustomerPortfolioAnalytics] = useState();\r\n\r\n    const [oraclePrices,setOraclePrices] = useState({ ACA: undefined, DOT: undefined, LDOT: undefined, XBTC: undefined, RENBTC: undefined, POLKABTC: undefined, PLM: undefined, HDT: undefined, SDN: undefined , BCA: undefined  });\r\n    \r\n    const [total_CoinSupply, setTotal_CoinSupply] = useState();\r\n\r\n    const [customerLoans, setCustomerLoans] = useState();\r\n    const [loansOverviews, setLoansOverviews] = useState();\r\n\r\n    const [message_1, setMessage_1] = useState(\"Please select account\");\r\n        \r\n\r\n\r\n    const setSubstrateAccount = async (substrateAccount) => {\r\n          console.log(`App => setSubstrateAccount  substrateAccount: `,substrateAccount);\r\n          setSelectedAddress(substrateAccount.address);\r\n          setSelectedAccountName(substrateAccount.name);\r\n          switch (substrateAccount.address) {\r\n            case '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh' :    //Gillian\r\n              setSelected_EVM_Address(\"0xda186b64108b4e117a1bbec33098d6cd99f85b63\");\r\n              break;\r\n            case '5F1hqrYBhnhhkvYd1q9QzfXy8BYJJXtL3EKfYBkcBtpHRnHx' :    //Emma\r\n              setSelected_EVM_Address(\"0x5444d6aeb3760a87b2521f619d7ca9689b07e3bd\");\r\n              break;\r\n            case '5FNZdmuPipRa8fz5ab12Y8P2dKx9zFbMgNyDwoWQMLynbPg8' :    //Hellen\r\n              setSelected_EVM_Address(\"0x20518975941a280ec37b1285613b34446fb9f1d3\");\r\n              break;\r\n            case '5G9KtfNMn6mqFq5BJueXZWqvEppagLRQiK7Hkd5Ng9aTRdKC' :    //Olivia\r\n              setSelected_EVM_Address(\"0xeB0f1c5971CE15E6cfC154e835a111536917E36D\");\r\n              break;\r\n            default:\r\n              setSelected_EVM_Address(\"Substrate needs to be binded to EVM account\");\r\n              break;\r\n          }\r\n          // setSelected_EVM_Address(\"todo\");\r\n\r\n          setMessage_1('loading');\r\n\r\n          if (APIisSetup) \r\n          {\r\n            await update_CustomerAccount(substrateAccount.address, blockHeader);\r\n            setCustomerPortfolio(customer_portfolio)\r\n            console.log(`>>>>>>>>>>>> APP.JS   customer_portfolio: `,customer_portfolio);\r\n\r\n            setCustomerLoans(accountLoans);\r\n            setLoansOverviews(loansOverview);\r\n          }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const runSetup = async () => {\r\n          const { wallet, provider, pair } = await setup('AcalaMandalaTC6', process.env.REACT_APP_seed_Gillian)\r\n          console.log(`wallet address that signs transactions: `, await wallet.getAddress());\r\n          \r\n          let current_block_number = Number(await provider.api.query.system.number());\r\n          console.log(`current_block_number: ${current_block_number}`);  //blockNumber: 1544302\r\n          \r\n          const _setupSpecs = { wallet, provider, pair, connected: \"Connected to AcalaMandalaTC6\", walletAddress: await wallet.getAddress() };\r\n          setSetupSpecs(_setupSpecs);\r\n          setBlockChainSpecs({ networkName: (await provider.getNetwork()).name, chainID: (await provider.getNetwork()).chainId, blockNumber: await provider.getBlockNumber(), gasPrice: (await provider.getGasPrice()).toString() });\r\n  \r\n          //set up EVM \r\n          EVMisSetup = await EVM_Setup(_setupSpecs);\r\n\r\n          //set up Acala API\r\n          APIisSetup = await API_Setup(_setupSpecs);\r\n          // console.log(`APP.JS decimals: `,decimals)\r\n\r\n          //oracle_EVM_PricesHuman = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined };\r\n          const oracleEVMPrices = await get_EVM_OraclePrices(); //get fresh EVM Oracle Prices NOTE:ONLY DOTAUSD and XBTCAUSD IS NON ZERO\r\n          console.log(`APP.JS >>> oracleEVMPrices: `,oracleEVMPrices);\r\n\r\n          //oracle_API_Prices = { ACA: _ACAAUSD, DOT: _DOTAUSD, LDOT: _LDOTAUSD, XBTC: _XBTCAUSD, RENBTC: _RENBTCAUSD, POLKABTC: _POLKABTCAUSD, \r\n          //PLM: _PLMAUSD, HDT: _HDTAUSD, SDN: _SDNAUSD , BCA: _BCGAUSD  };\r\n          const oracleAPIPrices = await get_API_OraclePrices(); //get fresh API Oracle Prices NOTE:ONLY ACAUSD IS NON ZERO\r\n          // console.log(`APP.JS  oracleAPIPrices: `,oracleAPIPrices);\r\n          \r\n          oracleAPIPrices[\"DOT\"] = oracleEVMPrices[\"DOT\"];\r\n          oracleAPIPrices[\"XBTC\"] = oracleEVMPrices[\"RENBTC\"];\r\n            oracleAPIPrices[\"LDOT\"] = oracleEVMPrices[\"DOT\"];         //artificial\r\n            oracleAPIPrices[\"RENBTC\"] = oracleEVMPrices[\"RENBTC\"];    //artificial\r\n            oracleAPIPrices[\"POLKABTC\"] = oracleEVMPrices[\"RENBTC\"];  //artificial\r\n            oracleAPIPrices[\"PLM\"] = 47.8;                            //artificial\r\n            oracleAPIPrices[\"KSM\"] = 547.25;                          //artificial\r\n            oracleAPIPrices[\"LKSM\"] = 5472.5;                         //artificial\r\n            oracleAPIPrices[\"AUSD\"] = 1;                              //artificial\r\n            oracleAPIPrices[\"KUSD\"] = 1;                              //artificial\r\n            oracleAPIPrices[\"KAR\"] = 83.95;                           //artificial\r\n            oracleAPIPrices[\"SDN\"] = 64.75;                           //artificial\r\n            oracleAPIPrices[\"PHA\"] = 7.89;                           //artificial\r\n\r\n\r\n          setOraclePrices(oracleAPIPrices);\r\n          // console.log(`APP.JS  oracleAPIPricesADJUSTED: `,oracleAPIPrices);\r\n\r\n\r\n          const keys= Object.keys(TokenBindings);\r\n          let totalSupplyCoinSupply =[];\r\n          keys.forEach((item) => {\r\n            totalSupplyCoinSupply.push( TokenBindings[item].totalSupply );\r\n          });\r\n          // console.log(`APP.JS  totalSupplyCoinSupply: `,totalSupplyCoinSupply);\r\n          setTotal_CoinSupply(totalSupplyCoinSupply);\r\n\r\n          setEvm_Api_State(true);\r\n        }\r\n        runSetup();\r\n    \r\n        //enabling polkadot extension for the user to be able to sign transactions\r\n        async function enable() {\r\n          const extensions = await web3Enable(\"ACALA EXAMPLE\");\r\n          const extension =\r\n            extensions.find(({\r\n              name\r\n            }) => name === \"polkadot-js\") || null;\r\n    \r\n          // console.log(`web3Enable enable is run extension: `,extension);  \r\n          setExtension(extension);\r\n          setExtensionAPI(extension);\r\n        }\r\n        enable();\r\n    \r\n      }, []);   \r\n\r\n      //load accounts from extension\r\n    useEffect(() => {\r\n        if (extension) {\r\n        extension.accounts.get().then((list) => {\r\n            setAccountList(list);\r\n            console.log(`List of account from extension list: `,list);\r\n        });\r\n        }\r\n    }, [extension]);\r\n\r\n\r\n\r\n\r\n    // const calculatePortfolioAnalytics = useCallback(async () => {\r\n    useEffect( async () => {\r\n\r\n        if (selectedAddress && customerPortfolio && oraclePrices)\r\n        {\r\n            // let customer_portfolio = { ACA: undefined , AUSD: undefined, DOT: undefined , LDOT: undefined, RENBTC: undefined  , KAR: undefined\r\n            //   , KUSD: undefined, KSM: undefined , LKSM: undefined, XBTC: undefined, POLKABTC: undefined, PLM: undefined \r\n            //   , PHA: undefined , HDT: undefined, BCG: undefined, SDN: undefined};\r\n\r\n            // let oracle_API_Prices = { ACA: undefined, DOT: undefined, LDOT: undefined, XBTC: undefined, RENBTC: undefined, POLKABTC: undefined, PLM: undefined, HDT: undefined, SDN: undefined , BCA: undefined  };\r\n          \r\n            console.log(`APP.JS setCustomerPortfolioAnalytics ==> customerPortfolio:`,customerPortfolio);\r\n            console.log(`APP.JS setCustomerPortfolioAnalytics ==> oraclePrices: `,oraclePrices);\r\n\r\n            const totalIn_AUSD = Number(customerPortfolio[\"AUSD\"]);\r\n            const totalIn_KUSD = Number(customerPortfolio[\"KUSD\"]);\r\n            const totalIn_ACA = Number(customerPortfolio[\"ACA\"]) * Number(oraclePrices[\"ACA\"]) ;\r\n            const totalIn_DOT = Number(customerPortfolio[\"DOT\"]) * Number(oraclePrices[\"DOT\"]) ;\r\n            const totalIn_LDOT = Number(customerPortfolio[\"LDOT\"]) * Number(oraclePrices[\"LDOT\"]) ;\r\n            const totalIn_XBTC = Number(customerPortfolio[\"RENBTC\"]) * Number(oraclePrices[\"RENBTC\"]) ;\r\n            const totalIn_RENBTC = Number(customerPortfolio[\"XBTC\"]) * Number(oraclePrices[\"XBTC\"]) ;\r\n            const totalIn_POLKABTC = Number(customerPortfolio[\"POLKABTC\"]) * Number(oraclePrices[\"POLKABTC\"]) ;\r\n\r\n            const totalIn_Stablecoins =totalIn_AUSD + totalIn_KUSD;\r\n            const totalIn_Tokens =  totalIn_ACA + totalIn_DOT + totalIn_LDOT + totalIn_XBTC + totalIn_RENBTC + totalIn_POLKABTC;\r\n            const totalIn_Vaults = 1000;\r\n            const totalIn_Loans  = 1000;\r\n            const totalBalance = totalIn_Stablecoins + totalIn_Tokens + totalIn_Vaults + totalIn_Loans;\r\n            const totalFree   = totalIn_Stablecoins + totalIn_Tokens;\r\n            const totalLocked = totalIn_Vaults + totalIn_Loans;\r\n\r\n\r\n\r\n            setCustomerPortfolioAnalytics({totalBalance, totalFree, totalLocked, totalIn_Stablecoins, totalIn_Tokens, totalIn_Vaults, totalIn_Loans,\r\n              totalIn_AUSD, totalIn_KUSD, totalIn_ACA, totalIn_DOT, totalIn_LDOT, totalIn_XBTC, totalIn_RENBTC, totalIn_POLKABTC  });\r\n\r\n            console.log(`APP.JS setCustomerPortfolioAnalytics ==> `,{totalBalance, totalFree, totalLocked, totalIn_Stablecoins, totalIn_Tokens, totalIn_Vaults, totalIn_Loans,\r\n                totalIn_AUSD, totalIn_KUSD, totalIn_ACA, totalIn_DOT, totalIn_LDOT, totalIn_XBTC, totalIn_RENBTC, totalIn_POLKABTC  });\r\n  \r\n        }\r\n    },[selectedAddress,customerPortfolio,oraclePrices]);\r\n\r\n\r\n  //parachain events setup\r\n  useEffect(() => {\r\n\r\n    //#region  \r\n    const parachain = async (provider) => {\r\n        console.log(`App.js Parachain is run at  Timestmap: ${new Date()}`);\r\n    \r\n        const api = provider.api;\r\n        \r\n        //get parachain stats\r\n        //*** CONSTS ***\r\n        console.log('The length of an epoch (session) in Babe: ', api.consts.babe.epochDuration.toNumber());\r\n        console.log('The amount required to create a new account: ',api.consts.balances.existentialDeposit.toNumber());\r\n        console.log('The amount required per byte on an extrinsic: ',api.consts.transactionPayment.transactionByteFee.toNumber());\r\n    \r\n    \r\n        //#region *** STATE QUERIES ***\r\n            //ACCOUNT ADDRESS\r\n            // const ADDR = '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh';         //GILLIAN Substrate Address 5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh\r\n            const Gillian_address = '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh'; \r\n            // const Emma_address    = '5F1hqrYBhnhhkvYd1q9QzfXy8BYJJXtL3EKfYBkcBtpHRnHx'; \r\n            // const Hellen_address  = '5FNZdmuPipRa8fz5ab12Y8P2dKx9zFbMgNyDwoWQMLynbPg8'; \r\n    \r\n            //Retrieve the account balance & nonce via the system module  THE 3 BLOCKS BELOW ARE EQUIVALENT\r\n            //1\r\n            // Retrieve the last timestamp\r\n            // const now = await api.query.timestamp.now();\r\n            // const { nonce, data: balance } = await api.query.system.account(Gillian_address);\r\n            //2\r\n            // const [now, { nonce, data: balance }] = await Promise.all([\r\n            //   api.query.timestamp.now(),\r\n            //   api.query.system.account(Gillian_address)\r\n            // ]);\r\n            // console.log(`${now}: balance of ${balance.free} and a nonce of ${nonce}`);\r\n            //3 Account Balances (from acala.js)\r\n            const accountData = await api.query.system.account(Gillian_address);\r\n            console.log(`polkadot_Parachain Gillian_address  accountData.toHuman():  `,accountData.toHuman());\r\n        //#endregion\r\n    \r\n    \r\n    \r\n        //#region *** RPC QUERIES ***\r\n        //All API endpoints such as api.query, api.tx or api.derive just wrap RPC calls, providing information in the encoded format as expected by the node\r\n        //Simple Connect Information 1 AND 2 ARE EQUIVALENT\r\n        //1\r\n        // const chain = await api.rpc.system.chain();           // Retrieve the chain name \r\n        // const lastHeader = await api.rpc.chain.getHeader();   // Retrieve the latest header\r\n        // console.log(`${chain}: last block #${lastHeader.number} has hash ${lastHeader.hash}`);\r\n    \r\n        //2 Simple Connect Information\r\n        const [chain, nodeName, nodeVersion, lastHeader] = await Promise.all([\r\n          api.rpc.system.chain(),\r\n          api.rpc.system.name(),\r\n          api.rpc.system.version(),\r\n          api.rpc.chain.getHeader()\r\n        ]);\r\n        console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion} last block #${lastHeader.number} has hash ${lastHeader.hash}  lastHeader: `,lastHeader);\r\n        //#endregion\r\n         \r\n    \r\n    \r\n        //#region *** SUBSCRIPTIONS ***\r\n    \r\n        //Subscribe to the new headers on-chain. The callback is fired when new headers are found, the call itself returns a promise with a subscription that can be used to unsubscribe from the newHead subscription\r\n        // We only display a couple, then unsubscribe\r\n        let count = 0;\r\n        const unsubscribe_NewsHeads = await api.rpc.chain.subscribeNewHeads(async (header) => {\r\n            console.log(`count:${count} Chain is at block: #${header.number} ${typeof header.number} has hash ${header.hash} ${typeof header.hash}  size: ${header.size} ${typeof header.size} header: `,header);\r\n            setBlockHeader({number: `${header.number}`, hash: `${header.hash}`, size: header.size});\r\n\r\n            await get_EVM_OraclePrices();   //get fresh Oracle Prices\r\n\r\n            if (++count > 5) {\r\n              console.log(`We will now unsubscribe new Headers of the parachain`);\r\n              unsubscribe_NewsHeads();\r\n            }\r\n        });\r\n\r\n    \r\n    \r\n        // Retrieve the current timestamp via subscription\r\n        const unsubscribe_Timestamp = await api.query.timestamp.now((moment) => {\r\n            console.log(`count:${count} The last block has a timestamp of ${moment} }`);\r\n            setBlockTimestamp(parseInt(moment));\r\n    \r\n            if (count > 5) {\r\n                console.log(\"We will now unsubscribe from listening to new headers timestamp\");\r\n                unsubscribe_Timestamp();\r\n            }\r\n        });\r\n        //remember that further up we had the equivalent without any function as a parmeter that runs only once\r\n        // const now = await api.query.timestamp.now();\r\n    \r\n        //FOR ANY SUBSCRIPTION WITH A PARAMETER INPUT ALL PARAMETRS FIRST AND AT THE END INCLUDE THE CALLBACK FUNCTION\r\n        // Subscribe to balance changes for our account\r\n        // const unsub2 = await api.query.system.account(ADDR, ({ nonce, data: balance }) => {\r\n        //   console.log(`free balance is ${balance.free} with ${balance.reserved} reserved and a nonce of ${nonce}`);\r\n        // });\r\n    \r\n        //#endregion\r\n    \r\n    \r\n        //#region MULTIPLE QUERIES AT ONCE TO OPTIMISE COMMUNICATION WITH THE NODE\r\n        // => Multi queries, same type\r\n        //Where possible, the use of multi queries are encouraged since it tracks a number of state entries over a single RPC call, instead of making a call for each single item. In addition it allows you to have a single callback to track changes. For queries of the same type we can use .multi, for example to retrieve the balances of a number of accounts at once -\r\n        //Example 1\r\n        // Subscribe to balance changes for 2 accounts, ADDR1 & ADDR2 (already defined)\r\n        // const unsub = await api.query.system.account.multi([ADDR1, ADDR2], (balances) => {\r\n        //   const [{ data: balance1 }, { data: balance2 }] = balances;\r\n    \r\n        //   console.log(`The balances are ${balance1.free} and ${balance2.free}`);\r\n        // });\r\n    \r\n        //Example 2\r\n        // Retrieve a snapshot of the validators\r\n        // (all active & waiting based on ValidatorPrefs storage)\r\n        // const validatorKeys = await api.query.staking.validators.keys();\r\n        // Subscribe to the balances for these accounts\r\n        // const unsub = await api.query.balances.account.multi(validatorKeys, (balances) => {\r\n        //   console.log(`The nonce and free balances are: ${balances.map(([nonce, { free }]) => [nonce, free])}`);\r\n        // });\r\n    \r\n    \r\n        // => Multi queries, distinct types\r\n        // The previous .multi examples assumes that we do queries for the same types, i.e. we retrieve the balances for a number of accounts. However, there is also a need to retrieve various distinct types, as an example we would like to track the block timestamp in addition to the nonce and balance of a specific account. \r\n        // To cater for this, the api has a specific api.queryMulti interface that can be used to perform this query -\r\n        // Subscribe to the timestamp, our index and balance\r\n        // The above example certainly does not quite look as ergonomic and clean, but the API needs to understand \r\n        // (a) which are all the calls we need to make and (b) the calls and their params (if required). So breaking it down -\r\n        // const unsub = await api.queryMulti([\r\n        //   api.query.timestamp.now,\r\n        //   [api.query.system.account, ADDR]\r\n        // ], ([now, { nonce, data: balance }]) => {\r\n        //   console.log(`${now}: balance of ${balance.free} and a nonce of ${nonce}`);\r\n        // });\r\n        //#endregion\r\n    \r\n        //#region Query extras  This section will aim to extend that knowledge showing some other features and utilities that are available on the api.query interfaces.\r\n        //State at a specific block\r\n          // Quite often it is useful (taking pruning into account, more on this later) to retrieve the state at a specific block. For instance we may wish to retrieve the current balance as well as the balance at a previous block for a specific account -\r\n          // Retrieve the current block header\r\n          // const lastHdr = await api.rpc.chain.getHeader();\r\n          \r\n          //=> at\r\n          // Retrieve the balance at both the current and the parent hashes\r\n          // const [{ data: balanceNow }, { data: balancePrev }] = await Promise.all([\r\n          //   api.query.system.account.at(lastHdr.hash, ADDR),\r\n          //   api.query.system.account.at(lastHdr.parentHash, ADDR)\r\n          // ]);\r\n          \r\n          // Display the difference\r\n          // console.log(`The delta was ${balanceNow.free.sub(balancePrev.free)}`);  \r\n          // Retrieve the timestamp for the previous block\r\n          // const momentPrev = await api.query.timestamp.now.at(lastHdr.parentHash);\r\n          // The .at queries are all single-shot, i.e. there are no subscription option to these, since the state for a previous block should be static. (This is true to a certain extent, i.e. when blocks have been finalized).\r\n          // An additional point to take care of (briefly mentioned above), is state pruning. By default a Polkadot/Substrate node will only keep state for the last 256 blocks, unless it is explicitly run in archive mode. This means that querying state further back than the pruning period will result in an error returned from the Node. (Generally most public RPC nodes only run with default settings, which includes aggressive state pruning)\r\n    \r\n          //=> range\r\n          // State for a range of blocks  In addition to the .at queries, you can also query state starting at a specific historic block and up to either a specified or the latest blocks. This is done via the .range([from, to?], <...opt params>): [Hash, Type][] query. As an example -\r\n          // Retrieve the current block header\r\n          // const lastHdr = await api.rpc.chain.getHeader();\r\n          // const startHdr = await api.rpc.chain.getBlockHash(lastHdr.number.unwrap().subn(500));\r\n          // console.log(`lastHdr hash is: `,lastHdr.hash);\r\n    \r\n          // retrieve the range of changes\r\n          // const changes = await api.query.system.account.range([startHdr],ADDR);\r\n    \r\n          // changes.forEach(([hash, value]) => {\r\n          //   console.log(hash.toHex(), value.toHuman());\r\n          // });\r\n    \r\n    \r\n          //=> Map keys & entries\r\n    \r\n          //=> State entries\r\n          // In addition to using api.query to make actual on-chain queries, it can also be used to retrieve some information on the state entries. For instance to retrieve both the hash and size of an existing entry, we can make the following calls -\r\n          // Retrieve the hash & size of the entry as stored on-chain\r\n          // const [entryHash, entrySize] = await Promise.all([\r\n          //   api.query.system.account.hash(ADDR),\r\n          //   api.query.system.account.size(ADDR)\r\n          // ]);\r\n          // Output the info\r\n          // console.log(`The current size is ${entrySize} bytes with a hash of ${entryHash}`);\r\n    \r\n    \r\n          //=> Entry metadata\r\n          // It has been explained that the api.query interfaces are decorated from the metadata. This also means that there is some information that we can gather from the entry, as decorated -\r\n          // Extract the info\r\n          // const { meta, method, section } = api.query.system.account;\r\n          // The section & method is an indication of where it is exposed on the API. In addition the meta holds an array with the metadata documentation for the entry.\r\n    \r\n          // Display some info on a specific entry\r\n          // console.log(`${section}.${method}: ${meta.documentation.join(' ')}`);    //system.account:  The full account information for a particular account ID.\r\n          // console.log(`query key: ${api.query.system.account.key(ADDR)}`);\r\n          // The key endpoint requires some explanation. In the chain state, the key values (identified by the module, method & params) are hashed and this is used as a lookup. So underlying a single-shot query would utilize the api.rpc.state.getStorage entry, passing the output of key (which is a hashed representation of the values). Apart from the hashing, the API also takes care of type formatting, handling optional values and merging results across multiple subscriptions.\r\n          \r\n          //#endregion\r\n          //#region *** KEYRING ***\r\n            //#region Additionally you can sign and verify using the pairs. This is the same internally to the API when constructing transactions -\r\n            // // Some helper functions used here\r\n            // // import { stringToU8a, u8aToHex } from '@polkadot/util';\r\n            // const { stringToU8a, u8aToHex } = require('@polkadot/util');\r\n    \r\n            // // Convert message, sign and then verify\r\n            // const message = stringToU8a('this is our message');\r\n            // const signature = alice.sign(message);\r\n            // const isValid = alice.verify(message, signature);\r\n            // // Log info\r\n            // console.log(`The signature ${u8aToHex(signature)}, is ${isValid ? '' : 'in'}valid`);\r\n          //#endregion\r\n                //#region *** TRANSACTIONS ****\r\n        //   // Transaction endpoints are exposed, as determined by the metadata, on the api.tx endpoint. These allow you to submit transactions for inclusion in blocks, be it transfers, setting information or anything else your chain supports.\r\n    \r\n        //   //=> Simple transactions\r\n        //   // // Sign and send a transfer from Gillian to Emma To start off, let's make a balance transfer from Gillian to Emma.\r\n        //   // const txHash = await api.tx.balances\r\n        //   //   .transfer(Emma.address, 1234567)\r\n        //   //   .signAndSend(Gillian);\r\n          \r\n            \r\n        //   // // Show the hash\r\n        //   // console.log(`Gillian made a transfer to Emma. Submitted with hash ${txHash}`);\r\n        //   // // We construct a transaction by calling balances.transfer(<accountId>, <value>) with the required params and then as a next step we submit it to the node.\r\n        //   // // As with all other API operations, the to params just needs to be \"account-like\" and the value params needs to be \"number-like\", the API will take care of encoding and conversion into the correct format.\r\n        //   // // The result for this call (we will deal with subscriptions in a short while), is the transaction hash. This is a hash of the data and receiving this does not mean that transaction has been included, but rather only that it has been accepted for propagation by the node. (It can still fail on execution, we will handle this in some of our follow-up sections.)\r\n    \r\n        //   //=> Under the hood\r\n        //   // Despite the single-line format of signAndSend, there is a lot happening under the hood (and all of this can be manually provided) -\r\n        //   // Based on the sender, the API will query system.account (or system.accountNonce on older chains) to determine the next nonce to use\r\n        //   // The API will retrieve the current block hash and use it to create a mortal transaction, i.e. the transaction will only be valid for a limited number of blocks (by default this is 5 mins at 6s block times)\r\n        //   // It will construct a payload and sign this, this includes the genesisHash, the blockHash for the start of the mortal era as well as the current chain specVersion\r\n        //   // The transaction is submitted to the node\r\n        //   // As suggested, you can override all of this, i.e. by retrieving the nonce yourself and passing that as an option, i.e. signAndSend(alice, { nonce: aliceNonce }), this could be useful when manually tracking and submitting transactions in bulk.\r\n    \r\n    \r\n        //   //=> Transaction subscriptions  See when the transaction is incuded in a Block and when it is Finalized\r\n        //   // Transaction inclusion  To send a transaction and then waiting until it has been included in a block, we will use a subscription interface instead of just waiting for the transaction pool addition to yield the extrinsic hash.\r\n        //   // Make a transfer from Alice to Emma, waiting for inclusion\r\n        //   // const unsub = await api.tx.balances\r\n        //   //   .transfer(Emma.address, 12345)\r\n        //   //   .signAndSend(alice, (result) => {\r\n        //   //     // The result object has 2 parts, events (to to covered in the next section) and the status enum.\r\n        //   //     // When the status enum is in Finalized state (checked via isFinalized), the underlying value contains the block hash of the block where the transaction has been finalized. \r\n        //   //     // Finalized will follow InBlock, which is the block where the transaction has been included. \r\n        //   //     // InBlock does not mean the block is finalized, but rather applies to the transaction state, where Finalized means that the transaction cannot be forked off the chain.\r\n    \r\n        //   //     console.log(`Current status is ${result.status}`);\r\n    \r\n        //   //     if (result.status.isInBlock) {\r\n        //   //       console.log(`Transaction included at blockHash ${result.status.asInBlock}`);\r\n        //   //     } else if (result.status.isFinalized) {\r\n        //   //       console.log(`Transaction finalized at blockHash ${result.status.asFinalized}`);\r\n        //   //       unsub();\r\n        //   //     }\r\n        //   //   });\r\n    \r\n    \r\n        //   //=> Transaction events\r\n        //   // Any transaction will emit events, as a bare minimum this will always be either a system.ExtrinsicSuccess or system.ExtrinsicFailed event for the specific transaction. \r\n        //   // These provide the overall execution result for the transaction, i.e. execution has succeeded or failed.\r\n    \r\n        //   // Depending on the transaction sent, some other events may however be emitted, for instance for a balances.transfer this could include one or more of Transfer, NewAccount or ReapedAccount, as defined in the substrate balances event defaults (http://polkadot.js.org/docs/substrate/events/#balances).\r\n        //   // To display or act on these events, we can do the following -\r\n          \r\n        //   // // Make a transfer from Alice to Emma, waiting for inclusion\r\n        //   // const unsub = await api.tx.balances\r\n        //   //   .transfer(Emma.address, 123456789)\r\n        //   //   .signAndSend(Gillian, ({ events = [], status }) => {\r\n        //   //     console.log(`Current status is ${status.type}`);\r\n          \r\n        //   //     if (status.isFinalized) {\r\n        //   //       console.log(`Transaction included at blockHash ${status.asFinalized}`);\r\n          \r\n        //   //       // Loop through Vec<EventRecord> to display all events\r\n        //   //       events.forEach(({ phase, event: { data, method, section } }) => {\r\n        //   //         console.log(`\\t' ${phase}: ${section}.${method}:: ${data}`);\r\n        //   //       });\r\n          \r\n        //   //       unsub();\r\n        //   //     }\r\n    \r\n        //   //   });\r\n        //   //   // Be aware that when a transaction status is isFinalized, it means it is included, but it may still have failed - for instance \r\n        //   //   // if you try to send a larger amount that you have free, the transaction is included in a block, however from a end-user perspective the transaction failed since the transfer did not occur. \r\n        //   //   // In these cases a system.ExtrinsicFailed event will be available in the events array.\r\n    \r\n    \r\n        //   //=> Payment information\r\n        //   // The Polkadot/Substrate RPC endpoints exposes weight/payment information that takes an encoded extrinsic and calculates the on-chain weight fees for it. \r\n        //   // A wrapper for this is available on the tx itself, taking exactly the same parameters as you would pass to a normal .signAndSend operation, specifically .paymentInfo(sender, <any options>)\r\n          \r\n        //   // construct a transaction\r\n        //   const transfer = api.tx.balances.transfer(Emma.address, 22334455);\r\n    \r\n        //   // retrieve the payment info\r\n        //   const { partialFee, weight } = await transfer.paymentInfo(Gillian);\r\n        //   console.log(`transaction will have a weight of ${weight}, with ${partialFee.toHuman()} weight fees`);\r\n    \r\n        //   // send the tx\r\n        //   const unsub = await transfer\r\n        //   .signAndSend(Gillian, ({ events = [], status }) => {\r\n        //     console.log(`Current status is ${status.type}`);\r\n        \r\n        //     if (status.isFinalized) {\r\n        //       console.log(`Transaction included at blockHash ${status.asFinalized}`);\r\n        \r\n        //       // Loop through Vec<EventRecord> to display all events\r\n        //       events.forEach(({ phase, event: { data, method, section } }) => {\r\n        //         console.log(`\\t' ${phase}: ${section}.${method}:: ${data}`);\r\n        //       });\r\n        \r\n        //       unsub();\r\n        //     }\r\n    \r\n        //   });\r\n    \r\n          //#endregion\r\n    \r\n    }\r\n\r\n    if (setupSpecs.provider) parachain(setupSpecs.provider)\r\n    else console.log(`App.js => setupSpecs.provider is undefined`);\r\n    //#endregion  parachin events setup\r\n\r\n  }, [setupSpecs.provider]);  \r\n\r\n\r\n    //function get called from any Component for latest gasPrice\r\n    const getCurrentGasPrice = async () => {\r\n        const gasPrice = await getGasPrice(setupSpecs.provider);\r\n        setBlockChainSpecs({gasPrice});\r\n        return gasPrice;\r\n    };\r\n\r\n    \r\n\t\treturn (\r\n\t\t\t<>\r\n                <Suspense fallback={\r\n                    <div id=\"preloader\">\r\n                        <div className=\"sk-three-bounce\">\r\n                            <div className=\"sk-child sk-bounce1\"></div>\r\n                            <div className=\"sk-child sk-bounce2\"></div>\r\n                            <div className=\"sk-child sk-bounce3\"></div>\r\n                        </div>\r\n                    </div>  \r\n                   }\r\n                >\r\n                    <Index setupSpecs={setupSpecs} evm_api_state={evm_api_state} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} \r\n                           blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} \r\n                           setSubstrateAccount={setSubstrateAccount} selectedAddress={selectedAddress} \r\n                           selectedAccountName={selectedAccountName} selected_EVM_Address={selected_EVM_Address} \r\n                           customerPortfolio={customerPortfolio} message_1={message_1} oraclePrices={oraclePrices} \r\n                           customerPortfolioAnalytics={customerPortfolioAnalytics} total_CoinSupply={total_CoinSupply} \r\n                           customerLoans={customerLoans} loansOverviews={loansOverviews} />\r\n                </Suspense>\r\n            </>\r\n        );\r\n\t\r\n};\r\n\r\n\r\nexport default App;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/store.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/context/ThemeContext.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/Setup.js",["1449","1450","1451"],"//#region SETUP A PROVIDER AND A WALLET(SIGNER using test accounts or account with a seed) \nimport { TestAccountSigningKey, TestProvider, Provider, Signer } from '@acala-network/bodhi';\nimport { ApiPromise, WsProvider, Keyring } from '@polkadot/api';\nimport { createTestPairs } from '@polkadot/keyring/testingPairs';\nimport { Children } from 'react';\n\n\nconst setup = async (wsURL = 'AcalaMandalaTC6', seed = null) => {\n\n        let WS_URL;\n        if (wsURL === 'local') WS_URL = process.env.REACT_APP_WS_URL_LOCAL;\n        else if (wsURL === 'AcalaMandalaTC6') WS_URL = process.env.REACT_APP_WS_URL_AcalaMandalaTC6; \n  \n        const provider = new Provider({\n            provider: new WsProvider(WS_URL),\n        })\n  \n        await provider.api.isReady;\n  \n        let pair;\n  \n        if (seed) { \n            const keyring = new Keyring({ type: 'sr25519' });\n            pair = keyring.addFromUri(seed);\n        } else {\n            const testPairs = createTestPairs()\n            pair = testPairs.alice\n        }\n  \n        const signingKey = new TestAccountSigningKey(provider.api.registry);\n        signingKey.addKeyringPair(pair);\n        \n        const wallet = new Signer(provider, pair.address, signingKey);\n\n        // parachain(provider);    //subscribes to Parachain Events   //Moved this part to BlockchainData\n  \n        return { wallet, provider, pair };\n};\n\n\n//creates a Wallet for a customer so he can sign transactions for a smart contract\nconst createWallet = (provider=null, seed = null) => {\n\n    if (!provider || !seed)\n    {\n        console.log(`Setup.js => createWallet provider and/or seed have not been provided`);\n        return\n    }\n\n    console.log('Provider and Seed have been provided. Creating Wallet ...');\n    const keyring = new Keyring({ type: 'sr25519' });\n    const pair = keyring.addFromUri(seed);\n\n    const signingKey = new TestAccountSigningKey(provider.api.registry);\n    signingKey.addKeyringPair(pair);\n    \n    const wallet = new Signer(provider, pair.address, signingKey);\n\n    return wallet;\n};\n\n\nconst getSigner = (seed = null) => {\n  if (!seed) return null;\n  const keyring = new Keyring({ type: \"sr25519\" });\n  // Add seed to our keyring to be able to signAndSend transactions\n  return keyring.addFromMnemonic(seed);\n};\n\n\nconst getGasPrice = async (provider) => {\n    let gsPrice = null;\n    if (provider) {\n      console.log(`Provider is now set up`);\n      gsPrice = (await provider.getGasPrice()).toString();\n    }\n    else  console.log(`Provider is NOT set up yet`);\n    console.log(`getCurrentGasPrice has been run on Setup.js gsPrice: `,gsPrice);    \n\n    return gsPrice;\n};\n\n\n\n//#region parachain  //Moved this part to App.JS\n/*\nconst parachain = async (provider) => {\n\n    //A LOT OF THIS WORK HERE CAN BE FOUND IN ANOTHER FOLDER \"AcalaApi_Example_Ang\"\n\n    console.log(`polkadot_Parachain is run in Setup.js at  Timestmap: ${new Date()}`);\n\n    //get parachain stats\n    //provider.api\n    const api = provider.api;\n\n    //*** CONSTS ***\n    console.log('The length of an epoch (session) in Babe: ', api.consts.babe.epochDuration.toNumber());\n    console.log('The amount required to create a new account: ',api.consts.balances.existentialDeposit.toNumber());\n    console.log('The amount required per byte on an extrinsic: ',api.consts.transactionPayment.transactionByteFee.toNumber());\n\n\n    //#region *** STATE QUERIES ***\n        //ACCOUNT ADDRESS\n        // const ADDR = '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh';         //GILLIAN Substrate Address 5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh\n        const Gillian_address = '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh'; \n        // const Emma_address    = '5F1hqrYBhnhhkvYd1q9QzfXy8BYJJXtL3EKfYBkcBtpHRnHx'; \n        // const Hellen_address  = '5FNZdmuPipRa8fz5ab12Y8P2dKx9zFbMgNyDwoWQMLynbPg8'; \n\n        //Retrieve the account balance & nonce via the system module  THE 3 BLOCKS BELOW ARE EQUIVALENT\n        //1\n        // Retrieve the last timestamp\n        // const now = await api.query.timestamp.now();\n        // const { nonce, data: balance } = await api.query.system.account(Gillian_address);\n        //2\n        // const [now, { nonce, data: balance }] = await Promise.all([\n        //   api.query.timestamp.now(),\n        //   api.query.system.account(Gillian_address)\n        // ]);\n        // console.log(`${now}: balance of ${balance.free} and a nonce of ${nonce}`);\n        //3 Account Balances (from acala.js)\n        const accountData = await api.query.system.account(Gillian_address);\n        console.log(`polkadot_Parachain Gillian_address  accountData.toHuman():  `,accountData.toHuman());\n    //#endregion\n\n\n\n    //#region *** RPC QUERIES ***\n    //All API endpoints such as api.query, api.tx or api.derive just wrap RPC calls, providing information in the encoded format as expected by the node\n    //Simple Connect Information 1 AND 2 ARE EQUIVALENT\n    //1\n    // const chain = await api.rpc.system.chain();           // Retrieve the chain name \n    // const lastHeader = await api.rpc.chain.getHeader();   // Retrieve the latest header\n    // console.log(`${chain}: last block #${lastHeader.number} has hash ${lastHeader.hash}`);\n\n    //2 Simple Connect Information\n    const [chain, nodeName, nodeVersion, lastHeader] = await Promise.all([\n      api.rpc.system.chain(),\n      api.rpc.system.name(),\n      api.rpc.system.version(),\n      api.rpc.chain.getHeader()\n    ]);\n    console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion} last block #${lastHeader.number} has hash ${lastHeader.hash}  lastHeader: `,lastHeader);\n    //#endregion\n     \n\n\n    //#region *** SUBSCRIPTIONS ***\n\n    //Subscribe to the new headers on-chain. The callback is fired when new headers are found, the call itself returns a promise with a subscription that can be used to unsubscribe from the newHead subscription\n    // We only display a couple, then unsubscribe\n    let count = 0;\n    const unsubscribe_NewsHeads = await api.rpc.chain.subscribeNewHeads((header) => {\n         console.log(`count:${count} Chain is at block: #${header.number} has hash ${header.hash}  header: `,header);\n\n         if (++count > 5) {\n            console.log(`We will now unsubscribe new Headers of the parachain`);\n            unsubscribe_NewsHeads();\n            // process.exit(0);\n          }\n    });\n\n\n    // Retrieve the current timestamp via subscription\n    const unsubscribe_Timestamp = await api.query.timestamp.now((moment) => {\n        console.log(`count:${count} The last block has a timestamp of ${moment}`);\n\n        if (count > 5) {\n            console.log(\"We will now unsubscribe from listening to new headers timestamp\");\n            unsubscribe_Timestamp();\n        }\n    });\n    //remember that further up we had the equivalent without any function as a parmeter that runs only once\n    // const now = await api.query.timestamp.now();\n\n    //FOR ANY SUBSCRIPTION WITH A PARAMETER INPUT ALL PARAMETRS FIRST AND AT THE END INCLUDE THE CALLBACK FUNCTION\n    // Subscribe to balance changes for our account\n    // const unsub2 = await api.query.system.account(ADDR, ({ nonce, data: balance }) => {\n    //   console.log(`free balance is ${balance.free} with ${balance.reserved} reserved and a nonce of ${nonce}`);\n    // });\n\n    //#endregion\n\n\n    //#region MULTIPLE QUERIES AT ONCE TO OPTIMISE COMMUNICATION WITH THE NODE\n    // => Multi queries, same type\n    //Where possible, the use of multi queries are encouraged since it tracks a number of state entries over a single RPC call, instead of making a call for each single item. In addition it allows you to have a single callback to track changes. For queries of the same type we can use .multi, for example to retrieve the balances of a number of accounts at once -\n    //Example 1\n    // Subscribe to balance changes for 2 accounts, ADDR1 & ADDR2 (already defined)\n    // const unsub = await api.query.system.account.multi([ADDR1, ADDR2], (balances) => {\n    //   const [{ data: balance1 }, { data: balance2 }] = balances;\n\n    //   console.log(`The balances are ${balance1.free} and ${balance2.free}`);\n    // });\n\n    //Example 2\n    // Retrieve a snapshot of the validators\n    // (all active & waiting based on ValidatorPrefs storage)\n    // const validatorKeys = await api.query.staking.validators.keys();\n    // Subscribe to the balances for these accounts\n    // const unsub = await api.query.balances.account.multi(validatorKeys, (balances) => {\n    //   console.log(`The nonce and free balances are: ${balances.map(([nonce, { free }]) => [nonce, free])}`);\n    // });\n\n\n    // => Multi queries, distinct types\n    // The previous .multi examples assumes that we do queries for the same types, i.e. we retrieve the balances for a number of accounts. However, there is also a need to retrieve various distinct types, as an example we would like to track the block timestamp in addition to the nonce and balance of a specific account. \n    // To cater for this, the api has a specific api.queryMulti interface that can be used to perform this query -\n    // Subscribe to the timestamp, our index and balance\n    // The above example certainly does not quite look as ergonomic and clean, but the API needs to understand \n    // (a) which are all the calls we need to make and (b) the calls and their params (if required). So breaking it down -\n    // const unsub = await api.queryMulti([\n    //   api.query.timestamp.now,\n    //   [api.query.system.account, ADDR]\n    // ], ([now, { nonce, data: balance }]) => {\n    //   console.log(`${now}: balance of ${balance.free} and a nonce of ${nonce}`);\n    // });\n    //#endregion\n\n    //#region Query extras  This section will aim to extend that knowledge showing some other features and utilities that are available on the api.query interfaces.\n    //State at a specific block\n      // Quite often it is useful (taking pruning into account, more on this later) to retrieve the state at a specific block. For instance we may wish to retrieve the current balance as well as the balance at a previous block for a specific account -\n      // Retrieve the current block header\n      // const lastHdr = await api.rpc.chain.getHeader();\n      \n      //=> at\n      // Retrieve the balance at both the current and the parent hashes\n      // const [{ data: balanceNow }, { data: balancePrev }] = await Promise.all([\n      //   api.query.system.account.at(lastHdr.hash, ADDR),\n      //   api.query.system.account.at(lastHdr.parentHash, ADDR)\n      // ]);\n      \n      // Display the difference\n      // console.log(`The delta was ${balanceNow.free.sub(balancePrev.free)}`);  \n      // Retrieve the timestamp for the previous block\n      // const momentPrev = await api.query.timestamp.now.at(lastHdr.parentHash);\n      // The .at queries are all single-shot, i.e. there are no subscription option to these, since the state for a previous block should be static. (This is true to a certain extent, i.e. when blocks have been finalized).\n      // An additional point to take care of (briefly mentioned above), is state pruning. By default a Polkadot/Substrate node will only keep state for the last 256 blocks, unless it is explicitly run in archive mode. This means that querying state further back than the pruning period will result in an error returned from the Node. (Generally most public RPC nodes only run with default settings, which includes aggressive state pruning)\n\n      //=> range\n      // State for a range of blocks  In addition to the .at queries, you can also query state starting at a specific historic block and up to either a specified or the latest blocks. This is done via the .range([from, to?], <...opt params>): [Hash, Type][] query. As an example -\n      // Retrieve the current block header\n      // const lastHdr = await api.rpc.chain.getHeader();\n      // const startHdr = await api.rpc.chain.getBlockHash(lastHdr.number.unwrap().subn(500));\n      // console.log(`lastHdr hash is: `,lastHdr.hash);\n\n      // retrieve the range of changes\n      // const changes = await api.query.system.account.range([startHdr],ADDR);\n\n      // changes.forEach(([hash, value]) => {\n      //   console.log(hash.toHex(), value.toHuman());\n      // });\n\n\n      //=> Map keys & entries\n\n      //=> State entries\n      // In addition to using api.query to make actual on-chain queries, it can also be used to retrieve some information on the state entries. For instance to retrieve both the hash and size of an existing entry, we can make the following calls -\n      // Retrieve the hash & size of the entry as stored on-chain\n      // const [entryHash, entrySize] = await Promise.all([\n      //   api.query.system.account.hash(ADDR),\n      //   api.query.system.account.size(ADDR)\n      // ]);\n      // Output the info\n      // console.log(`The current size is ${entrySize} bytes with a hash of ${entryHash}`);\n\n\n      //=> Entry metadata\n      // It has been explained that the api.query interfaces are decorated from the metadata. This also means that there is some information that we can gather from the entry, as decorated -\n      // Extract the info\n      // const { meta, method, section } = api.query.system.account;\n      // The section & method is an indication of where it is exposed on the API. In addition the meta holds an array with the metadata documentation for the entry.\n\n      // Display some info on a specific entry\n      // console.log(`${section}.${method}: ${meta.documentation.join(' ')}`);    //system.account:  The full account information for a particular account ID.\n      // console.log(`query key: ${api.query.system.account.key(ADDR)}`);\n      // The key endpoint requires some explanation. In the chain state, the key values (identified by the module, method & params) are hashed and this is used as a lookup. So underlying a single-shot query would utilize the api.rpc.state.getStorage entry, passing the output of key (which is a hashed representation of the values). Apart from the hashing, the API also takes care of type formatting, handling optional values and merging results across multiple subscriptions.\n      \n      //#endregion\n      //#region *** KEYRING ***\n        //#region Additionally you can sign and verify using the pairs. This is the same internally to the API when constructing transactions -\n        // // Some helper functions used here\n        // // import { stringToU8a, u8aToHex } from '@polkadot/util';\n        // const { stringToU8a, u8aToHex } = require('@polkadot/util');\n\n        // // Convert message, sign and then verify\n        // const message = stringToU8a('this is our message');\n        // const signature = alice.sign(message);\n        // const isValid = alice.verify(message, signature);\n        // // Log info\n        // console.log(`The signature ${u8aToHex(signature)}, is ${isValid ? '' : 'in'}valid`);\n      //#endregion\n            //#region *** TRANSACTIONS ****\n    //   // Transaction endpoints are exposed, as determined by the metadata, on the api.tx endpoint. These allow you to submit transactions for inclusion in blocks, be it transfers, setting information or anything else your chain supports.\n\n    //   //=> Simple transactions\n    //   // // Sign and send a transfer from Gillian to Emma To start off, let's make a balance transfer from Gillian to Emma.\n    //   // const txHash = await api.tx.balances\n    //   //   .transfer(Emma.address, 1234567)\n    //   //   .signAndSend(Gillian);\n      \n        \n    //   // // Show the hash\n    //   // console.log(`Gillian made a transfer to Emma. Submitted with hash ${txHash}`);\n    //   // // We construct a transaction by calling balances.transfer(<accountId>, <value>) with the required params and then as a next step we submit it to the node.\n    //   // // As with all other API operations, the to params just needs to be \"account-like\" and the value params needs to be \"number-like\", the API will take care of encoding and conversion into the correct format.\n    //   // // The result for this call (we will deal with subscriptions in a short while), is the transaction hash. This is a hash of the data and receiving this does not mean that transaction has been included, but rather only that it has been accepted for propagation by the node. (It can still fail on execution, we will handle this in some of our follow-up sections.)\n\n    //   //=> Under the hood\n    //   // Despite the single-line format of signAndSend, there is a lot happening under the hood (and all of this can be manually provided) -\n    //   // Based on the sender, the API will query system.account (or system.accountNonce on older chains) to determine the next nonce to use\n    //   // The API will retrieve the current block hash and use it to create a mortal transaction, i.e. the transaction will only be valid for a limited number of blocks (by default this is 5 mins at 6s block times)\n    //   // It will construct a payload and sign this, this includes the genesisHash, the blockHash for the start of the mortal era as well as the current chain specVersion\n    //   // The transaction is submitted to the node\n    //   // As suggested, you can override all of this, i.e. by retrieving the nonce yourself and passing that as an option, i.e. signAndSend(alice, { nonce: aliceNonce }), this could be useful when manually tracking and submitting transactions in bulk.\n\n\n    //   //=> Transaction subscriptions  See when the transaction is incuded in a Block and when it is Finalized\n    //   // Transaction inclusion  To send a transaction and then waiting until it has been included in a block, we will use a subscription interface instead of just waiting for the transaction pool addition to yield the extrinsic hash.\n    //   // Make a transfer from Alice to Emma, waiting for inclusion\n    //   // const unsub = await api.tx.balances\n    //   //   .transfer(Emma.address, 12345)\n    //   //   .signAndSend(alice, (result) => {\n    //   //     // The result object has 2 parts, events (to to covered in the next section) and the status enum.\n    //   //     // When the status enum is in Finalized state (checked via isFinalized), the underlying value contains the block hash of the block where the transaction has been finalized. \n    //   //     // Finalized will follow InBlock, which is the block where the transaction has been included. \n    //   //     // InBlock does not mean the block is finalized, but rather applies to the transaction state, where Finalized means that the transaction cannot be forked off the chain.\n\n    //   //     console.log(`Current status is ${result.status}`);\n\n    //   //     if (result.status.isInBlock) {\n    //   //       console.log(`Transaction included at blockHash ${result.status.asInBlock}`);\n    //   //     } else if (result.status.isFinalized) {\n    //   //       console.log(`Transaction finalized at blockHash ${result.status.asFinalized}`);\n    //   //       unsub();\n    //   //     }\n    //   //   });\n\n\n    //   //=> Transaction events\n    //   // Any transaction will emit events, as a bare minimum this will always be either a system.ExtrinsicSuccess or system.ExtrinsicFailed event for the specific transaction. \n    //   // These provide the overall execution result for the transaction, i.e. execution has succeeded or failed.\n\n    //   // Depending on the transaction sent, some other events may however be emitted, for instance for a balances.transfer this could include one or more of Transfer, NewAccount or ReapedAccount, as defined in the substrate balances event defaults (http://polkadot.js.org/docs/substrate/events/#balances).\n    //   // To display or act on these events, we can do the following -\n      \n    //   // // Make a transfer from Alice to Emma, waiting for inclusion\n    //   // const unsub = await api.tx.balances\n    //   //   .transfer(Emma.address, 123456789)\n    //   //   .signAndSend(Gillian, ({ events = [], status }) => {\n    //   //     console.log(`Current status is ${status.type}`);\n      \n    //   //     if (status.isFinalized) {\n    //   //       console.log(`Transaction included at blockHash ${status.asFinalized}`);\n      \n    //   //       // Loop through Vec<EventRecord> to display all events\n    //   //       events.forEach(({ phase, event: { data, method, section } }) => {\n    //   //         console.log(`\\t' ${phase}: ${section}.${method}:: ${data}`);\n    //   //       });\n      \n    //   //       unsub();\n    //   //     }\n\n    //   //   });\n    //   //   // Be aware that when a transaction status is isFinalized, it means it is included, but it may still have failed - for instance \n    //   //   // if you try to send a larger amount that you have free, the transaction is included in a block, however from a end-user perspective the transaction failed since the transfer did not occur. \n    //   //   // In these cases a system.ExtrinsicFailed event will be available in the events array.\n\n\n    //   //=> Payment information\n    //   // The Polkadot/Substrate RPC endpoints exposes weight/payment information that takes an encoded extrinsic and calculates the on-chain weight fees for it. \n    //   // A wrapper for this is available on the tx itself, taking exactly the same parameters as you would pass to a normal .signAndSend operation, specifically .paymentInfo(sender, <any options>)\n      \n    //   // construct a transaction\n    //   const transfer = api.tx.balances.transfer(Emma.address, 22334455);\n\n    //   // retrieve the payment info\n    //   const { partialFee, weight } = await transfer.paymentInfo(Gillian);\n    //   console.log(`transaction will have a weight of ${weight}, with ${partialFee.toHuman()} weight fees`);\n\n    //   // send the tx\n    //   const unsub = await transfer\n    //   .signAndSend(Gillian, ({ events = [], status }) => {\n    //     console.log(`Current status is ${status.type}`);\n    \n    //     if (status.isFinalized) {\n    //       console.log(`Transaction included at blockHash ${status.asFinalized}`);\n    \n    //       // Loop through Vec<EventRecord> to display all events\n    //       events.forEach(({ phase, event: { data, method, section } }) => {\n    //         console.log(`\\t' ${phase}: ${section}.${method}:: ${data}`);\n    //       });\n    \n    //       unsub();\n    //     }\n\n    //   });\n\n      //#endregion\n\n}\n*/\n//#endregion\n\n\n\nexport {setup, createWallet, getGasPrice, getSigner};","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/PostsReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/context/ThemeDemo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/Reducers.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/reducers/AuthReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/index.js",["1452","1453","1454"],"import React, { useContext } from \"react\";\r\n\r\n/// React router dom\r\nimport {  Switch, Route } from \"react-router-dom\";\r\n  \r\n/// Css \r\nimport \"./index.css\";\r\nimport \"./chart.css\";\r\nimport \"./step.css\";\r\n\r\n/// Layout\r\nimport Header from \"./layouts/nav/Header\";\r\nimport NAV_NavHade from \"./layouts/nav/NavHader\";\r\nimport NAV_SideBar from \"./layouts/nav/SideBar\";\r\nimport Footer from \"./layouts/Footer\";\r\n/// Dashboard\r\nimport DashboardDark from \"./components/Dashboard/DashboardDark\";\r\n    import DEX from \"./components/Dashboard/DEX\";\r\n    import LOANS from \"./components/Dashboard/LOANS\";\r\n    import VAULTS from \"./components/Dashboard/VAULTS\";\r\nimport Portofolio from \"./components/Dashboard/Portofolio\";\r\n    import SOCIAL from \"./components/Dashboard/SOCIAL\";\r\n    import GOALS from \"./components/Dashboard/GOALS\";\r\n\r\n\r\nimport ProductGrid from \"./components/AppsMenu/Shop/ProductGrid/ProductGrid\";\r\n//Redux\r\nimport Todo from \"./pages/Todo\";\r\nimport ReduxForm from \"./components/Forms/ReduxForm/ReduxForm\";\r\nimport WizardForm from \"./components/Forms/ReduxWizard/Index\";\r\n/// Widget\r\nimport Widget from \"./pages/Widget\";\r\n\r\nimport Setting from \"./layouts/Setting\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\n\r\nconst Markup = ( { setupSpecs, blockChainSpecs, blockHeader, blockTimestamp, evm_api_state, extension\r\n        , accountList, setSubstrateAccount, selectedAddress, selectedAccountName, selected_EVM_Address\r\n        , customerPortfolio, message_1, oraclePrices, customerPortfolioAnalytics, total_CoinSupply\r\n        , customerLoans, loansOverviews }) => {\r\n\r\n  const { menuToggle } = useContext(ThemeContext);\r\n  const routes = [\r\n    ///Redux\r\n    { url: \"todo\", component: Todo },\r\n    { url: \"redux-form\", component: ReduxForm },\r\n    { url: \"redux-wizard\", component: WizardForm },\r\n    /// Widget\r\n    { url: \"widget-basic\", component: Widget },\r\n  ];\r\n  let path = window.location.pathname;\r\n  path = path.split(\"/\");\r\n  path = path[path.length - 1];\r\n\r\n  let pagePath = path.split(\"-\").includes(\"page\");\r\n  return (\r\n    <>\r\n      <div id={`${!pagePath ? \"main-wrapper\" : \"\"}`} className={`${!pagePath ? \"show\" : \"mh100vh\"}  ${menuToggle ? \"menu-toggle\" : \"\"}`}>\r\n        \r\n        {!pagePath && <Header setupSpecs={setupSpecs} evm_api_state={evm_api_state} blockHeader={blockHeader}  accountList={accountList}  setSubstrateAccount={setSubstrateAccount} selectedAddress={selectedAddress} selectedAccountName={selectedAccountName} selected_EVM_Address={selected_EVM_Address} oraclePrices={oraclePrices} />}\r\n        {!pagePath && <NAV_NavHade setupSpecs={setupSpecs} blockHeader={blockHeader}  accountList={accountList} selectedAddress={selectedAddress} />}\r\n        {!pagePath && <NAV_SideBar setupSpecs={setupSpecs} blockHeader={blockHeader}  accountList={accountList} selectedAddress={selectedAddress} />}\r\n\r\n        <div className={`${!pagePath ? \"content-body\" : \"\"}`}>\r\n          <div\r\n            className={`${!pagePath ? \"container-fluid\" : \"\"}`}\r\n            style={{ minHeight: window.screen.height - 60 }}\r\n          >\r\n            <Switch>\r\n              <Route exact path='/dashboard-dark'> <DashboardDark setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} oraclePrices={oraclePrices} total_CoinSupply={total_CoinSupply} customerPortfolioAnalytics={customerPortfolioAnalytics} /> </Route>\r\n              <Route exact path='/dex'> <DEX  setupSpecs={setupSpecs} blockHeader={blockHeader} selectedAddress={selectedAddress} oraclePrices={oraclePrices} customerPortfolio={customerPortfolio} /> </Route>\r\n              <Route exact path='/loans'> <LOANS   setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} selectedAddress={selectedAddress} customerLoans={customerLoans} loansOverviews={loansOverviews} oraclePrices={oraclePrices} /> </Route>\r\n              <Route exact path='/vaults'> <VAULTS   setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} /> </Route>\r\n              <Route exact path='/portofolio'> <Portofolio  setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} selectedAddress={selectedAddress} selectedAccountName={selectedAccountName} selected_EVM_Address={selected_EVM_Address} customerPortfolio={customerPortfolio} message_1={message_1} oraclePrices={oraclePrices} customerPortfolioAnalytics={customerPortfolioAnalytics} /> </Route>\r\n              <Route exact path='/social'> <SOCIAL   setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList}/> </Route>\r\n              <Route exact path='/goals'> <GOALS   setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} extension={extension}   selectedAddress={selectedAddress}  /> </Route>\r\n              <Route exact path='/ecom-product-grid'> <ProductGrid   setupSpecs={setupSpecs} blockChainSpecs={blockChainSpecs} blockHeader={blockHeader} blockTimestamp={blockTimestamp} extension={extension} accountList={accountList} /> </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n        {!pagePath && <Footer />}\r\n      </div>\r\n      <Setting />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/actions/PostTypes.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/actions/AuthActions.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/Footer.js",["1455"]," import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  var d = new Date();\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"copyright\">\r\n        <p>\r\n          In love with Polkadot and Kusama Technologies\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/Header.js",["1456","1457"],"import React, { useEffect, useState } from 'react'   //added for ticker only\r\n\r\nimport Ticker from 'react-ticker';\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nimport Identicon from '@polkadot/react-identicon';   //used for icons of Substrate account\r\n\r\n/// Image\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nlet keys = [], icons = [], descriptions = [];\r\n\r\n\r\nconst Header = ({ setupSpecs, blockHeader, evm_api_state, accountList, setSubstrateAccount, selectedAddress, selectedAccountName, oraclePrices }) => {\r\n\r\n\tconst [dropdowncolor, setDropdowncolor] = useState(\"#DE5106\");\r\n\tconst [dropdownDisabled, setDropdownDisabled] = useState(true);\t\t\r\n\r\n  useEffect(() => {\r\n      keys= Object.keys(oracle_EVM_Description);\r\n      keys.forEach((item) => {\r\n        icons.push(oracle_EVM_Icons[item]); \r\n        descriptions.push(oracle_EVM_Description[item]); \r\n      });\r\n\r\n  },[])\r\n\r\n  useEffect(() => {\r\n      if (evm_api_state)\r\n      {\r\n        setDropdowncolor(\"white\");\r\n        setDropdownDisabled(false);\r\n      } else {\r\n        setDropdowncolor(\"#DE5106\");\r\n        setDropdownDisabled(true);\r\n      }\r\n  },[evm_api_state])\r\n\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-content\">\r\n        <nav className=\"navbar navbar-expand\">\r\n          <div className=\"collapse navbar-collapse justify-content-between\">\r\n            <div className=\"header-left\">\r\n            <li className=\"nav-item\">\r\n              <div  style={{ width: \"50vw\"}}> \r\n                <div style={{ width: \"100v%\" }}> \r\n                      <Ticker offset='run-in'  speed={10} >\r\n                            {({ index }) => {\r\n\r\n                              const lngth =keys.length;\r\n                              if (oraclePrices[\"ACA\"])\r\n                              {\r\n                                const indx = index%lngth;\r\n                                return (\r\n                                  <>\r\n                                    <h2 className=\"invoice-num\" style={{ paddingRight: \"0.5em\" }}> <img alt=\"images\" width={50} src={icons[indx]} style={{marginRight: \"10px\"}} />{Number(oraclePrices[keys[indx]]).toFixed(2)}</h2>\r\n                                    <p className=\"mb-0 invoice-num1\">\r\n                                      <svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M1 13C1.91797 11.9157 4.89728 8.72772 6.5 7L12.5 10L19.5 1\" stroke=\"#13B440\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n                                      </svg>\r\n                                      <span className=\"text-success me-1 ms-1\">45%</span> {descriptions[indx]}\r\n                                    </p>\r\n                                  </>\r\n                                )\r\n                              }\r\n                              else  return (\r\n                                <>\r\n                                  <h1 style={{ paddingRight: \"0.5em\" }}>Connecting to Acala Mandala TC6</h1>\r\n                                </>\r\n                              ) \r\n\r\n                            }\r\n                          }\r\n                      </Ticker>\r\n                </div> \r\n              </div>\r\n            </li>\r\n            </div>\r\n\r\n            <ul className=\"navbar-nav header-right main-notification\">\r\n              <Dropdown className=\"weather-btn mb-2\">\r\n                    <span className=\"fs-22 font-w600 d-flex\" style={{color: dropdowncolor}}><i className=\"fa fa-google-wallet me-3 ms-3\"></i></span>\r\n                    <Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-3 default-select\"  style={{color: dropdowncolor}}>{selectedAddress} </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      { accountList &&\r\n                          accountList.map((accountObj) => <Dropdown.Item key={accountObj.address} disabled={dropdownDisabled} onClick={() => {\r\n                            setSubstrateAccount(accountObj)\r\n                          }}>{`${accountObj.name}-${accountObj.address}`}</Dropdown.Item>) \r\n                      }\r\n                    </Dropdown.Menu>\r\n              </Dropdown>  \r\n\r\n              <div className=\"timeline-panel\" style={{ marginTop:\"20px\", }}>\r\n                    <div className=\"media me-2\">\r\n                      <Identicon value={selectedAddress} size={48} theme={'polkadot'}/>\r\n                    </div>\r\n                    <div className=\"media-body\" style={{ marginTop:\"5px\", }}>\r\n                      <h6 className=\"mb-1\">{selectedAccountName}</h6>\r\n                    </div>\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/Setting.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/NavHader.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/nav/SideBar.js",["1458","1459","1460","1461","1462","1463","1464","1465","1466","1467"],"/// Menu\r\nimport Metismenu from \"metismenujs\";\r\nimport React, { Component, useContext, useEffect } from \"react\";\r\n/// Scroll \r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n/// Link\r\nimport { Link } from \"react-router-dom\";\r\nimport useScrollPosition from \"use-scroll-position\";\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\n\r\n\r\nclass MM extends Component {\r\n  componentDidMount() {\r\n    this.$el = this.el;\r\n    this.mm = new Metismenu(this.$el);\r\n  }\r\n  componentWillUnmount() {\r\n  }\r\n  render() {\r\n    return (\r\n\t\t<div className=\"mm-wrapper\">\r\n\t\t\t<ul className=\"metismenu\" ref={(el) => (this.el = el)}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SideBar = () => {\r\n  const {\r\n    iconHover,\r\n    sidebarposition,\r\n    headerposition,\r\n    sidebarLayout,\r\n  } = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    var btn = document.querySelector(\".nav-control\");\r\n    var aaa = document.querySelector(\"#main-wrapper\");\r\n    function toggleFunc() {\r\n      return aaa.classList.toggle(\"menu-toggle\");\r\n    }\r\n    btn.addEventListener(\"click\", toggleFunc);\r\n\t\r\n  }, []);\r\n  let scrollPosition = useScrollPosition();\r\n  /// Path\r\n  let path = window.location.pathname;\r\n  path = path.split(\"/\");\r\n  path = path[path.length - 1];\r\n  /// Active menu\r\n  let deshBoard = [\r\n      \"\",\r\n      \"dashboard-dark\",\r\n      \"coin-details\",\r\n      \"my-wallet\",\r\n      \"transactions\",\r\n      \"portofolio\",\r\n      \"market-capital\",\r\n      \"task\",\r\n    ],\r\n    app = [\r\n      \"app-profile\",\r\n      \"post-details\",\r\n      \"app-calender\",\r\n      \"email-compose\",\r\n      \"email-inbox\",\r\n      \"email-read\",\r\n      \"ecom-product-grid\",\r\n      \"ecom-product-list\",\r\n      \"ecom-product-order\",\r\n      \"ecom-checkout\",\r\n      \"ecom-invoice\",\r\n      \"ecom-customers\",\r\n      \"post-details\",\r\n      \"ecom-product-detail\",\r\n    ],\r\n    email = [\"email-compose\", \"email-inbox\", \"email-read\"],\r\n    shop = [\r\n      \"ecom-product-grid\",\r\n      \"ecom-product-list\",\r\n      \"ecom-product-list\",\r\n      \"ecom-product-order\",\r\n      \"ecom-checkout\",\r\n      \"ecom-invoice\",\r\n      \"ecom-customers\",\r\n      \"ecom-product-detail\",\r\n    ],\r\n    charts = [\r\n      \"chart-rechart\",\r\n      \"chart-flot\",\r\n      \"chart-chartjs\",\r\n      \"chart-chartist\",\r\n      \"chart-sparkline\",\r\n      \"chart-apexchart\",\r\n    ],\r\n    bootstrap = [\r\n      \"ui-accordion\",\r\n      \"ui-badge\",\r\n      \"ui-alert\",\r\n      \"ui-button\",\r\n      \"ui-modal\",\r\n      \"ui-button-group\",\r\n      \"ui-list-group\",\r\n      \"ui-media-object\",\r\n      \"ui-card\",\r\n      \"ui-carousel\",\r\n      \"ui-dropdown\",\r\n      \"ui-popover\",\r\n      \"ui-progressbar\",\r\n      \"ui-tab\",\r\n      \"ui-typography\",\r\n      \"ui-pagination\",\r\n      \"ui-grid\",\r\n    ],\r\n    plugins = [\r\n      \"uc-select2\",\r\n      \"uc-nestable\",\r\n      \"uc-sweetalert\",\r\n      \"uc-toastr\",\r\n      \"uc-noui-slider\",\r\n      \"map-jqvmap\",\r\n      \"uc-lightgallery\",\r\n    ],\r\n\tredux = [\r\n       \"redux-form\",\r\n\t   \"redux-wizard\",    \r\n       \"todo\",\r\n    ],\r\n    widget = [\"widget-basic\"],\r\n    forms = [\r\n      \"form-element\",\r\n      \"form-wizard\",\r\n      \"form-editor-summernote\",\r\n      \"form-pickers\",\r\n      \"form-validation-jquery\",\r\n    ],\r\n    table = [\"table-bootstrap-basic\", \"table-datatable-basic\"],\r\n    pages = [\r\n      \"page-register\",\r\n      \"page-login\",\r\n      \"page-lock-screen\",\r\n      \"page-error-400\",\r\n      \"page-error-403\",\r\n      \"page-error-404\",\r\n      \"page-error-500\",\r\n      \"page-error-503\",\r\n    ],\r\n    error = [\r\n      \"page-error-400\",\r\n      \"page-error-403\",\r\n      \"page-error-404\",\r\n      \"page-error-500\",\r\n      \"page-error-503\",\r\n    ];\r\n  return (\r\n    <div\r\n      className={`deznav ${iconHover} ${\r\n        sidebarposition.value === \"fixed\" &&\r\n        sidebarLayout.value === \"horizontal\" &&\r\n        headerposition.value === \"static\"\r\n          ? scrollPosition > 120\r\n            ? \"fixed\"\r\n            : \"\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <PerfectScrollbar className=\"deznav-scroll\">\r\n        <MM className=\"metismenu\" id=\"menu\">\r\n          <li className={`${deshBoard.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/dashboard-dark\"><i className=\"flaticon-025-dashboard\"></i> <span className=\"nav-text\">Dashboard</span></Link>\r\n          </li>\r\n          <li className={`${app.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"#\" >\r\n              <i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">Account</span>\r\n            </Link>\r\n            <ul >\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"/portofolio\">Portfolio</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Coins</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Vaults</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Loans</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">NFTs</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Transactions</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Goals</Link></li>\r\n              <li><Link className={`${path === \"app-profile\" ? \"mm-active\" : \"\"}`} to=\"#\">Open Limit Orders</Link></li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/dex\" >\r\n              <i className=\"fa fa-exchange\" aria-hidden=\"true\"></i> \r\n              <span className=\"nav-text\">DEX</span> \r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/loans\" >\r\n              <i className=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">LOANS</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/vaults\" >\r\n              <i className=\"fa fa-university\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">VAULTS</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/goals\" >\r\n              <i className=\"fa fa-tasks\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">GOALS</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"#\" >\r\n              <i className=\"fa fa-clone\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">SOCIAL</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${charts.includes(path) ? \"mm-active\" : \"\"}`}>\r\n            <Link className=\"has-arrow ai-icon\" to=\"/ecom-product-grid\" >\r\n              <i className=\"fa fa-picture-o\" aria-hidden=\"true\"></i>\r\n              <span className=\"nav-text\">NFTs</span>\r\n            </Link>\r\n          </li>\r\n        </MM>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/DEX.js",["1468","1469","1470","1471","1472","1473"],"import React,{useState,useContext, useEffect} from 'react';\r\n \r\n//Import\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport QuickTrade from '../Boltz/Home/QuickTrade';\r\nimport QuickTransfer from '../Boltz/Home/QuickTransfer';\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet icons = [], tickSymbols = [];\r\n\r\n\r\nconst DEX = ({ setupSpecs, blockHeader, oraclePrices, customerPortfolio }) => {\r\n\tconst { changeBackground, background } = useContext(ThemeContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst keys= Object.keys(oracle_EVM_Icons);\r\n\t\tkeys.forEach((item) => {\r\n\t\t  icons.push(oracle_EVM_Icons[item]); \r\n\t\t});\r\n\t\ttickSymbols = keys;\r\n\t},[])\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tchangeBackground({ value: \"dark\", label: \"Dark\" });\r\n\t}, []);\r\n\treturn(\r\n\t\t<>\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t<QuickTrade icons={icons} tickSymbols={tickSymbols} oraclePrices={oraclePrices} blockHeader={blockHeader} customerPortfolio={customerPortfolio} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t<QuickTransfer icons={icons} tickSymbols={tickSymbols} blockHeader={blockHeader} customerPortfolio={customerPortfolio} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\nexport default DEX;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js",["1474","1475","1476","1477","1478","1479","1480","1481"],"import React,{useState,useContext, useEffect} from 'react';\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\n \r\n//Import\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport LoansMARKETPortfolio from \"./LoansMARKETPortfolio\";\r\nimport LoansMARKETOverview from \"./LoansMARKETOverview\";\r\nimport ManageLoan from '../Boltz/Home/ManageLoan';\r\nimport AuthorizeLoan from '../Boltz/Home/AuthorizeLoan';\r\nimport TransferFromLoan from '../Boltz/Home/TransferFromLoan';\r\n\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet icons = [], tickSymbols = [];\r\n\r\n\r\nconst CurrentRadialApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/CurrentRadialApex\"), 1000)\r\n);\r\nconst MarketLineApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/MarketLineApex\"), 1000)\r\n);\r\n\r\n\r\nconst Loans = ({ setupSpecs, blockHeader, customerLoans, loansOverviews, oraclePrices }) => {\r\n\t \r\n\tconst { changeBackground, background } = useContext(ThemeContext);\r\n\r\n\t//used to update prices\r\n\tconst [chartData, setChartData] = useState(`Hello Intialization`);\t\r\n\tsetTimeout(() => {\r\n\t\tsetChartData(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'series1',\r\n\t\t\t\t\tdata: [200, 300, 250, 450, 300, 500, 300,350, 500, 300]\r\n\t\t\t\t}, \r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'series2',\r\n\t\t\t\t\tdata: [400, 300, 450, 350, 700, 370, 800, 800, 700, 750]\r\n\t\t\t\t}\r\n\t\t\t]);\r\n\t},5000)\t\t\r\n\r\n\tconst [customer_splits, setCustomer_splits] = useState({ series: [35, 10, 25, 15, 15], labels: ['DOT', 'LDOT', 'XBTC', 'RENBTC', 'POLKABTC'] });\t\r\n\tconst [DOT_collateralPercentage, setDOT_collateralPercentage]            = useState();\t\r\n\tconst [LDOT_collateralPercentage, setLDOT_collateralPercentage]          = useState();\t\r\n\tconst [XBTC_collateralPercentage, stXBTC_collateralPercentage]           = useState();\t\r\n\tconst [RENBTC_collateralPercentage, setRENBTC_collateralPercentage]      = useState();\t\r\n\tconst [POLKABTC_collateralPercentage, setPOLKABTC_collateralPercentage]  = useState();\t\r\n\tconst [totalLoansInCoin, setTotalLoansInCoin]  = useState({DOT: undefined, LDOT: undefined, XBTC: undefined, RENBTC: undefined, POLKABTC: undefined });\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t\tif (customerLoans)\r\n\t\t\t{\r\n\t\t\t\tconst totalIn_DOT = customerLoans? Number(customerLoans[\"DOT\"].collateral) * Number(oraclePrices[\"DOT\"]) : 0 ;\r\n\t\t\t\tconst totalIn_LDOT = customerLoans? Number(customerLoans[\"LDOT\"].collateral) * Number(oraclePrices[\"LDOT\"]) : 0 ;\r\n\t\t\t\tconst totalIn_XBTC = customerLoans? Number(customerLoans[\"XBTC\"].collateral) * Number(oraclePrices[\"XBTC\"]) : 0 ;\r\n\t\t\t\tconst totalIn_RENBTC = customerLoans? Number(customerLoans[\"RENBTC\"].collateral) * Number(oraclePrices[\"RENBTC\"]) : 0 ;\r\n\t\t\t\tconst totalIn_POLKABTC = customerLoans? Number(customerLoans[\"POLKABTC\"].collateral) * Number(oraclePrices[\"POLKABTC\"]) : 0 ;\r\n\t\r\n\t\t\t\tlet totalCollateral = totalIn_DOT + totalIn_LDOT + totalIn_XBTC + totalIn_RENBTC + totalIn_POLKABTC;\r\n\t\t\t\t\r\n\t\t\t\tlet DOT_collateralPerc = totalCollateral!==0? (100*totalIn_DOT / totalCollateral).toFixed(2) : 0 ;\r\n\t\t\t\tlet LDOT_collateralPerc = totalCollateral!==0? (100*totalIn_LDOT / totalCollateral).toFixed(2) : 0 ;\r\n\t\t\t\tlet XBTC_collateralPerc = totalCollateral!==0? (100*totalIn_XBTC / totalCollateral).toFixed(2) : 0 ;\r\n\t\t\t\tlet RENBTC_collateralPerc = totalCollateral!==0? (100*totalIn_RENBTC / totalCollateral).toFixed(2) : 0 ;\r\n\t\t\t\tlet POLKABTC_collateralPerc = totalCollateral!==0? (100*totalIn_POLKABTC / totalCollateral).toFixed(2) : 0 ;\r\n\r\n\t\t\t\tsetDOT_collateralPercentage(DOT_collateralPerc);\r\n\t\t\t\tsetLDOT_collateralPercentage(LDOT_collateralPerc);\r\n\t\t\t\tstXBTC_collateralPercentage(XBTC_collateralPerc);\r\n\t\t\t\tsetRENBTC_collateralPercentage(RENBTC_collateralPerc);\r\n\t\t\t\tsetPOLKABTC_collateralPercentage(POLKABTC_collateralPerc);\r\n\r\n\t\t\t\tsetTotalLoansInCoin({DOT: totalIn_DOT, LDOT: totalIn_LDOT, XBTC: totalIn_XBTC, RENBTC: totalIn_RENBTC, POLKABTC: totalIn_POLKABTC });\r\n\r\n\t\t\t\tsetCustomer_splits({series: [parseInt(DOT_collateralPerc), parseInt(LDOT_collateralPerc), parseInt(XBTC_collateralPerc), parseInt(RENBTC_collateralPerc), parseInt(POLKABTC_collateralPerc) ], options: { labels: ['DOT', 'LDOT', 'XBTC', 'RENBTC', 'POLKABTC'] } });\r\n\t\t\t}\r\n\t\r\n\t},[customerLoans])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst keys= Object.keys(oracle_EVM_Icons);\r\n\t\tkeys.forEach((item) => {\r\n\t\t  icons.push(oracle_EVM_Icons[item]); \r\n\t\t});\r\n\t\ttickSymbols = keys;\r\n\t},[])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tchangeBackground({ value: \"dark\", label: \"Dark\" });\r\n\t}, []);\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t<LoansMARKETPortfolio className=\"col-xl-12\" blockHeader={blockHeader} customerLoans={customerLoans} sparkPriceArray={\"SprakLines\"} totalLoansInCoin={totalLoansInCoin} />\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-4 col-xxl-4\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"fs-20 mb-0\">Loans Overview</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div id=\"currentChart\">\r\n\t\t\t\t\t\t\t\t<CurrentRadialApex splits={customer_splits} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"chart-content\">\t\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#EB8153\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">DOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{DOT_collateralPercentage}%</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#4441DE\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">LDOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{LDOT_collateralPercentage}%</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#60C695\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">XBTC</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{XBTC_collateralPercentage}%</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#F34F80\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">RENBTC</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{RENBTC_collateralPercentage}%</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#07EDE3\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">POLKABTC</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{POLKABTC_collateralPercentage}%</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-xl-8\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-12 col-xxl-12\">\r\n\t\t\t\t\t\t\t<ManageLoan icons={icons} tickSymbols={tickSymbols} customerLoans={customerLoans} blockHeader={blockHeader} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\t\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t<AuthorizeLoan icons={icons} tickSymbols={tickSymbols} customerLoans={customerLoans} blockHeader={blockHeader} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t<TransferFromLoan icons={icons} tickSymbols={tickSymbols} blockHeader={blockHeader} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t<LoansMARKETOverview className=\"col-xl-12\" blockHeader={blockHeader} loansOverviews={loansOverviews} sparkPriceArray={\"SprakLines\"}/>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Loans;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MyWallet.js",[],["1482","1483"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js",["1484","1485"],"import React,{useState,useContext, useEffect} from 'react';\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\nimport {Dropdown} from 'react-bootstrap';\r\n \r\n//Import\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport MARKET from \"./MARKET\";\r\n\r\n\r\nconst CurrentRadialApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/CurrentRadialApex\"), 1000)\r\n);\r\nconst MarketLineApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/MarketLineApex\"), 1000)\r\n);\r\n\r\n\r\nconst DashboardDark = ({ setupSpecs, blockChainSpecs, blockHeader, blockTimestamp, extension, accountList, oraclePrices, total_CoinSupply, customerPortfolioAnalytics }) => {\r\n\tconst [duration2, setDuration2] = useState(\"Daily\");\t\t\r\n\tconst { changeBackground, background } = useContext(ThemeContext);\r\n\r\n\t//used t update prices\r\n\tconst [chartData, setChartData] = useState(`Hello Intialization`);\t\r\n\tsetTimeout(() => {\r\n\t\tsetChartData(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'series1',\r\n\t\t\t\t\tdata: [200, 300, 250, 450, 300, 500, 300,350, 500, 300]\r\n\t\t\t\t}, \r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'series2',\r\n\t\t\t\t\tdata: [400, 300, 450, 350, 700, 370, 800, 800, 700, 750]\r\n\t\t\t\t}\r\n\t\t\t]);\r\n\t},5000)\t\t\r\n\r\n\tconst [customer_splits, setCustomer_splits] = useState({ series: [15, 35, 40, 10], labels: ['Stablecoins', 'Tokens', 'Vaults', 'Loans'] });\t\r\n\r\n    //repeated in Portfolio Move to App.js and do the maths once\t\r\n\tconst [sector_stablecoins, setSector_stablecoins] = useState();\t\r\n\tconst [sector_tokens, setSector_tokens]            = useState();\t\r\n\tconst [sector_vaults, setSector_vaults]           = useState();\t\r\n\tconst [sector_loans, setSector_loans]             = useState();\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\tif (customerPortfolioAnalytics)\r\n\t\t\t{\r\n\t\t\t\tlet sec_stablecoins = customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Stablecoins / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0 ;\r\n\t\t\t\tlet sec_tokens = customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Tokens / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0 ;\r\n\t\t\t\tlet sec_vaults =customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Vaults / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0 ;\r\n\t\t\t\tlet sec_loans = customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Loans / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0 ;\r\n\t\t\t\t\r\n\t\t\t\tsetSector_stablecoins(sec_stablecoins);\r\n\t\t\t\tsetSector_tokens(sec_tokens);\r\n\t\t\t\tsetSector_vaults(sec_vaults);\r\n\t\t\t\tsetSector_loans(sec_loans);\r\n\t\t\t\r\n\t\t\t\tsetCustomer_splits({series: [parseInt(sec_stablecoins), parseInt(sec_tokens), parseInt(sec_vaults), parseInt(sec_loans)], options: { labels: ['Stablecoins', 'Tokens', 'Vaults', 'Loans'] } });\r\n\t\t\t}\r\n\t\r\n\t},[customerPortfolioAnalytics])\r\n\r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tchangeBackground({ value: \"dark\", label: \"Dark\" });\r\n\r\n\t}, []);\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-4\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"fs-20 mb-0\">Account Balance Overview</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div id=\"currentChart\">\r\n\t\t\t\t\t\t\t\t<CurrentRadialApex splits={customer_splits} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"chart-content\">\t\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#EB8153\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Stablecoins ({sector_stablecoins}%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">${customerPortfolioAnalytics? customerPortfolioAnalytics.totalIn_Stablecoins : 0}</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#4441DE\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Tokens ({sector_tokens}%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">${customerPortfolioAnalytics? customerPortfolioAnalytics.totalIn_Tokens : 0}</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#60C695\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Vaults ({sector_vaults}%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">${customerPortfolioAnalytics? customerPortfolioAnalytics.totalIn_Vaults : 0}</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#F34F80\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Loans ({sector_loans}%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">${customerPortfolioAnalytics? customerPortfolioAnalytics.totalIn_Loans : 0}</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-xl-9 col-xxl-8\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header pb-0 border-0 flex-wrap\">\r\n\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Market Overview</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"d-flex flex-wrap mb-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox1\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox1\">ACA</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox2\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox2\">DOT</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox3\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox3\">XBTC</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox4\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox4\">RENBTC</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox4\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox4\">POLKABTC</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Dropdown className=\" weather-btn mb-2\">\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-2 default-select border text-primary\">{duration2} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Hourly\")}>Hourly</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Daily\")}>Daily</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Weekly\")}>Weekly</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body pb-0 pt-3\">\r\n\t\t\t\t\t\t\t<div id=\"marketChart\" className=\"market-line\">\r\n\t\t\t\t\t\t\t\t<MarketLineApex chartData={chartData} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t<MARKET className=\"col-xl-12\" blockHeader={blockHeader} oraclePrices={oraclePrices} sparkPriceArray={\"SprakLines\"} total_CoinSupply={total_CoinSupply} />\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default DashboardDark;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Transactions.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js",["1486","1487","1488"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Sparklines, SparklinesLine } from 'react-sparklines';\r\nimport {CoinIcon5,CoinIcon6, CoinIcon7, CoinIcon8} from \"../Boltz/Transactions/TableData\";\r\n \r\nconst sampleData1 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData2 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData3 = [2,2,4,3,2,4,3,3,4,2,1,3,2,4,2,3,5,4,3,2];\r\nconst sampleData4 = [6,2,3,2,3,5,3,3,7,2,4,7,5,1,3,6,5,9];\r\nconst sampleData5 = [6,2,3,2,3,5,4,3,2,2,4,5,2,5,5,4,3,1,3,4,5,6];\r\nconst sampleData6 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\nconst sampleData7 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData8 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData9 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\n\r\nconst MarketCapital = ({ setupSpecs, blockChainSpecs, blockHeader, blockTimestamp, extension, accountList, message }) => {\r\n\tconsole.log(`***** SOCIAL  message: `,message);\r\n\r\n\tconst [country1, setCountry1] = useState(\"Medan, IDN\");\t\t\r\n\tconst [data, setData] = useState(document.querySelectorAll(\"#marketCapital tbody tr\"));\r\n\tconst sort = 9;\r\n\tconst activePag = useRef(0);\r\n\tconst [test, settest] = useState(0);\r\n\r\n  // Active data\r\n\tconst chageData = (frist, sec) => {\r\n\t\tfor (var i = 0; i < data.length; ++i) {\r\n\t\t\tif (i >= frist && i < sec) {\r\n\t\t\t\tdata[i].classList.remove(\"d-none\");\r\n\t\t\t} else {\r\n\t\t\t\tdata[i].classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n  // use effect\r\n\tuseEffect(() => {\r\n\t\tsetData(document.querySelectorAll(\"#marketCapital tbody tr\"));\r\n\t}, [test]);\r\n\r\n  // Active pagginarion\r\n\tactivePag.current === 0 && chageData(0, sort);\r\n\t// paggination\r\n\tlet paggination = Array(Math.ceil(data.length / sort))\r\n\t\t.fill()\r\n\t\t.map((_, i) => i + 1);\r\n\r\n  // Active paggination & chage data\r\n\tconst onClick = (i) => {\r\n\t\tactivePag.current = i;\r\n\t\tchageData(activePag.current * sort, (activePag.current + 1) * sort);\r\n\t\tsettest(i);\r\n\t};\r\n\t// const DropDownBlog =() =>{\r\n\t// \treturn(\r\n\t// \t\t<>\r\n\t// \t\t\t<Dropdown className=\" ml-4\">\r\n\t// \t\t\t\t<Dropdown.Toggle variant=\"\" className=\"i-false p-0 btn-link\" data-toggle=\"dropdown\">\r\n\t// \t\t\t\t\t<svg width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t// \t\t\t\t\t\t<path\r\n\t// \t\t\t\t\t\t\td=\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\"\r\n\t// \t\t\t\t\t\t\tstroke=\"#A7A7A7\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n\t// \t\t\t\t\t\t<path\r\n\t// \t\t\t\t\t\t\td=\"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\"\r\n\t// \t\t\t\t\t\t\tstroke=\"#A7A7A7\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n\t// \t\t\t\t\t\t<path\r\n\t// \t\t\t\t\t\t\td=\"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\"\r\n\t// \t\t\t\t\t\t\tstroke=\"#A7A7A7\"strokeWidth={2}  strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n\t// \t\t\t\t\t\t/>\r\n\t// \t\t\t\t\t</svg>\r\n\t// \t\t\t\t</Dropdown.Toggle>\r\n\t// \t\t\t\t<Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\" alignRight={true}>\r\n\t// \t\t\t\t\t<Link to={\"#\"} className=\"dropdown-item\" >Edit</Link>\r\n\t// \t\t\t\t\t<Link to={\"#\"} className=\"dropdown-item\" >Delete</Link>\r\n\t// \t\t\t\t</Dropdown.Menu>\r\n\t// \t\t\t </Dropdown>\r\n\t// \t\t</>\r\n\t// \t)\r\n\t// }\r\n\t\r\n  return (\r\n    <>\r\n       {/* <div className=\"mb-sm-5 mb-3 d-flex flex-wrap align-items-center text-head\">\r\n\t\t\t<h2 className=\"font-w600 mb-2 me-auto\">Market Capital</h2>\r\n\t\t\t<Dropdown className=\" weather-btn mb-2\">\r\n\t\t\t\t<span className=\"fs-22 font-w600 d-flex\"><i className=\"fa fa-cloud me-3 ms-3\"></i>21</span>\r\n\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-3 default-select\">{country1} </Dropdown.Toggle>\r\n\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Medan, IDN\")}>Medan, IDN</Dropdown.Item>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Jakarta, IDN\")}>Jakarta, IDN</Dropdown.Item>\r\n\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Surabaya, IDN\")}>Surabaya, IDN</Dropdown.Item>\r\n\t\t\t\t </Dropdown.Menu>\r\n\t\t\t</Dropdown>\r\n\t\t\t<Link to={\"#\"} className=\"btn btn-primary mb-2 rounded\"><i className=\"las la-calendar scale5 me-3\"></i>Filter Periode</Link>\r\n\t\t</div> */}\r\n\t\t\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t<div className=\"table-responsive table-hover fs-14 \">\r\n\t\t\t\t\t<div id=\"example6_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n\t\t\t\t\t\t<table className=\"table display mb-4 dataTablesCard font-w600  market-tbl border-no text-black dataTable no-footer border-0\" \r\n\t\t\t\t\t\t\tid=\"marketCapital\" role=\"grid\" aria-describedby=\"example6_info\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\">\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting_asc\" tabIndex={0}  rowSpan={1} colSpan={1}>Rank</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Coin</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Last Price</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Change (24h)</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Volume (24h)</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Graph</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"bg-none width50 sorting\" tabIndex={0} aria-controls=\"example6\" rowSpan={1} colSpan={1}/>\r\n\t\t\t\t\t\t\t   </tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd market-trbg\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"bg-primary rank-ic fs-20 text-white\">#1</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon5 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData1}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even market-trbg\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"bg-primary rank-ic fs-20 text-white\">#2</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon6 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>      \r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData2}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd market-trbg\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"bg-primary rank-ic fs-20 text-white\">#3</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon7 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData3} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#4</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon8 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData4}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#5</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon5 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData5}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#6</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon6 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData6}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#7</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon7 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData7}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#8</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon8 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData8}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#9</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon5 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData9}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#10</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon6 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData1}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#11</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><CoinIcon7 /></td>\r\n\t\t\t\t\t\t\t\t\t<td>$11,911.48</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>$220,083,007,631</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData2}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td><DropDownBlog /></td> */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t<div className=\"dataTables_info\">\r\n\t\t\t\t\t\t\t\t  Showing {activePag.current * sort + 1} to{\" \"}\r\n\t\t\t\t\t\t\t\t  {data.length > (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t? (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t: data.length}{\" \"}\r\n\t\t\t\t\t\t\t\t  of {data.length} entries\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"dataTables_paginate paging_simple_numbers\" id=\"example5_paginate\">\r\n\t\t\t\t\t\t\t\t<Link className=\"paginate_button previous disabled\" to=\"/market-capital\" onClick={() => activePag.current > 0 && onClick(activePag.current - 1)}>\r\n\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t  <span> \r\n\t\t\t\t\t\t\t\t\t{paggination.map((number, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Link key={i} to=\"/market-capital\" className={`paginate_button  ${ activePag.current === i ? \"current\" : \"\" } `} onClick={() => onClick(i)} \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"inline-block\" }}>{number}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t  </span>\r\n\t\t\t\t\t\t\t\t<Link className=\"paginate_button next\" to=\"/market-capital\" onClick={() => activePag.current + 1 < paggination.length && onClick(activePag.current + 1)}>\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarketCapital;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js",["1489"],"import React, { useState} from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport {Dropdown, Modal} from 'react-bootstrap';\r\nimport swal from \"sweetalert\";\r\nimport {nanoid} from 'nanoid'; \r\n//Images\r\n//source https://all-free-download.com/free-photos/ape.html\r\nimport watch from './../../../images/task/circle_clock_compass_dashboard_dial_instrument_604063.jpg';\r\nimport bike from './../../../images/task/bike_harley_davidson_motorcycle_227836.jpg';\r\nimport car from './../../../images/task/ford_mustang_car_215784.jpg';\r\nimport holidays from './../../../images/task/holiday_travel_204718.jpg';\r\nimport mortgage from './../../../images/task/home_money_euro_239954.jpg';\r\nimport laptop from './../../../images/task/macbook_air_038_mouse_on_wooden_desk_596582.jpg';\r\nimport ape_NFT from './../../../images/task/orangutan_201606.jpg';\r\nimport yacht from './../../../images/task/yacht_at_the_sea_192408.jpg';\r\nimport user from './../../../images/task/user.jpg';\r\n\r\n\r\nconst imageName = {\r\n\t\t\t\t\tape_NFT,\r\n\t\t\t\t\tcar,\r\n\t\t\t\t\tholidays,\r\n\t\t\t\t\tmortgage,\r\n\t\t\t\t\tyacht,\r\n\t\t\t\t\tbike,\r\n\t\t\t\t\twatch,\r\n\t\t\t\t\tlaptop,\r\n\t\t\t\t  }\r\n\r\nconst CardListBlog = [\r\n\t{ \r\n\t\tid:1, image: laptop, Cust_Id:\"5Sb2MqczUNTA53MYptuTkU4pR9ptQu9NR7RvmZ3D7c1FzeKh\", GoalTitle: \"Macbook Pro\",  GoalCreationDatte: \"20/01/2021\", Target:`2,250`, \r\n\t\tVaults: `${\"ACA_DCA, ACA_DOT_MC\"}`, Achieved:\"1,547\", HitRatio: \"68.75\"\r\n\t},\r\n\t{ \r\n\t\tid:2, image: holidays, Cust_Id:`5QEhFY4VdFU2Un5SPLBYS5AbksWG67pv4Kdw9KkMaU2ofgjD`, GoalTitle: \"Exotic Holidays\", GoalCreationDatte: \"20/01/2019\", Target:`4,870`, \r\n\t\tVaults: `${\"KAR_DCA, ACA_KAR_MC\"}`, \tAchieved:\"1,923\", HitRatio: \"39.49\" \r\n\t},\r\n\t{ \r\n\t\tid:3, image: car, Cust_Id:`5PqQsT9rFVb9Gai9Sg8xtaKpPzbzqFfboNZp97MCZVH9DiVk`, GoalTitle: \"Sports Car\", GoalCreationDatte: \"20/01/2020\",Target:`105,000`, \r\n\t\tVaults: `${\"XBTC_RENBTC_POLKABTC_MC\"}`, Achieved:\"55,000\", HitRatio: \"52.38\" \r\n\t},\r\n\t{ \r\n\t\tid:4, image: yacht, Cust_Id:`5QEhFY4VdFU2Un5SPLBYS5AbksWG67pv4Kdw9KkMaU2ofgjD`, GoalTitle: \"Sailing Yacht\", GoalCreationDatte: \"20/01/2018\", Target:`225,000`, \r\n\t\tVaults: `${\"DOT_DCA\"}`, Achieved:\"45,920\", HitRatio: \"20.41\" \r\n\t},\r\n\t\r\n];\r\n\r\nconst PostPage = ({ setupSpecs, blockChainSpecs, blockHeader, extension, selectedAddress }) => {\r\n    const [postModal, setPostModal] = useState(false);\r\n    const [goals, setGoals] = useState(CardListBlog);\r\n    // delete data  \r\n    const handleDeleteClick = (goalId) => {\r\n        const newGoals = [...goals];    \r\n        const index = goals.findIndex((goal)=> goals.id === goalId);\r\n        newGoals.splice(index, 1);\r\n        setGoals(newGoals);\r\n    }\r\n    \r\n    //Add data \r\n    const [addFormData, setAddFormData ] = useState({\r\n\t\timage:'',\r\n        Cust_Id:'',\r\n\t\tGoalTitle:'',\r\n        GoalCreationDatte:'',\r\n        Target:'',\r\n        Vaults:'',\r\n\t\tAchieved:'',\r\n\t\tHitRatio:'',\r\n    }); \r\n    \r\n    // Add goal function\r\n    const handleAddFormChange = (event) => {\r\n        event.preventDefault();    \r\n        const fieldName = event.target.getAttribute('name');\r\n        const fieldValue = event.target.value;\r\n        const newFormData = {...addFormData};\r\n        newFormData[fieldName] = fieldValue;\r\n        setAddFormData(newFormData);\r\n    };\r\n    \r\n     //Add Submit data\r\n    const handleAddFormSubmit = (event)=> {\r\n        event.preventDefault();\r\n        var error = false;\r\n\t\tvar errorMsg = '';\r\n\r\n\t    addFormData.Cust_Id = selectedAddress;\r\n\r\n\t\tif(addFormData.Cust_Id === \"Choose Account\"){\r\n            error = true;\r\n\t\t\terrorMsg = 'Please choose an account';\r\n\t\t}else if(addFormData.GoalTitle === \"\"){\r\n            error = true;\r\n\t\t\terrorMsg = 'Please fill Goal Title';\r\n        }else if(addFormData.GoalCreationDatte === \"\"){\r\n            error = true;\r\n\t\t\terrorMsg = 'Please fill Goal creation date';\r\n        }\r\n        else if(addFormData.Target === \"\"){\r\n            error = true;\r\n\t\t\terrorMsg = 'Please fill Target USD amount';\r\n        }\r\n        if(!error){\r\n            const newGoal = {\r\n                id: nanoid(),\r\n\t\t\t\timage: addFormData.image,\r\n                Cust_Id: addFormData.Cust_Id,\r\n                GoalTitle:  addFormData.GoalTitle,\r\n                GoalCreationDatte:  addFormData.GoalCreationDatte ,\r\n                Target:  addFormData.Target,\r\n\t\t\t\tVaults: addFormData.Vaults,\r\n\t\t\t\tAchieved:'',\r\n\t\t\t\tHitRatio:'',\r\n            };\r\n            const newGoals = [...goals, newGoal];\r\n            setGoals(newGoals);\r\n            setPostModal(false);\r\n            swal('Good job!', 'Successfully Added', \"success\");\r\n\t\t\taddFormData.Cust_Id = addFormData.GoalTitle = addFormData.GoalCreationDatte = addFormData.Target = addFormData.Vaults = '';         \r\n            \r\n        }else{\r\n\t\t\tswal('Oops', errorMsg, \"error\");\r\n\t\t}\r\n    }; \r\n    \r\n    \r\n    const [editModal, setEditModal] = useState(false);\r\n    \r\n    // Edit function editable page loop\r\n    const [editgoalId, setEditgoalId] = useState(null);\r\n   \r\n    // Edit function button click to edit\r\n    const handleEditClick = ( event, goal) => {\r\n        event.preventDefault();\r\n        setEditgoalId(goal.id);\r\n        const formValues = {\r\n            Cust_Id: goal.Cust_Id,\r\n            Date_Join: goal.Date_Join,\r\n            Cust_Name: goal.Cust_Name,\r\n            Location: goal.Location,\r\n\t\t\timage: goal.image,\r\n        }\r\n        setEditFormData(formValues);\r\n        setEditModal(true);\r\n    };\r\n    \r\n    \r\n    // edit  data  \r\n    const [editFormData, setEditFormData] = useState({\r\n        Cust_Id:'',\r\n        Date_Join:'',\r\n        Cust_Name:'',\r\n        Location:'',\r\n\t\timage:'',\r\n    })\r\n    \r\n    //update data function\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();   \r\n        const fieldName = event.target.getAttribute('name');\r\n        const fieldValue = event.target.value;\r\n        const newFormData = {...editFormData};\r\n        newFormData[fieldName] = fieldValue;\r\n        setEditFormData(newFormData);\r\n    };\r\n    \r\n    // edit form data submit\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const editedgoal = {\r\n            id: editgoalId,\r\n            Cust_Id: editFormData.Cust_Id,\r\n            Date_Join: editFormData.Date_Join,\r\n            Cust_Name: editFormData.Cust_Name,\r\n            Location: editFormData.Location,\r\n\t\t\timage: editFormData.image,\r\n        }\r\n        const newGoals = [...goals];\r\n        const index = goals.findIndex((goal)=> goals.id === editgoalId);\r\n        newGoals[index] = editedgoal;\r\n        setGoals(newGoals);\r\n        setEditgoalId(null);\r\n        setEditModal(false);    \r\n    }\r\n    \r\n\t\r\n\r\n\t//Image upload  \r\n\tconst [goalImageName, setGoalImageName] = useState(\"select Goal\");\t\r\n    const imageHandler = (goalImageName) => {\r\n\t\tsetGoalImageName(goalImageName);\r\n\t\taddFormData.image = imageName[goalImageName]; \r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n\t\t\t<div className=\"mb-sm-5 mb-3 d-flex flex-wrap align-items-center text-head\">\r\n\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary font-w600 mb-2 me-auto\" onClick={()=> setPostModal(true)}>+ New Task</Link>\r\n\t\t\t\t {/* <!-- Modal --> */}\r\n\t\t\t\t<Modal className=\"modal fade\"  show={postModal} onHide={setPostModal} >\r\n\t\t\t\t\t<div className=\"\" role=\"document\">\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t<form >\r\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title fs-20\">Add Goal</h4>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn-close\" onClick={()=> setPostModal(false)} data-dismiss=\"modal\"></button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"flaticon-cancel-12 close\"></i>\r\n\t\t\t\t\t\t\t\t\t<div className=\"add-goal-box\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"add-goal-content\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"image-placeholder\">\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-preview\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"imagePreview\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img id=\"saveImageFile\" src={goalImageName!==\"select Goal\"? imageName[`${goalImageName}`] : user} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={goalImageName!=\"select Goal\"? goalImageName : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t        <Dropdown className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-3 default-select\">{goalImageName} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"ape_NFT\")}>Ape NFT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"car\")}>Car</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"holidays\")}>Holidays</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"mortgage\")}>Mortgage</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"yacht\")}>Yacht</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"bike\")}>Bike</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"watch\")}>Watch</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => imageHandler(\"laptop\")}>Laptop</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t <div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Owner</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"  className=\"form-control\"  autocomplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"Cust_Id\" required=\"required\"\r\n                                                        onChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={selectedAddress}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"validation-text\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                            <div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Goal Title</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"  className=\"form-control\"  autocomplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"GoalTitle\" required=\"required\"\r\n                                                        onChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"date\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"validation-text\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Goal creation Date</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"  className=\"form-control\"  autocomplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"GoalCreationDatte\" required=\"required\"\r\n                                                        onChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"date\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"validation-text\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                            <div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Target</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-occupation\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"   autocomplete=\"off\"\r\n                                                        onChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"Target\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" placeholder=\"name\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Vaults</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-occupation\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"  autocomplete=\"off\"\r\n                                                        name=\"Vaults\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" placeholder=\"Location\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleAddFormSubmit}>Add</button>  \r\n                                    <button type=\"button\" onClick={()=> setPostModal(false)} className=\"btn btn-danger\"> <i className=\"flaticon-delete-1\"></i> Discard</button>      \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n                            \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n                <Modal className=\"modal fade\"  show={editModal} onHide={setEditModal} >\r\n\t\t\t\t\t<div className=\"\" role=\"document\">\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t<form >\r\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title fs-20\">Edit Task</h4>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn-close\" onClick={()=> setEditModal(false)} data-dismiss=\"modal\"></button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"flaticon-cancel-12 close\" data-dismiss=\"modal\"></i>\r\n\t\t\t\t\t\t\t\t\t<div className=\"add-goal-box\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"add-goal-content\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n                                            <div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Target</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"  className=\"form-control\"  autocomplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"Date_Join\" required=\"required\"\r\n                                                        value={editFormData.Target}\r\n                                                        onChange={handleEditFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"update USD target to hit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"validation-text\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                            <div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\">Vault Contributors</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"goal-occupation\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\"   autocomplete=\"off\"\r\n                                                        value={editFormData.Vaults}\r\n                                                        onChange={handleEditFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"Cust_Name\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" placeholder=\"type tickers of vaults to finance goal\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleEditFormSubmit}>Save</button>  \r\n                                    <button type=\"button\" onClick={()=> setEditModal(false)} className=\"btn btn-danger\"> <i className=\"flaticon-delete-1\"></i> Cancel</button>      \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n                            \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t\r\n\t\t\t</div>          \r\n            <div className=\"row\">\r\n                {goals.map((goal, index)=>(\r\n                    <div  className=\"col-xl-3 col-xxl-4 col-lg-6 col-md-6 col-sm-6\" key={index}>\r\n                        <div  className=\"card project-boxed\">\r\n\t\t\t\t\t\t\t<div className=\"img-bx\">\r\n\t\t\t\t\t\t\t\t<img src={goal.image} alt=\"\" className=\" me-3 card-list-img w-100\" width=\"130\" />\r\n                            </div>\t\r\n\t\t\t\t\t\t\t \r\n                            <div className=\"card-header align-items-start\">\r\n                                <div>\r\n                                    <p className=\"mb-2 \" style={{fontSize:10}}>#{goal.Cust_Id}</p>\r\n                                    <h6 className=\"fs-18 font-w500 mb-3\"><Link to={\"#\"}className=\"text-black user-name\">{goal.GoalTitle}</Link></h6>\r\n                                    <div className=\"text-dark fs-14 text-nowrap\"><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{goal.GoalCreationDatte}</div>\r\n                                </div>\r\n                                <Dropdown className=\"\">\r\n                                    <Dropdown.Toggle variant=\"\" as=\"div\" className=\"btn-link i-false\" >\t\r\n                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>                                    </Dropdown.Toggle>\t\r\n                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                        <Dropdown.Item \r\n                                            onClick={(event) => handleEditClick(event, goal)}\r\n                                        >Edit\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item className=\"text-danger\"\r\n                                            onClick={()=>handleDeleteClick(goal.id)}\r\n                                        >Delete\r\n                                        </Dropdown.Item>\t\t\r\n                                    </Dropdown.Menu>\t\r\n                                </Dropdown>\r\n                            </div>\r\n                            <div className=\"card-body p-0 pb-3\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"mb-0 title\">Target</span> :\r\n                                        <span className=\"text-black ms-2\">${goal.Target}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"mb-0 title\">Vault Contributors</span> :\r\n                                        <span className=\"text-black desc-text ms-2\">{goal.Vaults}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"mb-0 title\">Achieved</span> :\r\n                                         <span className=\"text-black ms-2\">${goal.Achieved}</span> \r\n                                    </li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\r\n                                        <span className=\"mb-0 title\">Hit Ratio</span> :\r\n                                        <span className=\"text-black desc-text ms-2\">{goal.HitRatio}%</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>            \r\n                ))}  \r\n            </div>\r\n        </>\r\n    );     \r\n}\r\n\r\nexport default PostPage;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Home.js",["1490","1491"],"import React,{useState,useContext, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\n//Import\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport CardSlider from '../Boltz/Home/CardSlider';\r\nimport PreviousTab from '../Boltz/Home/PreviousTab';\r\nimport OrderData from '../Boltz/Home/OrderData';\r\nimport QuickTrade from '../Boltz/Home/QuickTrade';\r\nimport QuickTransfer from '../Boltz/Home/QuickTransfer';\r\n\r\nconst CurrentRadialApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/CurrentRadialApex\"), 1000)\r\n);\r\nconst MarketLineApex = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Home/MarketLineApex\"), 1000)\r\n);\r\n\r\nconst Home = () => {\r\n\tconst { changeBackground, background } = useContext(ThemeContext);\r\n\t  useEffect(() => {\r\n\t\tchangeBackground({ value: \"light\", label: \"Light\" });\r\n\t}, []);\r\n\tconst [country1, setCountry1] = useState(\"Medan, IDN\");\t\t\r\n\tconst [duration2, setDuration2] = useState(\"Weekly (2021)\");\t\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"mb-sm-4 d-flex flex-wrap align-items-center text-head\">\r\n\t\t\t\t<h2 className=\"font-w600 mb-2 me-auto\">Dashboard_ANG</h2>\r\n\t\t\t\t<Dropdown className=\" weather-btn mb-2\">\r\n\t\t\t\t\t<span className=\"fs-22 font-w600 d-flex\"><i className=\"fa fa-cloud me-3 ms-3\"></i>21</span>\r\n\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-3 default-select cursor-pointer\">{country1} </Dropdown.Toggle>\r\n\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Medan, IDN\")}>Medan, IDN</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Jakarta, IDN\")}>Jakarta, IDN</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => setCountry1(\"Surabaya, IDN\")}>Surabaya, IDN</Dropdown.Item>\r\n\t\t\t\t\t </Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary mb-2 rounded\"><i className=\"las la-calendar scale5 me-3\"></i>Filter Periode</Link>\r\n\t\t\t</div>\t\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body d-flex\">\r\n\t\t\t\t\t\t\t<div className=\"icon me-3\">\r\n\t\t\t\t\t\t\t\t<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t<circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"white\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30 0C13.4312 0 0 13.4312 0 30C0 46.5688 13.4312 60 30 60C46.5688 60 60 46.5688 60 30C60 13.4312 46.5688 0 30 0ZM30 54.375C16.5588 54.375 5.625 43.44 5.625 30C5.625 16.56 16.5588 5.625 30 5.625C43.4412 5.625 54.375 16.5588 54.375 30C54.375 43.4412 43.44 54.375 30 54.375Z\" fill=\"#F7931A\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M31.5488 30.9737H27.61V36.825H31.5488C32.3438 36.825 33.0813 36.5025 33.5988 35.9612C34.14 35.4425 34.4625 34.7062 34.4625 33.8875C34.4638 32.2862 33.15 30.9737 31.5488 30.9737Z\" fill=\"#F7931A\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30 8.12496C17.9375 8.12496 8.125 17.9375 8.125 30C8.125 42.0625 17.9375 51.875 30 51.875C42.0625 51.875 51.875 42.0612 51.875 30C51.875 17.9387 42.0612 8.12496 30 8.12496ZM34.4512 40.13H31.8712V44.185H29.165V40.13H27.6787V44.185H24.96V40.13H20.18V37.585H22.8175V22.335H20.18V19.79H24.96V15.8162H27.6787V19.79H29.165V15.8162H31.8712V19.79H34.2212C35.5337 19.79 36.7437 20.3312 37.6075 21.195C38.4712 22.0587 39.0125 23.2687 39.0125 24.5812C39.0125 27.15 36.985 29.2462 34.4512 29.3612C37.4225 29.3612 39.8187 31.78 39.8187 34.7512C39.8187 37.7112 37.4237 40.13 34.4512 40.13Z\" fill=\"#F7931A\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M33.2888 27.38C33.7613 26.9075 34.0488 26.2737 34.0488 25.56C34.0488 24.1437 32.8975 22.9912 31.48 22.9912H27.61V28.14H31.48C32.1825 28.14 32.8275 27.84 33.2888 27.38Z\" fill=\"#F7931A\"/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2 className=\"invoice-num\">$984</h2>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0 invoice-num1\">\r\n\t\t\t\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M1 13C1.91797 11.9157 4.89728 8.72772 6.5 7L12.5 10L19.5 1\" stroke=\"#13B440\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-success me-1 ms-1\">45%</span> This week\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body d-flex\">\r\n\t\t\t\t\t\t\t<div className=\"icon me-3\">\r\n\t\t\t\t\t\t\t\t<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t<g opacity=\"0.99\">\r\n\t\t\t\t\t\t\t\t\t<circle cx=\"30\" cy=\"30.0001\" r=\"30\" fill=\"white\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.5438 0.00514091C13.9681 -0.294871 0.305031 12.8932 0.00501883 29.4563C-0.294993 46.0195 12.893 59.6951 29.4562 59.9951C46.0194 60.2951 59.695 47.1071 59.995 30.5314C60.295 13.9682 47.1069 0.292653 30.5438 0.00514091ZM29.5562 54.3699C16.1182 54.1198 5.38024 42.9944 5.63025 29.5563C5.86776 16.1183 16.9932 5.38036 30.4313 5.61787C43.8818 5.86788 54.6072 16.9933 54.3697 30.4314C54.1322 43.8694 42.9943 54.6074 29.5562 54.3699Z\" fill=\"#FF6600\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.3938 8.11797C18.3308 7.90546 8.34286 17.5434 8.13035 29.6063C8.0591 33.4015 8.97038 36.9904 10.623 40.1355H17.4995V18.6021C17.4995 17.2858 19.2883 16.8671 19.8696 18.0484L30 38.563L40.1304 18.0496C40.7117 16.8671 42.5005 17.2858 42.5005 18.6021V40.1355H49.3558C50.8933 37.2129 51.8084 33.9128 51.8696 30.3939C52.0821 18.3309 42.4567 8.34298 30.3938 8.11797Z\" fill=\"#FF6600\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M40.0004 41.3856V23.9574L31.12 41.9393C30.7 42.7931 29.2987 42.7931 28.8787 41.9393L19.9996 23.9574V41.3856C19.9996 42.0756 19.4408 42.6356 18.7495 42.6356H12.1855C16.0744 48.0996 22.3972 51.7347 29.6062 51.8697C37.1028 52.0023 43.793 48.3271 47.8395 42.6356H41.2504C40.5592 42.6356 40.0004 42.0756 40.0004 41.3856Z\" fill=\"#FF6600\"/>\r\n\t\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2 className=\"invoice-num\">$22,567</h2>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M1 13C1.91797 11.9157 4.89728 8.72772 6.5 7L12.5 10L19.5 1\" stroke=\"#13B440\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-success  ms-1 me-1\">45%</span> This week\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body d-flex\">\r\n\t\t\t\t\t\t\t<div className=\"icon me-3\">\r\n\t\t\t\t\t\t\t\t<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t<circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"white\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.5438 0.00501883C13.9681 -0.294993 0.305031 12.893 0.00501883 29.4562C-0.294993 46.0194 12.893 59.695 29.4562 59.995C46.0194 60.295 59.695 47.1069 59.995 30.5313C60.295 13.9681 47.1069 0.292531 30.5438 0.00501883ZM29.5562 54.3697C16.1182 54.1197 5.38024 42.9943 5.63025 29.5562C5.86776 16.1182 16.9932 5.38024 30.4313 5.61775C43.8818 5.86776 54.6072 16.9932 54.3697 30.4313C54.1322 43.8693 42.9943 54.6072 29.5562 54.3697Z\" fill=\"#627EEA\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.3963 8.12285C18.3333 7.91034 8.34536 17.5482 8.13285 29.6112C7.90784 41.6617 17.5457 51.6496 29.6087 51.8746C41.6717 52.0871 51.6596 42.4492 51.8721 30.3988C52.0846 18.3358 42.4592 8.34786 30.3963 8.12285ZM30.0025 14.3581L36.954 26.7599L30.61 23.2297C30.2312 23.0197 29.7725 23.0197 29.3937 23.2297L23.0497 26.7599L30.0025 14.3581ZM30.0025 45.6381L23.0497 33.2364L29.3937 36.7665C29.5825 36.8715 29.7925 36.924 30.0012 36.924C30.21 36.924 30.42 36.8715 30.6088 36.7665L36.9528 33.2364L30.0025 45.6381ZM30.0025 34.2427L22.3722 29.9975L30.0025 25.7523L37.6315 29.9975L30.0025 34.2427Z\" fill=\"#627EEA\"/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2 className=\"invoice-num\">$168,331.09</h2>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M1 1C1.91797 2.08433 4.89728 5.27228 6.5 7L12.5 4L19.5 13\" stroke=\"#F04444\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-danger ms-1 me-1\">45%</span> This week\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-sm-6\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body d-flex\">\r\n\t\t\t\t\t\t\t<div className=\"icon me-3\">\r\n\t\t\t\t\t\t\t\t<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t<circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"white\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.5438 0.00501883C13.9681 -0.294993 0.305031 12.893 0.00501883 29.4562C-0.294993 46.0194 12.893 59.695 29.4562 59.995C46.0194 60.295 59.695 47.1069 59.995 30.5313C60.295 13.9681 47.1069 0.292531 30.5438 0.00501883ZM29.5562 54.3697C16.1182 54.1197 5.38024 42.9943 5.63025 29.5562C5.86776 16.1182 16.9932 5.38024 30.4313 5.61775C43.8818 5.86776 54.6072 16.9932 54.3697 30.4313C54.1322 43.8693 42.9943 54.6072 29.5562 54.3697Z\" fill=\"#345D9D\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M30.3963 8.12285C18.3333 7.91034 8.34536 17.5482 8.13285 29.6112C7.90784 41.6617 17.5457 51.6496 29.6087 51.8746C41.6717 52.0871 51.6596 42.4492 51.8721 30.3988C52.0846 18.3358 42.4592 8.34786 30.3963 8.12285ZM39.4091 42.6993H19.5083L21.9459 29.2112L19.1208 29.7987V27.4986L22.3709 26.8111L24.4835 15.2106H32.4213L30.6213 25.086L33.3964 24.4985V26.7986L30.1962 27.4611L28.3462 37.6616H40.8842L39.4091 42.6993Z\" fill=\"#345D9D\"/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2 className=\"invoice-num\">$7,784</h2>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t<path d=\"M1 1C1.91797 2.08433 4.89728 5.27228 6.5 7L12.5 4L19.5 13\" stroke=\"#F04444\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-danger ms-1 me-1\">45%</span> This week\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-4\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"fs-20 mb-0\">Current Statistic</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div id=\"currentChart\">\r\n\t\t\t\t\t\t\t\t<CurrentRadialApex />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"chart-content\">\t\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#EB8153\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Income (66%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">$167,884.21</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#4441DE\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Spends (50%))</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">$56,411.33</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#60C695\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Installment (11%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">$81,981.22</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mb-2 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<rect width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#F34F80\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fs-14\">Invest (23%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">$12,432.51</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-9 col-xxl-8\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header pb-0 border-0 flex-wrap\">\r\n\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Market Overview</h4>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0 fs-12 text-black\">Lorem ipsum dolor sit amet, consectetur</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"d-flex flex-wrap mb-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox1\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox1\">ETH</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox2\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox2\">XMR</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox3\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox3\">LTC</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-check custom-checkbox me-4 default-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"customCheckBox4\" required />\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"customCheckBox4\">XMR</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Dropdown className=\" weather-btn mb-2\">\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-2 default-select border text-primary cursor-pointer\">{duration2} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Weekly (2021)\")}>Weekly (2021)</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Daily (2021)\")}>Daily (2021)</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDuration2(\"Yearly (2021)\")}>Yearly (2021)</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body pb-0 pt-3\">\r\n\t\t\t\t\t\t\t<div id=\"marketChart\" className=\"market-line\">\r\n\t\t\t\t\t\t\t\t<MarketLineApex />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<CardSlider />\t\t\t\t\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<PreviousTab />\r\n\t\t\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Sell Order</h4>\r\n\t\t\t\t\t\t\t\t\t<Dropdown className=\"dropdown custom-dropdown mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"btn sharp tp-btn dark-btn i-false\" >\t\r\n\t\t\t\t\t\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\t\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item >Details </Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item className=\"text-danger\">Cancel </Dropdown.Item>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body px-4\">\r\n\t\t\t\t\t\t\t\t\t<Dropdown className=\"dropdown custom-dropdown d-block tbl-orders\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"btn  d-flex align-items-center border-0 order-bg rounded  i-false\" >\t\r\n\t\t\t\t\t\t\t\t\t\t\t<svg width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M23.4169 0.00384777C10.7089 -0.226161 0.233857 9.88466 0.00384777 22.5831C-0.226161 35.2815 9.88466 45.7661 22.5831 45.9961C35.2815 46.2261 45.7661 36.1153 45.9961 23.4073C46.2261 10.7089 36.1153 0.224273 23.4169 0.00384777ZM22.6598 41.6834C12.3573 41.4918 4.12485 32.9622 4.31652 22.6598C4.49861 12.3573 13.0281 4.12485 23.3306 4.30694C33.6427 4.49861 41.8655 13.0281 41.6834 23.3306C41.5013 33.6331 32.9622 41.8655 22.6598 41.6834Z\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M23.3038 6.22751C14.0555 6.06459 6.3981 13.4536 6.23518 22.7019C6.06267 31.9406 13.4517 39.598 22.7 39.7705C31.9483 39.9334 39.6057 32.5444 39.7686 23.3057C39.9315 14.0574 32.5521 6.40002 23.3038 6.22751ZM30.2136 32.7361H14.9564L16.8252 22.3952L14.6593 22.8457V21.0823L17.151 20.5552L18.7707 11.6615H24.8563L23.4763 19.2326L25.6039 18.7822V20.5456L23.1504 21.0535L21.732 28.8738H31.3445L30.2136 32.7361Z\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-start ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-block fs-16 text-black\">Litecoin</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-down scale5 ms-auto\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\t\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item>Bitcoin </Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item>ETH coin </Dropdown.Item>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t<OrderData />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xl-3 col-xxl-6 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 text-black fs-20\">Buy Order</h4>\r\n\t\t\t\t\t\t\t\t\t<Dropdown className=\"dropdown custom-dropdown mb-0 tbl-orders-style\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"btn sharp tp-btn dark-btn i-false\" >\t\r\n\t\t\t\t\t\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\" stroke=\"#342E59\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\t\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item >Details </Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item className=\"text-danger\">Cancel </Dropdown.Item>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body pb-0 px-4\">\r\n\t\t\t\t\t\t\t\t\t<Dropdown className=\"dropdown custom-dropdown d-block tbl-orders\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"btn  d-flex align-items-center border-0 order-bg rounded  i-false\" >\t\r\n\t\t\t\t\t\t\t\t\t\t\t<svg width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M23.4169 0.00384778C10.7089 -0.226162 0.233857 9.88467 0.00384778 22.5831C-0.226162 35.2816 9.88467 45.7662 22.5831 45.9962C35.2816 46.2262 45.7662 36.1153 45.9962 23.4073C46.2262 10.7089 36.1153 0.224274 23.4169 0.00384778ZM22.6598 41.6835C12.3573 41.4918 4.12485 32.9623 4.31653 22.6598C4.49862 12.3573 13.0281 4.12485 23.3306 4.30694C33.6427 4.49862 41.8656 13.0281 41.6835 23.3306C41.5014 33.6332 32.9623 41.8656 22.6598 41.6835Z\" fill=\"#FF782C\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M23.3019 6.22369C14.0536 6.06076 6.3962 13.4498 6.23327 22.6981C6.17864 25.6077 6.8773 28.3592 8.14427 30.7705H13.4163V14.2616C13.4163 13.2524 14.7877 12.9313 15.2334 13.837L23 29.5649L30.7667 13.838C31.2123 12.9313 32.5837 13.2524 32.5837 14.2616V30.7705H37.8395C39.0182 28.5298 39.7198 25.9997 39.7667 23.3019C39.9297 14.0536 32.5502 6.3962 23.3019 6.22369Z\" fill=\"#FF782C\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M30.667 31.7289V18.3672L23.8587 32.1534C23.5367 32.808 22.4624 32.808 22.1403 32.1534L15.333 18.3672V31.7289C15.333 32.2579 14.9046 32.6872 14.3746 32.6872H9.34223C12.3237 36.8763 17.1712 39.6632 22.6981 39.7667C28.4455 39.8683 33.5747 37.0507 36.6769 32.6872H31.6254C31.0954 32.6872 30.667 32.2579 30.667 31.7289Z\" fill=\"#FF782C\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-left ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"d-block fs-16 text-black\">Monero</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-down scale5 ms-auto\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item className=\"dropdown-item\">Dash coin</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item className=\"dropdown-item\">ETH coin</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t<OrderData />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t<QuickTransfer />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t<QuickTrade />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js",["1492","1493","1494","1495","1496","1497","1498"],"import React,{useState,useEffect,useContext} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\n// import {Dropdown} from 'react-bootstrap';\r\n\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport Donut from \"../Boltz/MyWallet/Donut\";\r\n\r\nimport Identicon from '@polkadot/react-identicon';   //used for icons of Substrate account\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description, TokenBindings, LP_TokenBindings} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet icons = [], tickSymbols = [], descriptions = [];\r\n\r\n\r\n\r\nconst SummarApexBar = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Portfolio/SummarApexBar\"), 1000)\r\n);\r\nconst CurrentApexBar = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Portfolio/CurrentApexBar\"), 1000)\r\n);\r\nconst CurrentApexDonut = loadable(() =>\r\n\tpMinDelay(import(\"../Boltz/Portfolio/CurrentApexDonut\"), 1000)\r\n);\r\n\r\nconst CoinChart = loadable(() =>\r\n  pMinDelay(import(\"../Boltz/MyWallet/CoinChart\"), 1000)\r\n);\r\n\r\n\r\n\r\nconst Portofolio = ({ setupSpecs, blockChainSpecs, blockHeader, blockTimestamp, extension, accountList, selectedAddress, selectedAccountName, selected_EVM_Address, customerPortfolio, message_1, oraclePrices, customerPortfolioAnalytics }) =>{\r\n\tconst { background } = useContext(ThemeContext);\r\n\r\n\t//used to update prices\r\n\tconst [tokenDonutPerc, setTokenDonutPerc] = useState();\t\r\n\tconst [vaultsDonutPerc, setVaultsDonutPerc] = useState();\t\r\n\tconst [stablecoinsDonutPerc, setStablecoinsDonutPerc] = useState();\t\r\n\tconst [loansDonutPerc, setLoansDonutPerc] = useState();\t\r\n\t\r\n\tconst [sector_stablecoins, setSector_stablecoins] = useState();\t\r\n\tconst [sector_tokens, setSector_tokens]            = useState();\t\r\n\tconst [sector_vaults, setSector_vaults]           = useState();\t\r\n\tconst [sector_loans, setSector_loans]             = useState();\t\r\n\r\n\r\n\tsetTimeout(() => {\r\n\t\tsetTokenDonutPerc(  [25, 17, 2, 7, 4, 5, 20, 15, 8] );\r\n\t},5000)\t\r\n\tsetTimeout(() => {\r\n\t\tsetVaultsDonutPerc(  [17, 15, 22, 4, 11, 7, 9, 15] );\r\n\t},5000)\t\r\n\tsetTimeout(() => {\r\n\t\tsetStablecoinsDonutPerc(  [47, 29, 10, 14] );\r\n\t},5000)\t\r\n\tsetTimeout(() => {\r\n\t\tsetLoansDonutPerc(  [41, 19, 22, 18] );\r\n\t},5000)\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst keys= Object.keys(oracle_EVM_Description);\r\n\t\tkeys.forEach((item) => {\r\n\t\t\ticons.push(oracle_EVM_Icons[item]); \r\n\t\t\tdescriptions.push(oracle_EVM_Description[item]); \r\n\t\t});\r\n\t\ttickSymbols = keys;\r\n\t},[])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t// customerPortfolioAnalytics && totalBalance!==0? (100*(totalIn_Stablecoins/totalBalance)).toFixed(2) : 0\r\n\t\tif (customerPortfolioAnalytics)\r\n\t\t{\r\n\t\t\tsetSector_stablecoins(customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Stablecoins / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0) ;\r\n\t\t\tsetSector_tokens(customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Tokens / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0) ;\r\n\t\t\tsetSector_vaults(customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Vaults / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0) ;\r\n\t\t\tsetSector_loans(customerPortfolioAnalytics.totalBalance!==0? (100*(customerPortfolioAnalytics.totalIn_Loans / customerPortfolioAnalytics.totalBalance)).toFixed(2) : 0) ;\r\n\t\t}\r\n\r\n\t},[customerPortfolioAnalytics])\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"mb-sm-5 mb-3 d-flex flex-wrap align-items-center text-head\">\r\n\t\t\t\t<h2 className=\"font-w600 mb-2 me-auto\">Portfolio</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xl-9 col-xxl-8\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Token Holdings</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\" style={{overflowY: \"scroll\", height:\"400px\"}}>\r\n\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-1 coin-holding flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[0]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[0]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[0]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"ACA\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"ACA\"] && customerPortfolio[\"ACA\"]!==\"0\"? ( Number(oraclePrices[\"ACA\"]) * Number(customerPortfolio[\"ACA\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"ACA\"]? customerPortfolio[\"ACA\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[1]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[1]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[1]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${customerPortfolio[\"AUSD\"]? customerPortfolio[\"AUSD\"] : 0 }</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"AUSD\"]? customerPortfolio[\"AUSD\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-3 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[2]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[2]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[2]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"DOT\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"DOT\"] && customerPortfolio[\"DOT\"]!==\"0\"? ( Number(oraclePrices[\"DOT\"]) * Number(customerPortfolio[\"DOT\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"DOT\"]? customerPortfolio[\"DOT\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-4 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[3]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[3]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[3]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"LDOT\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"LDOT\"] && customerPortfolio[\"LDOT\"]!==\"0\"? ( Number(oraclePrices[\"LDOT\"]) * Number(customerPortfolio[\"LDOT\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"LDOT\"]? customerPortfolio[\"LDOT\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-1 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[4]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[4]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[4]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"RENBTC\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"RENBTC\"] && customerPortfolio[\"RENBTC\"]!==\"0\"? ( Number(oraclePrices[\"RENBTC\"]) * Number(customerPortfolio[\"RENBTC\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"RENBTC\"]? customerPortfolio[\"RENBTC\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[9]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[9]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[9]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"XBTC\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"XBTC\"] && customerPortfolio[\"XBTC\"]!==\"0\"? ( Number(oraclePrices[\"XBTC\"]) * Number(customerPortfolio[\"XBTC\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"XBTC\"]? customerPortfolio[\"XBTC\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[10]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[10]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[10]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">${\r\n\t\t\t\t\t\t\t\t\t\t\t\t!customerPortfolio[\"POLKABTC\"]?  0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: oraclePrices[\"POLKABTC\"] && customerPortfolio[\"POLKABTC\"]!==\"0\"? ( Number(oraclePrices[\"POLKABTC\"]) * Number(customerPortfolio[\"POLKABTC\"]) ).toFixed(3) : 0\r\n\t\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"POLKABTC\"]? customerPortfolio[\"POLKABTC\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[5]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[5]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[5]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">$0</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"KAR\"]? customerPortfolio[\"KAR\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[6]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[6]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[6]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">$0</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"KUSD\"]? customerPortfolio[\"KUSD\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[7]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[7]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[7]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">$0</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"KSM\"]? customerPortfolio[\"KSM\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"bg-gradient-2 coin-holding mt-4 flex-wrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 coin-bx\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<img alt=\"images\" width={50} src={icons[8]} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"coin-font font-w600 mb-0\">{descriptions[8]}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 op-6\">{tickSymbols[8]}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"mb-0 text-primary coin-font-1\">$0</h2>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0 ms-2 font-w400 text-black\">{customerPortfolio[\"LKSM\"]? customerPortfolio[\"LKSM\"] : message_1}</p>\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xl-3 col-xxl-4\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 text-black fs-20\">Profile</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"my-profile\">\r\n\t\t\t\t\t\t\t\t\t<Identicon value={selectedAddress} size={64} theme={'polkadot'}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<h4 className=\"mt-3 font-w600 text-black mb-0 name-text\">{selectedAccountName}</h4>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0 mt-3 text-primary fs-16\">Substrate Address</p>\r\n\t\t\t\t\t\t\t\t<p className=\"fs-12\">{selectedAddress}</p>\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0 mt-3 text-primary fs-16\">EVM Address</p>\r\n\t\t\t\t\t\t\t\t<p className=\"fs-12\">{selected_EVM_Address}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t<div className=\"col-xl-12 col-xxl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t\t<div className=\"d-block d-sm-flex mb-4\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"mb-0 text-black fs-24 me-auto\">Summary</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row align-items-end\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-xl-3 col-lg-12 col-xxl-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-2\">Total Balance</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-black\">${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalBalance).toFixed(2) : 0}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-2\">Free</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-black\">${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalFree).toFixed(2) : 0}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-2\">Locked</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-black\">${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalLocked).toFixed(2) : 0}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-xl-9 col-lg-12 col-xxl-12 mb-lg-0 mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>Sectors</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3 mb-sm-0 mb-4 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block position-relative donut-chart-sale mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{background.value === \"dark\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sector_stablecoins}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor=\"#FF6826\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor2=\"#F0F0F0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut value={sector_stablecoins} backgroundColor=\"#65737e\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{sector_stablecoins}%</small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"fs-18 text-black\">Stablecoins</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalIn_Stablecoins).toFixed(2) : 0}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3 mb-sm-0 mb-4 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block position-relative donut-chart-sale mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{background.value === \"dark\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sector_tokens}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor=\"#1DC624\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor2=\"#F0F0F0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut value={sector_tokens} backgroundColor=\"#2258bf\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{sector_tokens}%</small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"fs-18 text-black\">Tokens</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalIn_Tokens).toFixed(2) : 0}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3 mb-sm-0 mb-4 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block position-relative donut-chart-sale mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{background.value === \"dark\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sector_vaults}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor=\"#1DC624\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor2=\"#F0F0F0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut value={sector_vaults} backgroundColor=\"#1DC624\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{sector_vaults}%</small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"fs-18 text-black\">Vaults</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalIn_Vaults).toFixed(2) : 0}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-inline-block position-relative donut-chart-sale mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{background.value === \"dark\" ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sector_loans}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor=\"#9E9E9E\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor2=\"#F0F0F0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <Donut value={sector_loans} backgroundColor=\"#f04444\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{sector_loans}%</small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"fs-18 text-black\">Loans</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>${customerPortfolioAnalytics? (customerPortfolioAnalytics.totalIn_Loans).toFixed(2) : 0}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 border-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Tokens</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body py-2 text-center\">\r\n\t\t\t\t\t\t\t\t\t<div id=\"pieChart\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t\t\t\t\t<CurrentApexDonut donutPerc={tokenDonutPerc} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"chart-items\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" col-xl-12 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row text-black text-start fs-13 mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tACA\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#52CCCE\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDOT\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#1a8587\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLDOT\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#95D47A\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tXBTC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#688FAD\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tRENBTC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#3F647E\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPOLKABTC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#4B256D\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tKAR\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#EF3E5B\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tKSM\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#FF782C\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLKSM\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 border-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Vaults</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body py-2 text-center\">\r\n\t\t\t\t\t\t\t\t\t<div id=\"pieChart\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t\t\t\t\t<CurrentApexDonut donutPerc={vaultsDonutPerc} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"chart-items\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" col-xl-12 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row text-black text-start fs-13 mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tACA/DOT MC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#52CCCE\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tKAR/KSM MC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#1a8587\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tXBTC/RENBTC/POLKABTC MC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#95D47A\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLDOT/LKSM MC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#688FAD\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tACA DCA\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#3F647E\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tKAR DCA\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#4B256D\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDOT DCA\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#EF3E5B\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tACA/DOT/XBTC <span style={{color:\"orange\"}}>Customised</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 border-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Stablecoins</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body py-2 text-center\">\r\n\t\t\t\t\t\t\t\t\t<div id=\"pieChart\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t\t\t\t\t<CurrentApexDonut donutPerc={stablecoinsDonutPerc} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"chart-items\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" col-xl-12 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row text-black text-start fs-13 mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taUSD\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#52CCCE\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkUSD\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#1a8587\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUSDT\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#95D47A\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUSDC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12 col-md-6\">\r\n\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 border-0\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-20 text-black\">Loans</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body py-2 text-center\">\r\n\t\t\t\t\t\t\t\t\t<div id=\"pieChart\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t\t\t\t\t<CurrentApexDonut donutPerc={loansDonutPerc} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"chart-items\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" col-xl-12 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row text-black text-start fs-13 mt-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#374C98\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tACA\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#52CCCE\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tKAR\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#1a8587\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDOT\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mb-3 col-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg className=\"me-2\" width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#95D47A\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tXBTC\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Portofolio; ","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MarketCapital.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/services/AuthService.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/layouts/PageTitle.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js",["1499","1500"],"import React,{useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {decimals, swapWithExactSupply } from '../../../../AMTC6_API.js';         \r\n\r\n\r\nconst QuickTrade = ({icons, tickSymbols, oraclePrices, blockHeader, customerPortfolio}) => {\r\n\tconst [baseCurrency, setBaseCurrency] = useState(\"ACA\");\t\r\n\tconst [baseCurrencyIconIndex, setBaseCurrencyIconIndex] = useState(0);\t\r\n\tconst [baseCurrencyPlaceHolder, setBaseCurrencyPlaceHolder] = useState(\"values from 1 to 10\");\t\r\n    const [input_Supply_ACA, setInput_Supply_ACA] = useState(\"\");\r\n    const [swapWithExactSupply_IsSubmiting, setSwapWithExactSupply_IsSubmiting] = useState(false);\r\n\r\n    const [expectedToreceiveFromSwap, setExpectedToreceiveFromSwap] = useState(\"expected to receive\");\r\n    const [receiveFromSwap, setReceiveFromSwap] = useState(\"\");\r\n\r\n\tconst [quoteCurrency, setQuotCurrency] = useState(\"AUSD\");\t\r\n\tconst [swapTech, setSwapTech] = useState(\"API\");\t\r\n\r\n\tconst settingBaseCurrency = (tokSymbl) => {\r\n\t\tsetBaseCurrency(tokSymbl);\r\n\t\tconst tok_indx =  tickSymbols.findIndex((tok) => tok.toLowerCase()===tokSymbl.toLowerCase());\r\n\t\tsetBaseCurrencyIconIndex(tok_indx);\r\n\t\tif (tokSymbl!==\"ACA\") {setInput_Supply_ACA(\"\"); setBaseCurrencyPlaceHolder(\"currently only ACA is supported\"); }\r\n\t\telse if (customerPortfolio) setInput_Supply_ACA(customerPortfolio[tokSymbl]);\r\n\t};\r\n\r\n \r\n\r\n\tconst _swapWithExactSupply = async () => {\r\n\t\tif (baseCurrency==='ACA')\r\n\t\t{\r\n\t\t\tsetSwapWithExactSupply_IsSubmiting(true);\r\n\t\t\tsetReceiveFromSwap(`Transaction submitted at BlockNumber: ${blockHeader.number}`);\r\n\r\n\t\t\tconst result = await swapWithExactSupply(input_Supply_ACA);\r\n\t\t\tconsole.log(`QuickTrade SWAP result: `,result);\r\n\t\t\tconsole.dir(result);\r\n\r\n\t\t\t\r\n\t\t\tsetSwapWithExactSupply_IsSubmiting(false);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (customerPortfolio[baseCurrency])\r\n\t\t{\r\n\t\t\tsetInput_Supply_ACA(customerPortfolio[baseCurrency]);\r\n\t\t}\r\n\t},[baseCurrency]);\r\n\r\n\t\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Swap</h4>\r\n\t\t\t\t\t\t<p className=\"fs-12\">Exact amount of supplied tokens</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Dropdown className=\"quick-select\">\r\n\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-2 default-select cursor-pointer\">{swapTech} </Dropdown.Toggle>\r\n\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setSwapTech(\"EVM\")}>EVM</Dropdown.Item>\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setSwapTech(\"API\")}>API</Dropdown.Item>\r\n\t\t\t\t\t\t </Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"basic-form\">\r\n\t\t\t\t\t\t<form className=\"form-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"input-group-text form-control style-2 default-select cursor-pointer\"><img alt=\"images\" width={50} src={icons[baseCurrencyIconIndex]} style={{ marginRight: \"25px\" }}/>{baseCurrency} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"ACA\")}>ACA</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"DOT\")}>DOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LDOT\")}>LDOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"XBTC\")}>XBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"RENBTC\")}>RENBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"POLKABTC\")}>POLKABTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"KAR\")}>KAR</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"KSM\")}>KSM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LKSM\")}>LKSM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"PHA\")}>PHA</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"PLM\")}>PLM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" max=\"10\" step=\"0.01\" className=\"form-control\" placeholder={baseCurrencyPlaceHolder} value = { input_Supply_ACA } onChange = { (event) => { setInput_Supply_ACA(event.target.value); setExpectedToreceiveFromSwap(Number(oraclePrices[\"ACA\"]) * Number(event.target.value) );}  } style={{color:\"white\"}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"input-group-text form-control style-2 default-select cursor-pointer\"><img alt=\"images\" width={50} src={icons[1]} style={{ marginRight: \"25px\", color:\"white\" }}/>{\"AUSD\"} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setQuotCurrency(\"AUSD\")}>{quoteCurrency}</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" disable=\"true\" value=\"\" onChange={(event) => console.log(event.target.value)} placeholder={expectedToreceiveFromSwap} className=\"form-control\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">Fee (0.3%)</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"form-control\">0</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">Receive</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"form-control\" style={{color:\"green\"}}>{receiveFromSwap}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row mt-4 align-items-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"row pt-5 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary d-block btn-lg rounded\">\r\n    \t\t\t\t                    \t<button className=\"btn-primary\" disabled = { swapWithExactSupply_IsSubmiting } onClick = { _swapWithExactSupply } style={{border: \"none\"}}>SWAP</button> \r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default QuickTrade;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js",["1501","1502"],"import React,{useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport TestimonialOwl from './TestimonialOwl';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {decimals, transfer_Balance, transfer_Currency } from '../../../../AMTC6_API.js';         \r\n\r\n// import {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description} from '../../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\n\r\n \r\nconst QuickTransfer = ({icons, tickSymbols, blockHeader, customerPortfolio}) => {\r\n\tconst [baseCurrency, setBaseCurrency] = useState(\"ACA\");\t\r\n\tconst [baseCurrencyIconIndex, setBaseCurrencyIconIndex] = useState(0);\t\r\n\r\n\tconst [baseCurrencyPlaceHolder, setBaseCurrencyPlaceHolder] = useState(\"values from 1 to 10\");\t\r\n    const [inputTranferAmount, setInputTranferAmount] = useState(\"\");\r\n\r\n    const [transfer_IsSubmiting, setTransfer_IsSubmiting] = useState(false);\r\n    const [transactionMessage, setTransactionMessage] = useState(\"...........\");\r\n\r\n\r\n\tconst [swapTech, setSwapTech] = useState(\"API\");\r\n\tconst [placeholderText, setPlaceholderText] = useState(\"Substrate Address\");\t\r\n\tconst [sendToAddress, setSendToAddress] = useState(\"\");\t\r\n\r\n\tconst provideAddressToSendCoins = (adr) => {\r\n\t\tsetSendToAddress(adr);\r\n\t};\r\n\r\n\r\n\tconst settingBaseCurrency = (tokSymbl) => {\r\n\t\tsetBaseCurrency(tokSymbl);\r\n\t\tconst tok_indx =  tickSymbols.findIndex((tok) => tok.toLowerCase()===tokSymbl.toLowerCase());\r\n\t\tsetBaseCurrencyIconIndex(tok_indx);\r\n\t\tif (tokSymbl!==\"ACA\" && tokSymbl!==\"DOT\") { setInputTranferAmount(\"\"); setBaseCurrencyPlaceHolder(\"currently only ACA,DOT and XBTC are supported\"); }\r\n\t\telse if (customerPortfolio) setInputTranferAmount(customerPortfolio[tokSymbl]);\r\n\t};\r\n\r\n\r\n\tconst transferBalance = async () => {\r\n\t\tconsole.log(`QuickTransfer transferBalance baseCurrency: `,baseCurrency,` sendToAddress: `,sendToAddress,`  inputTranferAmount: `,inputTranferAmount);\r\n\r\n\t\tif ( (baseCurrency==='ACA') && sendToAddress!==\"\" && inputTranferAmount!==\"0\")\r\n\t\t{\r\n\t\t\tsetTransfer_IsSubmiting(true);\r\n\t\t\tsetTransactionMessage(`Transfer Transaction submitted at BlockNumber: ${blockHeader.number}`);\r\n\r\n\t\t\tconst result = await transfer_Balance(inputTranferAmount, sendToAddress);\r\n\t\t\tconsole.log(`QuickTransfer TRANSFER result: `,result);\r\n\t\t\tconsole.dir(result);\r\n\t\t\t\r\n\t\t\tsetTransfer_IsSubmiting(false);\r\n\t\t}\r\n\t\telse if ( (baseCurrency==='DOT' || baseCurrency==='XBTC') && sendToAddress!==\"\" && inputTranferAmount!==\"0\")\r\n\t\t{\r\n\t\t\tsetTransfer_IsSubmiting(true);\r\n\t\t\tsetTransactionMessage(`Transfer Transaction submitted at BlockNumber: ${blockHeader.number}`);\r\n\r\n\t\t\tconst result = await transfer_Currency(inputTranferAmount, baseCurrency, sendToAddress);\r\n\t\t\tconsole.log(`QuickTransfer TRANSFER CURRENCY result: `,result);\r\n\t\t\tconsole.dir(result);\r\n\t\t\t\r\n\t\t\tsetTransfer_IsSubmiting(false);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (customerPortfolio[baseCurrency])\r\n\t\t{\r\n\t\t\tsetInputTranferAmount(customerPortfolio[baseCurrency]);\r\n\t\t}\r\n\t},[baseCurrency]);\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Quick Transfer</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Dropdown className=\"quick-select\">\r\n\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-2 default-select cursor-pointer\">{swapTech} </Dropdown.Toggle>\r\n\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => { setSwapTech(\"EVM\"); setPlaceholderText(\"EVM Address\") }}>EVM</Dropdown.Item>\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => { setSwapTech(\"API\"); setPlaceholderText(\"Substrate Address\") }}>API</Dropdown.Item>\r\n\t\t\t\t\t\t </Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"form-wrapper\">\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"input-group-text form-control style-2 default-select cursor-pointer\"><img alt=\"images\" width={50} src={icons[baseCurrencyIconIndex]} style={{ marginRight: \"25px\" }}/>{baseCurrency} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"ACA\")}>ACA</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"DOT\")}>DOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LDOT\")}>LDOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"XBTC\")}>XBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"RENBTC\")}>RENBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"POLKABTC\")}>POLKABTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"KAR\")}>KAR</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"KSM\")}>KSM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LKSM\")}>LKSM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"PHA\")}>PHA</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"PLM\")}>PLM</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" max=\"10\" step=\"0.01\" className=\"form-control\" value={inputTranferAmount} placeholder={baseCurrencyPlaceHolder} onChange = {(event) => setInputTranferAmount(event.target.value)} style={{color:\"white\"}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">send to Address</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={sendToAddress} placeholder={placeholderText} onChange = {(event) => setSendToAddress(event.target.value)} style={{fontSize: \"14px\", color: \"white\"}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<span style={{fontSize:10, color:\"green\"}}>{transactionMessage}</span>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\r\n\t\t\t\t\t<div className=\"d-flex mb-3 justify-content-between align-items-center view-link\">\r\n\t\t\t\t\t\t<h4 className=\"text-black fs-20 mb-0\">Recent Contacts</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TestimonialOwl provideAddressToSendCoins={provideAddressToSendCoins} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row pt-5 align-items-center\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary d-block btn-lg rounded\" style={{backgroundColor: \"#DE9C06\"}}>\r\n    \t\t\t\t                    \t<button className=\"btn-primary\" disabled={transfer_IsSubmiting} onClick = {transferBalance} style={{border: \"none\", backgroundColor: \"#DE9C06\"}}>TRANSFER</button> \r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default QuickTransfer;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js",[],["1503","1504"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js",["1505","1506","1507","1508","1509","1510","1511"],"import React,{useState,useEffect} from 'react';\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\n//Import\r\nimport VaultDetailTab from './VaultDetailTab';\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description} from '../../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet icons = [], tickSymbols = [];\r\n\r\n\r\nconst CoinLineChart1 = loadable(() =>\r\n\tpMinDelay(import(\"./CoinCharts/CoinLineChart1\"), 1000)\r\n);\r\n\r\nconst CoinDetailTab = ({ setupSpecs, blockChainSpecs, blockHeader, blockTimestamp, extension, accountList }) =>{\r\n\t \r\n\tconst vautMandate_ACA_DOT_MC =  (<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Vault holds Acala (ACA) and Polkadot (DOT) coins based on relative market capitilisations. Coins are staked at Acala to collect yield. This vault is eligible to collect liquidity incentives of platorm token T54.</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Yields are collected both in ACA from the Acala parachain and T54 from native platform. With proceeds more ACA and DOT are purchased according to Vault weights and deposited into Vault</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">With Acala secure, fast and cheap transaction costs rebalancing happens as often as every ten blocks and proceeds reinvestments as often as every twenty blocks</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">To participate in this Vault, ACA and DOT need to be deposited</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">This vault is eligible for usage when setting finacial goals</p>\r\n\t\t\t\t\t\t\t\t\t</div>);\r\n\tconst vautMandate_ACA_DCA =  (<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Vault holds Acala (ACA) coins. Coins are staked at Acala to collect yield. This vault is eligible to collect liquidity incentives of platorm token T54.</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Yields are collected both in ACA from the Acala parachain and T54 from native platform. With proceeds more ACA is purchased and deposited into Vault</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">With Acala secure, fast and cheap transaction costs reinvestment can occur as often as every ten blocks. Dollar cost averaging frequency for this vault is currently voted in DAO at 7200 blocks</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">To participate in this Vault, ACA needs to be deposited</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">This vault is eligible for usage when setting finacial goals</p>\r\n\t\t\t\t\t\t\t\t\t</div>);\r\n\tconst vautMandate_XBTC_RENBTC_POLKABTC_MC =  (<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Vault holds XBTC (XBTC) and RENBTC (RENBTC)  and POLKABTC (POLKABTC) coins based on relative market capitilisations. Coins are staked at Acala to collect yield. This vault is eligible to collect liquidity incentives of platorm token T54.</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Yields are collected both in ACA from the Acala parachain and T54 from native platform. With proceeds more XBTC, RENBTC and POLKABTC are purchased according to Vault weights and deposited into Vault</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">With Acala secure, fast and cheap transaction costs rebalancing happens as often as every ten blocks and proceeds reinvestments as often as every twenty blocks</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">To participate in this Vault, XBTC, RENBTC and POLKABTC need to be deposited</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">This vault is eligible for usage when setting finacial goals</p>\r\n\t\t\t\t\t\t\t\t\t</div>);\r\n\tconst vautMandate_custom_ACA_DOT_XBTC_MC =  (<div>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Vault holds Acala (ACA) and Polkadot (DOT) and XBTC (XBTC) coins based on relative market capitilisations. Coins are staked at Acala to collect yield. This vault is eligible to collect liquidity incentives of platorm token T54.</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">Yields are collected both in ACA from the Acala parachain and T54 from native platform. With proceeds more ACA, DOT and XBTC are purchased according to Vault weights and deposited into Vault</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">With Acala secure, fast and cheap transaction costs rebalancing happens as often as every ten blocks and proceeds reinvestments as often as every twenty blocks</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">To participate in this Vault, ACA, DOT and XBTC need to be deposited</p>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"fs-14\">This vault is eligible for usage when setting finacial goals</p>\r\n\t\t\t\t\t\t\t\t\t</div>);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst keys= Object.keys(oracle_EVM_Icons);\r\n\t\tkeys.forEach((item) => {\r\n\t\t  icons.push(oracle_EVM_Icons[item]); \r\n\t\t});\r\n\t\ttickSymbols = keys;\r\n\t},[])\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Tab.Container defaultActiveKey=\"ACA/DOT MC\">\r\n\t\t\t\t<div className=\"d-flex flex-wrap mb-sm-4 mt-3 text-head\">\r\n\t\t\t\t\t<h2 className=\"text-black me-auto font-w600 mb-2\">VAULTS</h2>\r\n\t\t\t\t\t<div className=\"card-action coin-tabs mt-3 mt-sm-0\">\r\n\t\t\t\t\t\t<Nav as=\"ul\" className=\"nav nav-tabs\" role=\"tablist\">\r\n\t\t\t\t\t\t\t<Nav.Item as=\"li\" className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Nav.Link as=\"a\" className=\"nav-link \"  eventKey=\"ACA/DOT MC\" role=\"tab\">\r\n\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<img src={icons[2]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\tACA/DOT MC\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item as=\"li\" className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Nav.Link as=\"a\" className=\"nav-link \"  eventKey=\"ACA DCA\" role=\"tab\">\r\n\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\tACA DCA\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Nav.Item as=\"li\" className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Nav.Link as=\"a\" className=\"nav-link \"  eventKey=\"XBTC/RENBTC/POLKABTC MC\" role=\"tab\">\r\n\t\t\t\t\t\t\t\t\t<img src={icons[9]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<img src={icons[4]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<img src={icons[10]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\tXBTC/RENBTC/POLKABTC MC\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Nav.Item as=\"li\" className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Nav.Link as=\"a\" className=\"nav-link\"  eventKey=\"custom_ACA/DOT/XBTC MC\" role=\"tab\">\r\n\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<img src={icons[2]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<img src={icons[9]}  width=\"25\"  height=\"25\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\tcustom_ACA\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t </Nav>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Tab.Content className=\"tab-content\">\r\n\t\t\t\t\t<Tab.Pane eventKey=\"ACA/DOT MC\">\r\n\t\t\t\t\t\t<VaultDetailTab icons={icons} title={\"ACA/DOT MC\"} tokens={[\"ACA\",\"DOT\"]} vaultMandate={vautMandate_ACA_DOT_MC} vaultValues={{TVL:\"117,857,000\", numOfCoins:\"10,763,196\", coinPrice:\"1.095\", description:\"Acala Polkadot Market Capitalisation Rebalanced\" }} chart={\"1\"}  />\r\n\t\t\t\t\t</Tab.Pane>\t\r\n\t\t\t\t\t<Tab.Pane eventKey=\"ACA DCA\">\r\n\t\t\t\t\t\t<VaultDetailTab icons={icons} title={\"ACA DCA\"} tokens={[\"ACA\"]} vaultMandate={vautMandate_ACA_DCA} vaultValues={{TVL:\"117,857,000\", numOfCoins:\"10,763,196\", coinPrice:\"1.095\", description:\"Acala Dollar Cost Averaging\" }} chart={\"2\"}   />\r\n\t\t\t\t\t</Tab.Pane>\t\r\n\t\t\t\t\t<Tab.Pane eventKey=\"XBTC/RENBTC/POLKABTC MC\">\r\n\t\t\t\t\t\t<VaultDetailTab icons={icons} title={\"XBTC/RENBTC/POLKABTC MC\"} tokens={[\"XBTC\",\"RENBTC\",\"POLKABTC\"]} vaultMandate={vautMandate_XBTC_RENBTC_POLKABTC_MC} vaultValues={{TVL:\"117,857,000\", numOfCoins:\"10,763,196\", coinPrice:\"1.095\", description:\"XBTC RENBTC and PolkaBTC Market Capitalisation Rebalanced\" }} chart={\"3\"}   />\r\n\t\t\t\t\t</Tab.Pane>\t\r\n\t\t\t\t\t<Tab.Pane eventKey=\"custom_ACA/DOT/XBTC MC\">\r\n\t\t\t\t\t\t<VaultDetailTab icons={icons} title={\"custom_ACA/DOT/XBTC MC\"} tokens={[\"ACA\",\"DOT\",\"XBTC\"]} vaultMandate={vautMandate_custom_ACA_DOT_XBTC_MC} vaultValues={{TVL:\"117,857,000\", numOfCoins:\"10,763,196\", coinPrice:\"1.095\", description:\"Acala Polkadot XBTC Market Capitalisation Rebalanced\" }} chart={\"4\"}   />\r\n\t\t\t\t\t</Tab.Pane>\t\r\n\t\t\t\t</Tab.Content>\t\t\r\n\t\t\t</Tab.Container>\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default CoinDetailTab;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/QuickTradeTab.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/store/selectors/AuthSelectors.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/Predeployed_EVM.js",["1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544"],"// import React, { useState, useEffect } from 'react';\n\nimport {createWallet} from './Setup.js';     //Blockchain provider,signer setup  createWallet for a customer and helper functions\n\nimport { ethers } from 'ethers';\n\n// import Token54u_raw from './Abis/AMTC6_Predeployed_bytecodes';\nimport bytecodes from './Abis/AcalaMandalaTC6/AMTC6_Predeployed_bytecodes';   //addresses and names of predeployed sc\nimport Token_raw from './Abis/AcalaMandalaTC6/Token';  //abi of ERC20 token\nimport Oracle_raw from './Abis/AcalaMandalaTC6/Oracle';  //abi of Oracle\nimport Schedule_raw from './Abis/AcalaMandalaTC6/Schedule';  //abi of Scheduler\nimport DEX_raw from './Abis/AcalaMandalaTC6/DEX';  //abi of DEX\n\nimport Identicon from '@polkadot/react-identicon';   //used for icons of Substrate account\nimport aca_icon from \"./icons/crypto/aca.png\";\nimport ausd_icon from \"./icons/crypto/ausd.png\";\nimport dot_icon from \"./icons/crypto/dot.png\";\nimport ldot_icon from \"./icons/crypto/ldot.png\";\nimport renBTC_icon from \"./icons/crypto/renbtc.png\";\nimport kar_icon from \"./icons/crypto/kar.png\";\nimport kusd_icon from \"./icons/crypto/kusd.png\";\nimport ksm_icon from \"./icons/crypto/ksm.png\";\nimport lksm_icon from \"./icons/crypto/lksm.png\";\nimport xbtc_icon from \"./icons/crypto/xbtc.png\";\nimport polkaBTC_icon from \"./icons/crypto/polkabtc.png\";\nimport pha_icon from \"./icons/crypto/pha.png\";\nimport plm_icon from \"./icons/crypto/plm.png\";\n\n\n\n\n\n\nlet TokenBindings = {}, LP_TokenBindings = {};   //This will hold an object with all ERC20 token smart contracts\n\n\nlet customerAccount ;\nlet customerSubstrateAccount;\nlet customerWallet ;\nlet customerSCabstraction ;    //defines a scAbstraction connected to customer wallet so customer can sign transactions\nlet customerBalance ;\nlet spender        = { spenderAddress: undefined, spenderAllowance: undefined};\nlet customerSpenders = { spenders: []};\nlet baseToken;\n\nlet portfolio_Gillian = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined };\nlet portfolio_Emma   = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined };\nlet portfolio_Helen   = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined };\n\nlet sc_ACA                      = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_AUSD                      = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_DOT                       = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LDOT                      = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_RENBTC                  = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_KAR                        = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_KUSD                      = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_KSM                       = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LKSM                    = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_ACA_AUSD        = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_DOT_AUSD        = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_LDOT_AUSD      = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_RENBTC_AUSD  = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_KAR_KUSD        = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_KSM_KUSD        = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\nlet sc_LP_LKSM_KUSD   = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined };\n\nlet sc_Oracle  = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined };\nlet oracle_EVM_Prices = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined };\nlet oracle_EVM_Icons = { ACA: aca_icon, AUSD: ausd_icon, DOT: dot_icon, LDOT: ldot_icon, RENBTC: renBTC_icon, KAR: kar_icon, KUSD: kusd_icon, KSM: ksm_icon, LKSM: lksm_icon, XBTC: xbtc_icon, POLKABTC: polkaBTC_icon, PHA: pha_icon, PLM: plm_icon };\nlet oracle_EVM_Description = { ACA: \"Acala\", AUSD: \"Acala USD\", DOT: \"Polkadot\", LDOT: \"Liquid Dot\", RENBTC: \"Ren Bitcoin\", KAR: \"Karura\", KUSD: \"Karura USD\", KSM: \"Kusama\", LKSM: \"Liquid Kusama\", XBTC: \"XBTC\", POLKABTC: \"Polka Bitcoin\", PHA: \"Phala\", PLM: \"Astar Network\" };\nlet oracle_EVM_PricesHuman = { ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined };\n\n\nlet sc_Schedule = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined };\n    \nlet sc_DEX = { scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined };\nlet dexLiquidity = { tokenA: undefined, tokenB: undefined};\n\n\n\n// const Predeployed = ({setupSpecs, getCurrentGasPrice}) => {\n    //#region\n    // const [sc, setSC]                             = useState({ scAddress: undefined, scABI: undefined, scReadOnly: undefined, scAbstraction: undefined });\n    // const [scStateVariables, setSCStateVariables] = useState({ name: undefined, symbol: undefined, administrator: \"\", decimals: undefined, totalSupply: undefined });\n    \n    // const [customerAccount, setCustomerAccount]   = useState(undefined);\n    // const [customerWallet, setCustomerWallet]     = useState(undefined);\n    // const [customerSCabstraction, setCustomerSCAbstraction] = useState(undefined);    //defines a scAbstraction connected to customer wallet so customer can sign transactions\n    // const [customerBalance, setCustomerBalance]   = useState(undefined);\n    // const [spender, setSpender]                   = useState({ spenderAddress: undefined, spenderAllowance: undefined});\n    // const [customerSpenders, setCustomerSpenders] = useState({ spenders: []});\n    // const [customerSubstrateAccount, setCustomerSubstrateAccount]   = useState(undefined);\n\n\n    // const [portfolio_Gillian, setPortfolio_Gillian] = useState({ ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined });\n    // const [portfolio_Emma, setPortfolio_Emma]       = useState({ ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined });\n    // const [portfolio_Helen, setPortfolio_Helen]     = useState({ ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined, ACA: undefined, LP_ACA_AUSD: undefined, LP_DOT_AUSD: undefined, LP_LDOT_AUSD: undefined, LP_RENBTC_AUSD: undefined, LP_KAR_KUSD: undefined, LP_KSM_KUSD: undefined, LP_LKSM_KUSD: undefined });\n\n    // const [baseToken, setBaseToken]               = useState(undefined);\n\n\n    // const [sc_ACA, setSC_ACA]                       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_AUSD, setSC_AUSD]                     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_DOT, setSC_DOT]                       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LDOT, setSC_LDOT]                     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_RENBTC, setSC_RENBTC]                 = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_KAR, setSC_KAR]                       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_KUSD, setSC_KUSD]                     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_KSM, setSC_KSM]                       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LKSM, setSC_LKSM]                     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_ACA_AUSD, setSC_LP_ACA_AUSD]       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_DOT_AUSD, setSC_LP_DOT_AUSD]       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_LDOT_AUSD, setSC_LP_LDOT_AUSD]     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_RENBTC_AUSD, setSC_LP_RENBTC_AUSD] = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_KAR_KUSD, setSC_LP_KAR_KUSD]       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_KSM_KUSD, setSC_LP_KSM_KUSD]       = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // const [sc_LP_LKSM_KUSD, setSC_LP_LKSM_KUSD]     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    // // const [sc_CASH, setSC_CASH]                     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined, name: undefined, symbol: undefined, decimals: undefined, totalSupply: undefined });\n    \n    // const [sc_Oracle, setSC_Oracle]     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined });\n    // const [oraclePrices, setOraclePrices] = useState({ ACA: undefined, AUSD: undefined, DOT: undefined, LDOT: undefined, RENBTC: undefined, KAR: undefined, KUSD: undefined, KSM: undefined, LKSM: undefined });\n    // const [sc_Schedule, setSC_Schedule]     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined });\n    // const [sc_DEX, setSC_DEX]     = useState({ scAddress: undefined, scReadOnly: undefined, scAbstraction: undefined });\n    // const [dexLiquidity, setDexLiquidity]     = useState({ tokenA: undefined, tokenB: undefined});\n    //#endregion\n\n\n    //#region EVM_Setup\n        const EVM_Setup = async (setupSpecs) => {\n            if (setupSpecs.connected === 'Connected to AcalaMandalaTC6')\n            {\n                console.log('Predeployed_EVM setupSpecs.connected : ',setupSpecs.connected);\n        \n                //SMART CONTRACT SETUP SPECS\n                //TOKENS\n                const Token_ABI =  Token_raw.abi;                       \n        \n                //SMART CONTRACT ADDRESS  \n                // const Token54u_Address = bytecodes[2][1]; //found in https://evm.acala.network/#/execute\n        \n                //CONTRACT ABSTRACTIONS\n                // The Contracts object below are connected to the Provider which is read-only.for Read Only transactions\n                // const Token54u_Contract =  new ethers.Contract(Token54u_Address, Token54u_ABI, setupSpecs.provider);\n\n                //ACA\n                const ACA_Contract =  new ethers.Contract( bytecodes[0][1], Token_ABI, setupSpecs.provider);\n                sc_ACA = { scAddress: ACA_Contract.address, scReadOnly: ACA_Contract, scAbstraction: undefined, name: await ACA_Contract.name(), symbol: await ACA_Contract.symbol(), decimals: await ACA_Contract.decimals(), totalSupply: (await ACA_Contract.totalSupply()).toString() };\n                //AUSD\n                const AUSD_Contract =  new ethers.Contract( bytecodes[1][1], Token_ABI, setupSpecs.provider);\n                sc_AUSD = { scAddress: AUSD_Contract.address, scReadOnly: AUSD_Contract, scAbstraction: undefined, name: await AUSD_Contract.name(), symbol: await AUSD_Contract.symbol(), decimals: await AUSD_Contract.decimals(), totalSupply: (await AUSD_Contract.totalSupply()).toString() };\n                //DOT\n                const DOT_Contract =  new ethers.Contract( bytecodes[2][1], Token_ABI, setupSpecs.provider);\n                sc_DOT = { scAddress: DOT_Contract.address, scReadOnly: DOT_Contract, scAbstraction: undefined, name: await DOT_Contract.name(), symbol: await DOT_Contract.symbol(), decimals: await DOT_Contract.decimals(), totalSupply: (await DOT_Contract.totalSupply()).toString() };\n                //LDOT\n                const LDOT_Contract =  new ethers.Contract( bytecodes[3][1], Token_ABI, setupSpecs.provider);\n                sc_LDOT = { scAddress: LDOT_Contract.address, scReadOnly: LDOT_Contract, scAbstraction: undefined, name: await LDOT_Contract.name(), symbol: await LDOT_Contract.symbol(), decimals: await LDOT_Contract.decimals(), totalSupply: (await LDOT_Contract.totalSupply()).toString() };\n                //RENBTC\n                const RENBTC_Contract =  new ethers.Contract( bytecodes[4][1], Token_ABI, setupSpecs.provider);\n                sc_RENBTC = { scAddress: RENBTC_Contract.address, scReadOnly: RENBTC_Contract, scAbstraction: undefined, name: await RENBTC_Contract.name(), symbol: await RENBTC_Contract.symbol(), decimals: await RENBTC_Contract.decimals(), totalSupply: (await RENBTC_Contract.totalSupply()).toString() };\n                //KAR\n                const KAR_Contract =  new ethers.Contract( bytecodes[6][1], Token_ABI, setupSpecs.provider);\n                sc_KAR = { scAddress: KAR_Contract.address, scReadOnly: KAR_Contract, scAbstraction: undefined, name: await KAR_Contract.name(), symbol: await KAR_Contract.symbol(), decimals: await KAR_Contract.decimals(), totalSupply: (await KAR_Contract.totalSupply()).toString() };\n                //KUSD\n                const KUSD_Contract =  new ethers.Contract( bytecodes[7][1], Token_ABI, setupSpecs.provider);\n                sc_KUSD = { scAddress: KUSD_Contract.address, scReadOnly: KUSD_Contract, scAbstraction: undefined, name: await KUSD_Contract.name(), symbol: await KUSD_Contract.symbol(), decimals: await KUSD_Contract.decimals(), totalSupply: (await KUSD_Contract.totalSupply()).toString() };\n                //KSM\n                const KSM_Contract =  new ethers.Contract( bytecodes[8][1], Token_ABI, setupSpecs.provider);\n                sc_KSM = { scAddress: KSM_Contract.address, scReadOnly: KSM_Contract, scAbstraction: undefined, name: await KSM_Contract.name(), symbol: await KSM_Contract.symbol(), decimals: await KSM_Contract.decimals(), totalSupply: (await KSM_Contract.totalSupply()).toString() };\n                //LKSM\n                const LKSM_Contract =  new ethers.Contract( bytecodes[9][1], Token_ABI, setupSpecs.provider);\n                sc_LKSM = { scAddress: LKSM_Contract.address, scReadOnly: LKSM_Contract, scAbstraction: undefined, name: await LKSM_Contract.name(), symbol: await LKSM_Contract.symbol(), decimals: await LKSM_Contract.decimals(), totalSupply: (await LKSM_Contract.totalSupply()).toString() };\n\n                //LP_ACA_AUSD\n                const LP_ACA_AUSD_Contract =  new ethers.Contract( bytecodes[10][1], Token_ABI, setupSpecs.provider);\n                sc_LP_ACA_AUSD = { scAddress: LP_ACA_AUSD_Contract.address, scReadOnly: LP_ACA_AUSD_Contract, scAbstraction: undefined }; //, name: await LP_ACA_AUSD_Contract.name(), symbol: await LP_ACA_AUSD_Contract.symbol(), decimals: await LP_ACA_AUSD_Contract.decimals(), totalSupply: (await LP_ACA_AUSD_Contract.totalSupply()).toString() });\n                //LP_DOT_AUSD\n                const LP_DOT_AUSD_Contract =  new ethers.Contract( bytecodes[11][1], Token_ABI, setupSpecs.provider);\n                sc_LP_DOT_AUSD = { scAddress: LP_DOT_AUSD_Contract.address, scReadOnly: LP_DOT_AUSD_Contract, scAbstraction: undefined }; //, name: await LP_DOT_AUSD_Contract.name(), symbol: await LP_DOT_AUSD_Contract.symbol(), decimals: await LP_DOT_AUSD_Contract.decimals(), totalSupply: (await LP_DOT_AUSD_Contract.totalSupply()).toString() });\n                //LP_LDOT_AUSD\n                const LP_LDOT_AUSD_Contract =  new ethers.Contract( bytecodes[12][1], Token_ABI, setupSpecs.provider);\n                sc_LP_LDOT_AUSD = { scAddress: LP_LDOT_AUSD_Contract.address, scReadOnly: LP_LDOT_AUSD_Contract, scAbstraction: undefined }; //, name: await LP_LDOT_AUSD_Contract.name(), symbol: await LP_LDOT_AUSD_Contract.symbol(), decimals: await LP_LDOT_AUSD_Contract.decimals(), totalSupply: (await LP_LDOT_AUSD_Contract.totalSupply()).toString() });\n                //LP_RENBTC_AUSD\n                const LP_RENBTC_AUSD_Contract =  new ethers.Contract( bytecodes[13][1], Token_ABI, setupSpecs.provider);\n                sc_LP_RENBTC_AUSD = { scAddress: LP_RENBTC_AUSD_Contract.address, scReadOnly: LP_RENBTC_AUSD_Contract, scAbstraction: undefined }; //, name: await LP_RENBTC_AUSD_Contract.name(), symbol: await LP_RENBTC_AUSD_Contract.symbol(), decimals: await LP_RENBTC_AUSD_Contract.decimals(), totalSupply: (await LP_RENBTC_AUSD_Contract.totalSupply()).toString() });\n                //LP_KAR_KUSD\n                const LP_KAR_KUSD_Contract =  new ethers.Contract( bytecodes[14][1], Token_ABI, setupSpecs.provider);\n                sc_LP_KAR_KUSD = { scAddress: LP_KAR_KUSD_Contract.address, scReadOnly: LP_KAR_KUSD_Contract, scAbstraction: undefined }; //, name: await LP_KAR_KUSD_Contract.name(), symbol: await LP_KAR_KUSD_Contract.symbol(), decimals: await LP_KAR_KUSD_Contract.decimals(), totalSupply: (await LP_KAR_KUSD_Contract.totalSupply()).toString() });\n                //LP_KSM_KUSD\n                const LP_KSM_KUSD_Contract =  new ethers.Contract( bytecodes[15][1], Token_ABI, setupSpecs.provider);\n                sc_LP_KSM_KUSD = { scAddress: LP_KSM_KUSD_Contract.address, scReadOnly: LP_KSM_KUSD_Contract, scAbstraction: undefined }; //, name: await LP_KSM_KUSD_Contract.name(), symbol: await LP_KSM_KUSD_Contract.symbol(), decimals: await LP_KSM_KUSD_Contract.decimals(), totalSupply: (await LP_KSM_KUSD_Contract.totalSupply()).toString() });\n                //LP_LKSM_KUSD\n                const LP_LKSM_KUSD_Contract =  new ethers.Contract( bytecodes[16][1], Token_ABI, setupSpecs.provider);\n                sc_LP_LKSM_KUSD = { scAddress: LP_LKSM_KUSD_Contract.address, scReadOnly: LP_LKSM_KUSD_Contract, scAbstraction: undefined }; //, name: await LP_LKSM_KUSD_Contract.name(), symbol: await LP_LKSM_KUSD_Contract.symbol(), decimals: await LP_LKSM_KUSD_Contract.decimals(), totalSupply: (await LP_LKSM_KUSD_Contract.totalSupply()).toString() });\n                \n                TokenBindings = {\n                                    \"ACA\"           : sc_ACA,\n                                    \"AUSD\"          : sc_AUSD,\n                                    \"DOT\"           : sc_DOT,\n                                    \"LDOT\"          : sc_LDOT,\n                                    \"RENBTC\"        : sc_RENBTC,\n                                    \"XBTC\"          : sc_RENBTC,\n                                    \"KAR\"           : sc_KAR,\n                                    \"KUSD\"          : sc_KUSD,\n                                    \"KSM\"           : sc_KSM,\n                                    \"LKSM\"          : sc_LKSM,\n                                }\n                \n                LP_TokenBindings = {\n                                    \"LP_ACA_AUSD\"   : sc_LP_ACA_AUSD,\n                                    \"LP_DOT_AUSD\"   : sc_LP_DOT_AUSD,\n                                    \"LP_LDOT_AUSD\"  : sc_LP_LDOT_AUSD,\n                                    \"LP_RENBTC_AUSD\": sc_LP_RENBTC_AUSD,\n                                    \"LP_KAR_KUSD\"   : sc_LP_KAR_KUSD,\n                                    \"LP_KSM_KUSD\"   : sc_LP_KSM_KUSD,\n                                    \"LP_LKSM_KUSD\"  : sc_LP_LKSM_KUSD,\n                                   }\n\n                console.log(`TokenBindings: `,TokenBindings,`LP_TokenBindings: `,LP_TokenBindings);\n\n                //ORACLE\n                const Oracle_ABI =  Oracle_raw.abi;                       \n                const Oracle_Contract =  new ethers.Contract( bytecodes[19][1], Oracle_ABI, setupSpecs.provider);\n                sc_Oracle = { scAddress: Oracle_Contract.address, scReadOnly: Oracle_Contract, scAbstraction: undefined };\n                get_EVM_OraclePrices(Oracle_Contract);\n\n                //SCHEDULER \n                const Schedule_ABI =  Schedule_raw.abi;                       \n                const Schedule_Contract =  new ethers.Contract( bytecodes[20][1], Schedule_ABI, setupSpecs.provider);\n                sc_Schedule = { scAddress: Schedule_Contract.address, scReadOnly: Schedule_Contract, scAbstraction: undefined };\n\n                //DEX      \n                const DEX_ABI =  DEX_raw.abi;       \n                // const DEX_Contract =  new ethers.Contract( bytecodes[21][1], DEX_ABI, setupSpecs.provider);\n                const DEX_Contract =  new ethers.Contract( \"0x0000000000000000000000000000000000000804\", DEX_ABI, setupSpecs.provider);\n                // let liquidity = await DEX_Contract.getLiquidityPool(\"0x0000000000000000000000000000000001000002\", \"0x0000000000000000000000000000000001000001\");\n                // console.log(`liquidity for DOT and AUSD: `,liquidity)\n                sc_DEX = { scAddress: DEX_Contract.address, scReadOnly: DEX_Contract, scAbstraction: undefined };\n                \n                \n                //StateRent 18\n                 \n                \n                //The Contract object below is connectedd to a Wallet/Signer so that we can pay to send state-changing transactions\n                // const Token54u_Contract_ContractWithSigner = Token54u_Contract.connect(setupSpecs.wallet);\n                // // console.log(`Token54u_Contract_ContractWithSigner : `,Token54u_Contract_ContractWithSigner);   \n\n                // setSC({ scAddress: Token54u_Contract.address, scABI: Token54u_ABI, scReadOnly: Token54u_Contract, scAbstraction: Token54u_Contract_ContractWithSigner });\n                // // setSCStateVariables({ name: await Token54u_Contract.name(), symbol: await Token54u_Contract.symbol(), administrator: await Token54u_Contract.admin(), decimals: await Token54u_Contract.decimals(), totalSupply: (await Token54u_Contract.totalSupply()).toString() });\n                // setSCStateVariables({ name: await Token54u_Contract.name(), symbol: await Token54u_Contract.symbol(), administrator: \"_|_\", decimals: await Token54u_Contract.decimals(), totalSupply: (await Token54u_Contract.totalSupply()).toString() });\n\n                //TOBE REMOVED ONLY PLACED HERE TEMPORARILY TILL ACCOUNTS ARE LOADED\n                customerAccount = '0x5444d6aeb3760a87b2521f619d7ca9689b07e3bd';\n                customerSubstrateAccount = '5F1hqrYBhnhhkvYd1q9QzfXy8BYJJXtL3EKfYBkcBtpHRnHx';\n\n                return true;\n            } else { \n                console.log(`NOT Connected to AcalaMandalaTC6'`); \n                return false; \n            }\n        };\n    //#endregion\n\n\n    //#region  THIS IS NECESSARY BUT WILL NEED TO BE ALTERED GIVE ME SUBSTRATE ACCOUNT AND CREATE EVM ACCOUNT CREATE  WALLETs for the 4 addresses\n    //updates everytime we have a new customer address\n    // useEffect(() => {\n    //     if (typeof(customerAccount) !== 'undefined')\n    //     {\n    //         console.log(`Customer Address : ${customerAccount}`);\n    //         // getPortfolioHoldings(customerAccount);\n    //         // getPortfolioHoldings(process.env.REACT_APP_evmAddress_Gillian);\n    //         getPortfolioHoldings(process.env.REACT_APP_evmAddress_Emma);\n    //         getPortfolioHoldings(process.env.REACT_APP_evmAddress_Helen);\n            \n\n    //         //POSSIBLE CUSTOMERS  GILLIAN, EMMA, OLIVIA\n    //         let customWallet, customerName;\n    //         if (customerAccount === process.env.REACT_APP_evmAddress_Gillian) \n    //         {\n    //             customWallet = createWallet(setupSpecs.provider, process.env.REACT_APP_seed_Gillian);\n    //             customerName= 'Gillian';\n    //             setCustomerSubstrateAccount(process.env.REACT_APP_substrateAddress_Gillian);\n    //         }\n    //         else if (customerAccount === process.env.REACT_APP_evmAddress_Emma ) \n    //         {\n    //             customWallet = createWallet(setupSpecs.provider, process.env.REACT_APP_seed_Emma);\n    //             customerName= 'Emma';\n    //             setCustomerSubstrateAccount(process.env.REACT_APP_substrateAddress_Emma);\n    //         }\n    //         else if (customerAccount === process.env.REACT_APP_evmAddress_Olivia) \n    //         {\n    //             customWallet = createWallet(setupSpecs.provider, process.env.REACT_APP_rawSeed_Olivia);\n    //             customerName= 'Olivia';\n    //             setCustomerSubstrateAccount(process.env.REACT_APP_substrateAddress_Olivia);\n    //         }\n    //         else if (customerAccount === process.env.REACT_APP_evmAddress_Helen) \n    //         {\n    //             customWallet = createWallet(setupSpecs.provider, process.env.REACT_APP_seed_Helen);\n    //             customerName= 'Helen';\n    //             setCustomerSubstrateAccount(process.env.REACT_APP_substrateAddress_Helen);\n    //         }\n    //         console.log(`customerName: ${customerName} customerAccount: ${customerAccount} customWallet: `,customWallet);\n\n    //         //Update Singer and ContractAbstraction set for Customer To console log this will update after React refreshes  \n    //         setCustomerWallet(customWallet);\n    //         // const smartContractAbstraction_WithCustomerSigner = (sc.scReadOnly).connect(customWallet);\n    //         // setCustomerSCAbstraction(smartContractAbstraction_WithCustomerSigner);   //sets customerSCabstraction\n    //     }\n    // },[customerAccount]);\n    //#endregion \n\n\n    //#region get_EVM_OraclePrices\n    const get_EVM_OraclePrices = async () => {\n        console.log(`get_EVM_OraclePrices is run`);\n        const Oracle_Contract = sc_Oracle.scReadOnly;\n\n        if (Oracle_Contract)\n        {\n            const ACA_price =  (await Oracle_Contract.getPrice(bytecodes[0][1])).toString();\n            console.log(`ACAprice : `,ACA_price);\n            const AUSD_price =  (await Oracle_Contract.getPrice(bytecodes[1][1])).toString();\n            console.log(`AUSD_price : `,AUSD_price);\n            const DOT_price =  (await Oracle_Contract.getPrice(bytecodes[2][1])).toString();\n            console.log(`DOT_price : `,DOT_price);\n            const LDOT_price =  (await Oracle_Contract.getPrice(bytecodes[3][1])).toString();\n            console.log(`LDOT_price : `,LDOT_price);\n            const RENBTC_price =  (await Oracle_Contract.getPrice(bytecodes[4][1])).toString();\n            console.log(`RENBTC_price : `,RENBTC_price);\n            const KAR_price =  (await Oracle_Contract.getPrice(bytecodes[6][1])).toString();\n            console.log(`KAR_price : `,KAR_price);\n            const KUSD_price =  (await Oracle_Contract.getPrice(bytecodes[7][1])).toString();\n            console.log(`KUSD_price : `,KUSD_price);\n            const KSM_price =  (await Oracle_Contract.getPrice(bytecodes[8][1])).toString();\n            console.log(`KSM_price : `,KSM_price);\n            const LKSM_price =  (await Oracle_Contract.getPrice(bytecodes[8][1])).toString();\n            console.log(`LKSM_price : `,LKSM_price);\n    \n            oracle_EVM_Prices = { ACA: ACA_price, AUSD: AUSD_price, DOT: DOT_price, LDOT: LDOT_price, RENBTC: RENBTC_price, KAR: KAR_price, KUSD: KUSD_price, KSM: KSM_price, LKSM: LKSM_price };\n            oracle_EVM_PricesHuman = { ACA: (+ACA_price / 10**sc_ACA.decimals)  , AUSD: (+AUSD_price / 10**sc_AUSD.decimals), DOT: (+DOT_price / 10**18).toFixed(2), LDOT: (+LDOT_price/ 10**sc_LDOT.decimals), RENBTC: (+RENBTC_price / 10**18).toFixed(2), KAR: (+KAR_price / 10**sc_KAR.decimals), KUSD: (+KUSD_price / 10**sc_KUSD.decimals), KSM: (+KSM_price / 10**sc_KSM.decimals), LKSM: (+LKSM_price / 10**sc_LKSM.decimals) };\n            console.log(`get_EVM_OraclePrices  sc_DOT.decimals: ${sc_DOT.decimals}    oracle_EVM_PricesHuman: `,oracle_EVM_PricesHuman);\n\n            return oracle_EVM_PricesHuman;\n        } else return null\n\n    };\n    //#endregion\n\n\n    //#region btnGetTotalSupply  mint  burn\n    // const btnGetTotalSupply = async () => {\n\n    //     console.log(`customerWallet: `,customerWallet);\n    //     console.log(`New customerSCabstraction is : `,customerSCabstraction);\n\n    //     if (typeof(sc.scReadOnly) !== 'undefined')\n    //     {\n    //         const totalSupply =  (await sc.scReadOnly.totalSupply()).toString();\n    //         const new_scStateVariables = {...scStateVariables, totalSupply, };\n    //         console.log(`totalSupply is ${totalSupply}  new_scStateVariables: `,new_scStateVariables);\n    //         setSCStateVariables( new_scStateVariables );\n    //     }\n    // };\n\n    \n    // const mint = async (e) => {\n    //     e.preventDefault();\n\n    //     const mintToAddress = e.target.elements[0].value;\n    //     const mint_amount = e.target.elements[1].value;\n\n    //     console.log(`scStateVariables.administrator : ${scStateVariables.administrator} customerAccount: ${customerAccount}`)\n\n    //     if (typeof(sc.scAbstraction) !== 'undefined' && customerAccount === scStateVariables.administrator)\n    //     {\n    //         const gasPrice = await getCurrentGasPrice();\n    //         const tx = await sc.scAbstraction.mint(mintToAddress, mint_amount,{ gasPrice, gasLimit: 100000, });\n    //         console.log(`We have now minted ${mint_amount} to Account Address ${mintToAddress} tx: `,tx);\n    //         btnGetTotalSupply();\n    //     }\n    // };\n\n    // const burn = async (e) => {\n    //     e.preventDefault();\n\n    //     const burnToAddress = e.target.elements[0].value;\n    //     const burn_amount = e.target.elements[1].value;\n\n    //     if (typeof(sc.scAbstraction) !== 'undefined' && customerAccount === scStateVariables.administrator)\n    //     {\n    //         const gasPrice = await getCurrentGasPrice();\n    //         // const tx = await sc.scAbstraction.burn(burnToAddress, burn_amount,{ gasPrice, gasLimit: 100000, });\n    //         // console.log(`We have now burned ${burn_amount} to Account Address ${burnToAddress} tx: `,tx);\n    //         btnGetTotalSupply();\n    //     }\n    // };\n    //#endregion\n\n\n\n    //#region get_EVM_Balance\n    const get_EVM_Balance = async (customerAddress, tokenTicker) => {\n        \n        if (customerAddress)\n        {\n            const scReadOnly = TokenBindings[`${tokenTicker}`].scReadOnly;\n            const decimals = TokenBindings[`${tokenTicker}`].decimals;\n            const balance_WEI =  await scReadOnly.balanceOf(customerAddress);  \n            const balance = ( balance_WEI / Math.pow(10,decimals) ).toFixed(4);\n            console.log(`BALANCE FOR ${customerAddress} and tokenTicker: ${tokenTicker}  IS: `,balance);\n            customerBalance = balance;\n            baseToken = tokenTicker;\n            return {balance, tokenTicker};\n        }\n        else \n        {\n            console.log(`customerAddress is not provided in get_EVM_Balance`);\n            return null;\n        }\n    };\n    //#endregion\n\n\n    //#region get_EVM_PortfolioHoldings\n    const get_EVM_PortfolioHoldings = async (customerAddress) => {\n\n        console.log(`get_EVM_PortfolioHoldings portfolio_Gillian : `,portfolio_Gillian);\n\n        const tokenTickers = Object.keys(TokenBindings);\n        console.log(`get_EVM_PortfolioHoldings tokenTickers : `,tokenTickers);\n\n        let portfolio = {};\n        for (let i=0; i<tokenTickers.length; i++)\n        {\n            let tokenTicker = tokenTickers[i];\n            const scReadOnly = TokenBindings[`${tokenTicker}`].scReadOnly;\n            const decimals = TokenBindings[`${tokenTicker}`].decimals;\n            const balance_WEI =  await scReadOnly.balanceOf(customerAddress);  \n            const balance = ( balance_WEI / Math.pow(10,decimals) ).toFixed(4);\n            console.log(`BALANCE FOR ${customerAddress} and tokenTicker: ${tokenTicker}  IS: `,balance);\n            portfolio[`${tokenTicker}`] = balance;\n        }\n\n        if (customerAddress === process.env.REACT_APP_evmAddress_Gillian) portfolio_Gillian = portfolio\n        else if (customerAddress === process.env.REACT_APP_evmAddress_Emma) portfolio_Emma = portfolio\n        else if (customerAddress === process.env.REACT_APP_evmAddress_Helen) portfolio_Helen = portfolio\n\n        console.log(`get_EVM_PortfolioHoldings portfolio_Gillian : `,portfolio_Gillian);\n        console.log(`get_EVM_PortfolioHoldings portfolio_Emma : `,portfolio_Emma);\n        console.log(`get_EVM_PortfolioHoldings portfolio_Helen : `,portfolio_Helen);\n    }\n    //#endregion\n\n\n    //#region handleGetBalance_EVM\n    const handleGetBalance_EVM = async (e) => {\n        e.preventDefault();\n        const accountAddress = e.target.elements[0].value;\n        const tokenTicker    = e.target.elements[1].value;\n\n        // setCustomerAccount(accountAddress);\n        get_EVM_Balance(accountAddress, tokenTicker);   //placed so if we request twice the balance for the same account we get an update without running again  //updates everytime we have a new customer address useEffect(() => {\n\n        // getPortfolioHoldings(accountAddress);\n        get_EVM_PortfolioHoldings(process.env.REACT_APP_evmAddress_Gillian);\n        get_EVM_PortfolioHoldings(process.env.REACT_APP_evmAddress_Emma);\n        get_EVM_PortfolioHoldings(process.env.REACT_APP_evmAddress_Helen);\n    };\n    //#endregion\n\n\n    //#region approveSpender\n    const approveSpender = async (e) => {\n        e.preventDefault();\n\n        const spenderAddress = e.target.elements[0].value;\n        let amountForSpender = e.target.elements[1].value;\n        const tokenToApprove = e.target.elements[2].value;\n\n        let smartContractAbstraction_WithCustomerSigner;\n\n        if (Object.keys(TokenBindings).includes(tokenToApprove) && typeof customerWallet !== \"undefined\") \n        {\n            amountForSpender = amountForSpender * Math.pow(10,TokenBindings[tokenToApprove].decimals);\n            console.log(`tokenToApprove :${tokenToApprove} has been found on TokenBindings => proceed`);\n            const scReadOnly = TokenBindings[tokenToApprove].scReadOnly;\n            smartContractAbstraction_WithCustomerSigner = scReadOnly.connect(customerWallet);\n        }\n        else \n        {\n            console.log(`tokenToApprove :${tokenToApprove} has NOT been found on TokenBindings => return`);\n            return;\n        }\n\n        console.log(`approveSpender=> customerAccount: ${customerAccount} spenderAddress: ${spenderAddress} amountForSpender: ${amountForSpender} tokenToApprove: ${tokenToApprove}`);\n\n        if (typeof(smartContractAbstraction_WithCustomerSigner) !== 'undefined') {\n\n            const gasPrice = \"100000000\"; //await getCurrentGasPrice();\n            console.log(`Getting ready to submit an Approval`);\n\n            try {\n                const tx = await smartContractAbstraction_WithCustomerSigner.approve(spenderAddress, amountForSpender,{ gasPrice, gasLimit: 100000, });\n                console.log(`We have now submitted a new approval of ${amountForSpender} for spenderAddress ${spenderAddress}  transaction tx: `,tx);\n                const receiptOfMinedTransactions = await tx.wait();\n                console.log(`APPROVAL => blockHash: ${receiptOfMinedTransactions.blockHash} blockNumber:${receiptOfMinedTransactions.blockNumber} confirmations:${receiptOfMinedTransactions.confirmations} status: ${receiptOfMinedTransactions.status} receiptOfMinedTransactions: `,receiptOfMinedTransactions);\n            } catch(err) {\n                console.log(`There has been an error in tx Approval error: `,err);\n            }\n        };\n\n    };\n    //#endregion\n\n\n    //#region getAllowanceForSpender\n    const getAllowanceForSpender = async (e) => {\n        e.preventDefault();\n        const spenderAddress = e.target.elements[0].value;\n        const accountAddress = e.target.elements[1].value;\n        const tokenToApprove = e.target.elements[2].value;\n\n        let scReadOnly;\n\n        if (Object.keys(TokenBindings).includes(tokenToApprove) && typeof customerWallet !== \"undefined\") \n        {\n            console.log(`AllowancetokenToApprove :${tokenToApprove} has been found on TokenBindings => proceed`);\n            scReadOnly = TokenBindings[tokenToApprove].scReadOnly;\n        }\n        else \n        {\n            console.log(`AllowancetokenToApprove :${tokenToApprove} has NOT been found on TokenBindings => return`);\n            return;\n        }\n\n        \n        if (typeof(scReadOnly) !== 'undefined')\n        {\n            let allowance =  await scReadOnly.allowance(accountAddress, spenderAddress);\n            allowance = (allowance / Math.pow(10,TokenBindings[tokenToApprove].decimals) ).toString();\n            console.log(`Account ${accountAddress} has provided an allowance of ${allowance} for spender ${spenderAddress}`);\n            // setSpender({spenderAddress: spenderAddress, spenderAllowance: allowance  });\n        }\n    };\n    //#endregion\n\n\n    //#region handleTransfer\n    const handleTransfer = async (e) => {\n        e.preventDefault();\n\n        const amount = e.target.elements[0].value;\n        const to = e.target.elements[1].value;\n        console.log(`handleTransfer to: ${to} amount: ${amount}  customerWallet: `,customerWallet,` customerSCabstraction: `,customerSCabstraction);\n        // console.log(`setupSpecs.wallet: `,setupSpecs.wallet,`   sc.scAbstraction: `,sc.scAbstraction);\n\n        if (typeof(customerSCabstraction) !== 'undefined') {\n\n            const gasPrice = \"100000\"; //await getCurrentGasPrice();\n            console.log(`Getting ready to submit a handleTransfer`);\n            // const tx = await sc.scAbstraction.transfer(to, amount,{ gasPrice, gasLimit: 100000, });\n            // console.log(`We have now submitted a new transfer to Account address ${to} for ${amount} tokens tx: `,tx);\n            const tx = await customerSCabstraction.transfer(to, amount,{ gasPrice, gasLimit: 100000, });\n            console.log(`We have now submitted a new transfer to Account address ${to} for ${amount} tokens tx: `,tx);\n        };\n\n    };\n    //#endregion\n\n\n    //#region transferFrom\n    const transferFrom = async (e) => {\n        e.preventDefault();\n\n        const from = e.target.elements[0].value;\n        const to = e.target.elements[1].value;\n        const tokenTicker = e.target.elements[2].value;\n        let amount = e.target.elements[3].value;\n\n        console.log(`transferFrom   from: ${from}  to: ${to} amount: ${amount} tokenTicker:${tokenTicker} customerWallet: `,customerWallet);\n\n        let smartContractAbstraction_WithCustomerSigner;\n\n        if (Object.keys(TokenBindings).includes(tokenTicker) && typeof customerWallet !== \"undefined\") \n        {\n            amount = amount * Math.pow(10,TokenBindings[tokenTicker].decimals);\n            console.log(`tokenTicker :${tokenTicker} has been found on TokenBindings => proceed`);\n            const scReadOnly = TokenBindings[tokenTicker].scReadOnly;\n            smartContractAbstraction_WithCustomerSigner = scReadOnly.connect(customerWallet);\n        }\n        else \n        {\n            console.log(`tokenTicker :${tokenTicker} has NOT been found on TokenBindings => return`);\n            return;\n        }\n\n        if (typeof(smartContractAbstraction_WithCustomerSigner) !== 'undefined') {\n\n            const gasPrice = \"100000\"; //await getCurrentGasPrice();\n            console.log(`Getting ready to submit a transferFrom`);\n\n            try {\n                const tx = await smartContractAbstraction_WithCustomerSigner.transferFrom(from, to, amount,{ gasPrice, gasLimit: 100000, });\n                console.log(`We have now submitted a new transferFROM from Sender ${from} to Account address ${to} for ${amount} ${tokenTicker} EXTRINSIC HASH = tx.hash: ${tx.hash} tx.nonce: ${tx.nonce} tokens tx: `,tx);\n                const receiptOfMinedTransactions = await tx.wait(); \n                console.log(`TRANSFER FROM => blockHash: ${receiptOfMinedTransactions.blockHash} blockNumber:${receiptOfMinedTransactions.blockNumber} confirmations:${receiptOfMinedTransactions.confirmations} status: ${receiptOfMinedTransactions.status} receiptOfMinedTransactions: `,receiptOfMinedTransactions);\n            } catch(err) {\n                console.log(`There has been an error in tx TransferFrom error: `,err);\n                //examples:  trying to transfer more than possible, tx created to be mined but failed due to gas been low\n            }\n\n        };\n\n    };\n    //#endregion\n\n\n\n    //#region getOraclePrices\n    const dex_getLiquidity = async (e) => {\n        console.log(`dex_getLiquidity is run`);\n\n        e.preventDefault();\n        const tokenA = e.target.elements[0].value;\n        const tokenB = e.target.elements[1].value;\n\n        if (typeof sc_DEX.scReadOnly !==\"undefined\")\n        {\n            const tokenA_address = TokenBindings[tokenA].scAddress;\n            const tokenB_address = TokenBindings[tokenB].scAddress;\n            console.log(`tokenA_address: ${tokenA_address} tokenB_address: ${tokenB_address}  sc_DEX.scReadOnly: `,sc_DEX.scReadOnly);\n            // let liquidity = await (sc_DEX.scReadOnly).getLiquidityPool(tokenA_address, tokenB_address);\n            let liquidity = await (sc_DEX.scReadOnly).getLiquidityPool(\"0x0000000000000000000000000000000001000002\", \"0x0000000000000000000000000000000001000001\");\n\n\n            // let liquidity = await (sc_DEX.scReadOnly).getLiquidityTokenAddress(0x0000000000000000000000000000000001000002, 0x0000000000000000000000000000000001000001);\n\n\n            console.log(`dex_getLiquidity=> for ${tokenA} and ${tokenB} liquidity: `,liquidity);\n            // setDexLiquidity({tokenA: undefined, tokenB: undefined});\n        } else console.log(`sc_DEX.scReadOnly is undefined`);\n\n    };\n    //#endregion\n\n   \n    \n\n    \n    // return (\n        // <div className=\"container\">\n            \n            {/* Table */}\n            {/* <div>\n                <label style={{backgroundColor: \"#17A2DA\", color:\"black\", fontSize:\"20px\"}}>PREDEPLOYED SC</label>\n                <table style={{backgroundColor: \"#0D8EC2\", color:\"black\", width:\"100%\"}}>\n                        <thead>\n                            <tr><th>Smart Contract Address</th><th>Name</th><th>Symbol</th><th>Decimals</th><th>Total Supply</th><th>Price</th><th>Gillian</th><th>Emma</th><th>Helen</th><th>Timestamp</th></tr>\n                        </thead>\n                        <tbody>\n                            <tr><td>{sc_ACA.scAddress? sc_ACA.scAddress : null}</td><td>{sc_ACA.name? sc_ACA.name : null}</td><td>{sc_ACA.symbol? sc_ACA.symbol : null}</td><td>{sc_ACA.decimals? sc_ACA.decimals : null}</td><td>{sc_ACA.totalSupply? sc_ACA.totalSupply : null}</td><td>{oraclePrices.ACA? oraclePrices.ACA : null}</td><td>{portfolio_Gillian.ACA}</td><td>{portfolio_Emma.ACA}</td><td>{portfolio_Helen.ACA}</td></tr>\n                            <tr><td>{sc_AUSD.scAddress? sc_AUSD.scAddress : null}</td><td>{sc_AUSD.name? sc_AUSD.name : null}</td><td>{sc_AUSD.symbol? sc_AUSD.symbol : null}</td><td>{sc_AUSD.decimals? sc_AUSD.decimals : null}</td><td>{sc_AUSD.totalSupply? sc_AUSD.totalSupply : null}</td><td>{oraclePrices.AUSD? oraclePrices.AUSD : null}</td><td>{portfolio_Gillian.AUSD}</td><td>{portfolio_Emma.AUSD}</td><td>{portfolio_Helen.AUSD}</td></tr>\n                            <tr><td>{sc_DOT.scAddress? sc_DOT.scAddress : null}</td><td>{sc_DOT.name? sc_DOT.name : null}</td><td>{sc_DOT.symbol? sc_DOT.symbol : null}</td><td>{sc_DOT.decimals? sc_DOT.decimals : null}</td><td>{sc_DOT.totalSupply? sc_DOT.totalSupply : null}</td><td>{typeof oraclePrices.DOT !==\"undefined\"? (Number(oraclePrices.DOT)/ Math.pow(10,18)).toFixed(2) : null}</td><td>{portfolio_Gillian.DOT}</td><td>{portfolio_Emma.DOT}</td><td>{portfolio_Helen.DOT}</td></tr>\n                            <tr><td>{sc_LDOT.scAddress? sc_LDOT.scAddress : null}</td><td>{sc_LDOT.name? sc_LDOT.name : null}</td><td>{sc_LDOT.symbol? sc_LDOT.symbol : null}</td><td>{sc_LDOT.decimals? sc_LDOT.decimals : null}</td><td>{sc_LDOT.totalSupply? sc_LDOT.totalSupply : null}</td><td>{oraclePrices.LDOT? oraclePrices.LDOT : null}</td><td>{portfolio_Gillian.LDOT}</td><td>{portfolio_Emma.LDOT}</td><td>{portfolio_Helen.LDOT}</td></tr>\n                            <tr><td>{sc_RENBTC.scAddress? sc_RENBTC.scAddress : null}</td><td>{sc_RENBTC.name? sc_RENBTC.name : null}</td><td>{sc_RENBTC.symbol? sc_RENBTC.symbol : null}</td><td>{sc_RENBTC.decimals? sc_RENBTC.decimals : null}</td><td>{sc_RENBTC.totalSupply? sc_RENBTC.totalSupply : null}</td><td>{typeof oraclePrices.RENBTC !==\"undefined\"? (Number(oraclePrices.RENBTC)/ Math.pow(10,18)).toFixed(2) : null}</td><td>{portfolio_Gillian.XBTC}</td><td>{portfolio_Emma.XBTC}</td><td>{portfolio_Helen.XBTC}</td></tr>\n                            <tr><td>{sc_KAR.scAddress? sc_KAR.scAddress : null}</td><td>{sc_KAR.name? sc_KAR.name : null}</td><td>{sc_KAR.symbol? sc_KAR.symbol : null}</td><td>{sc_KAR.decimals? sc_KAR.decimals : null}</td><td>{sc_KAR.totalSupply? sc_KAR.totalSupply : null}</td><td>{oraclePrices.KAR? oraclePrices.KAR : null}</td><td>{portfolio_Gillian.KAR}</td><td>{portfolio_Emma.KAR}</td><td>{portfolio_Helen.KAR}</td></tr>\n                            <tr><td>{sc_KUSD.scAddress? sc_KUSD.scAddress : null}</td><td>{sc_KUSD.name? sc_KUSD.name : null}</td><td>{sc_KUSD.symbol? sc_KUSD.symbol : null}</td><td>{sc_KUSD.decimals? sc_KUSD.decimals : null}</td><td>{sc_KUSD.totalSupply? sc_KUSD.totalSupply : null}</td><td>{oraclePrices.KUSD? oraclePrices.KUSD : null}</td><td>{portfolio_Gillian.KUSD}</td><td>{portfolio_Emma.KUSD}</td><td>{portfolio_Helen.KUSD}</td></tr>\n                            <tr><td>{sc_KSM.scAddress? sc_KSM.scAddress : null}</td><td>{sc_KSM.name? sc_KSM.name : null}</td><td>{sc_KSM.symbol? sc_KSM.symbol : null}</td><td>{sc_KSM.decimals? sc_KSM.decimals : null}</td><td>{sc_KSM.totalSupply? sc_KSM.totalSupply : null}</td><td>{oraclePrices.KSM? oraclePrices.KSM : null}</td><td>{portfolio_Gillian.KSM}</td><td>{portfolio_Emma.KSM}</td><td>{portfolio_Helen.KSM}</td></tr>\n                            <tr><td>{sc_LKSM.scAddress? sc_LKSM.scAddress : null}</td><td>{sc_LKSM.name? sc_LKSM.name : null}</td><td>{sc_LKSM.symbol? sc_LKSM.symbol : null}</td><td>{sc_LKSM.decimals? sc_LKSM.decimals : null}</td><td>{sc_LKSM.totalSupply? sc_LKSM.totalSupply : null}</td><td>{oraclePrices.LKSM? oraclePrices.LKSM : null}</td><td>{portfolio_Gillian.LKSM}</td><td>{portfolio_Emma.LKSM}</td><td>{portfolio_Helen.LKSM}</td></tr>\n                            <tr><td>{sc_LP_ACA_AUSD.scAddress? sc_LP_ACA_AUSD.scAddress : null}</td><td>LP_ACA_AUSD</td></tr>\n                            <tr><td>{sc_LP_DOT_AUSD.scAddress? sc_LP_DOT_AUSD.scAddress : null}</td><td>LP_DOT_AUSD</td></tr>\n                            <tr><td>{sc_LP_LDOT_AUSD.scAddress? sc_LP_LDOT_AUSD.scAddress : null}</td><td>LP_LDOT_AUSD</td></tr>\n                            <tr><td>{sc_LP_RENBTC_AUSD.scAddress? sc_LP_RENBTC_AUSD.scAddress : null}</td><td>LP_RENBTC_AUSD</td></tr>    \n                            <tr><td>{sc_LP_KAR_KUSD.scAddress? sc_LP_KAR_KUSD.scAddress : null}</td><td>LP_KAR_KUSD</td></tr> \n                            <tr><td>{sc_LP_KSM_KUSD.scAddress? sc_LP_KSM_KUSD.scAddress : null}</td><td>LP_KSM_KUSD</td></tr>  \n                            <tr><td>{sc_LP_LKSM_KUSD.scAddress? sc_LP_LKSM_KUSD.scAddress : null}</td><td>LP_LKSM_KUSD</td></tr>   \n                        </tbody>\n                </table>\n                <br/>\n            </div> */}\n\n        {/* Wallet */}\n        {/* <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <h2 className=\"text-center\">Wallet</h2>\n                <div className=\"row\">\n                    <div className=\"col-sm-4\">  \n                        <label style={{backgroundColor: \"#34495E\", color:\"white\", fontSize:\"18px\", width:\"450px\"}}> SIGNER customerAccount </label> \n                        <label style={{backgroundColor: \"#34495E\", color:\"white\", fontSize:\"18px\", width:\"450px\"}}> \n                             <Identicon value={customerSubstrateAccount} size={48} theme={'polkadot'}/>\n                             {customerAccount}\n                        </label> \n                    </div>\n                    <div className=\"col-sm-4\"><label style={{backgroundColor: \"#34495E\", color:\"white\", fontSize:\"18px\"}}>customerBalance: {customerBalance} {baseToken}</label></div>\n                    <div className=\"col-sm-4\">\n                        <table style={{backgroundColor: \"#34495E\", color:\"white\", width:\"100%\"}}>\n                            <thead>\n                                <tr><th>Customer Name</th><th>Customer EVM Address</th></tr>\n                            </thead>\n                            <tbody>\n                                <tr><td>Gillian</td> <td>{process.env.REACT_APP_evmAddress_Gillian? process.env.REACT_APP_evmAddress_Gillian : null}</td></tr>\n                                <tr><td>Emma</td> <td>{process.env.REACT_APP_evmAddress_Emma? process.env.REACT_APP_evmAddress_Emma : null}</td></tr>\n                                <tr><td>Helen</td> <td>{process.env.REACT_APP_evmAddress_Helen? process.env.REACT_APP_evmAddress_Helen : null}</td></tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <form onSubmit={e => handleGetBalance(e)}>\n                    <div className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-3\">  \n                                <label htmlFor=\"accountAddress\">Input Account Address</label>\n                                <input type=\"text\" className=\"form-control text-center\" id=\"accountAddress\" />\n                            </div>\n                            <div className=\"col-sm-1\">  \n                                <label htmlFor=\"tokenA\">Token A</label>\n                                <input type=\"text\" className=\"form-control text-center\" id=\"tokenA\" />\n                            </div>\n                            <div className=\"col-sm-3\">\n                                <div className=\"form-group\">\n                                    <br/>\n                                    <button type=\"submit\" className=\"btn btn-primary\">Get Account Balance</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div> */}\n\n\n        {/* handleTransfer */}\n        // <div>\n        // <div className=\"row\">\n        //     <div className=\"col-sm-12\">\n        //         <h2>Transfer</h2>\n        //         <form onSubmit={e => handleTransfer(e)}>\n        //             <div className=\"form-group\">\n        //                 <label htmlFor=\"amount\">Amount</label>\n        //                 <input type=\"number\" className=\"form-control text-center\" id=\"amount\" />\n        //             </div>\n        //             <div className=\"form-group\">\n        //                  <label htmlFor=\"to\">To</label>\n        //                  <input type=\"text\" className=\"form-control text-center\" id=\"to\" />\n        //              </div>\n        //              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        //          </form>\n        //     </div>\n        // </div>\n        // </div>\n\n\n        // <br/>\n\n\n        {/* approveSpender */}\n        {/* <div className=\"row\">\n                <form onSubmit={e => approveSpender(e)}>\n                <h4>Approve Spender</h4>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"spenderAddress\">Spender Address</label>\n                            <input type=\"text\" className=\"form-control text-center\" id=\"spenderAddress\" />\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"amountForSpender\">Amount</label>\n                            <input type=\"number\" className=\"form-control text-center\" id=\"amountForSpender\" />\n                        </div>\n                    </div>\n                    <div className=\"col-sm-1\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"tokenToApprove\">Token</label>\n                            <input type=\"text\" className=\"form-control text-center\" id=\"tokenToApprove\" />\n                        </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Approve amount for Spender</button>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                </form>\n            <div className=\"col-sm-6\">\n\n            </div>\n        </div> */}\n\n\n        {/* getAllowanceForSpender */}\n        {/* <div className=\"row\">\n            <form onSubmit={e => getAllowanceForSpender(e)}>\n            <h4>Spender Allowance</h4>\n            <div className=\"row\">\n\n                <div className=\"col-sm-3\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"spenderAddress\">Spender Address</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"spenderAddress\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-3\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"accountAddress\">Account Address</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"accountAddress\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenAl\">Token</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenAl\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-2\"><br/><label>Allowance: {spender.spenderAllowance}</label></div>\n\n                <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Get Allowance for Spender</button>\n                        </div>\n                </div>\n\n            </div>\n            </form>\n        </div>\n        <br/> */}\n\n\n        {/* transferFrom */}\n        {/* <div className=\"row\">\n            <form onSubmit={e => transferFrom(e)}>\n            <h4>Transfer From</h4>\n            <div className=\"row\">\n\n                <div className=\"col-sm-3\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"senderAddress\">Sender Address</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"senderAddress\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-3\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"recipientAddress\">Recipient Address</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"recipientAddress\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenToTransfer\">Token</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenToTransfer\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-2\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"amount\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Transfer From Sender</button>\n                        </div>\n                </div>\n\n            </div>\n            </form>\n        </div>\n        <br/> */}\n\n\n\n        {/* scheduler */}\n        {/* <div className=\"row\">\n            <form onSubmit={e => dex_getLiquidity(e)}>\n            <h4>Scheduler</h4>\n            <div className=\"row\">\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenA\">Token A</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenA\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenB\">Token B</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenB\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-3\">\n                    <label>Token A Liquidity</label>\n                    <label>{dexLiquidity.tokenA}</label>\n                </div>\n                <div className=\"col-sm-3\">\n                    <label>Token B Liquidity</label>\n                    <label>{dexLiquidity.tokenB}</label>\n                </div>\n\n                <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Get DEX Liquidity</button>\n                        </div>\n                </div>\n\n            </div>\n            </form>\n        </div>\n        <br/> */}\n\n\n\n        {/* dex_getLiquidity */}\n        {/* <div className=\"row\">\n            <form onSubmit={e => dex_getLiquidity(e)}>\n            <h4>Get DEX Liquidity</h4>\n            <div className=\"row\">\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenA\">Token A</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenA\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tokenB\">Token B</label>\n                        <input type=\"text\" className=\"form-control text-center\" id=\"tokenB\" />\n                    </div>\n                </div>\n\n                <div className=\"col-sm-3\">\n                    <label>Token A Liquidity</label>\n                    <label>{dexLiquidity.tokenA}</label>\n                </div>\n                <div className=\"col-sm-3\">\n                    <label>Token B Liquidity</label>\n                    <label>{dexLiquidity.tokenB}</label>\n                </div>\n\n                <div className=\"col-sm-3\">\n                        <div className=\"form-group\">\n                            <br/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Get DEX Liquidity</button>\n                        </div>\n                </div>\n\n            </div>\n            </form>\n        </div> */}\n\n     \n\n      {/* <button type=\"button\" id=\"findAllowance\" onClick={(e) => btnReadAllowance(e)}>Find</button> */}\n\n//   </div>\n\n    // );\n \n\n// };\n\n\n\n// export default Predeployed;\n\nexport {\n    EVM_Setup,\n    get_EVM_OraclePrices,\n    oracle_EVM_Prices,\n    oracle_EVM_PricesHuman,\n    oracle_EVM_Icons,\n    oracle_EVM_Description,\n    TokenBindings,\n    LP_TokenBindings,\n    get_EVM_Balance,\n    get_EVM_PortfolioHoldings,\n    handleGetBalance_EVM,\n};\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/MARKET.js",["1545","1546","1547"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport {  Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description, TokenBindings, LP_TokenBindings} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet rates = [], icons = [], descriptions = [], totalSupply = [];\r\n\r\n\r\n//TODO sparkPriceArray\r\nconst sampleData1 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData2 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData3 = [2,2,4,3,2,4,3,3,4,2,1,3,2,4,2,3,5,4,3,2];\r\nconst sampleData4 = [6,2,3,2,3,5,3,3,7,2,4,7,5,1,3,6,5,9];\r\nconst sampleData5 = [6,2,3,2,3,5,4,3,2,2,4,5,2,5,5,4,3,1,3,4,5,6];\r\nconst sampleData6 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\nconst sampleData7 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData8 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData9 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\n\r\nconst MarketCapital = ({ blockHeader, sparkPriceArray, oraclePrices, total_CoinSupply }) => {\r\n\tconst [data, setData] = useState(document.querySelectorAll(\"#marketCapital tbody tr\"));\r\n\tconst sort = 9;\r\n\tconst activePag = useRef(0);\r\n\tconst [test, settest] = useState(0);\r\n\r\n  // Active data\r\n\tconst chageData = (frist, sec) => {\r\n\t\tfor (var i = 0; i < data.length; ++i) {\r\n\t\t\tif (i >= frist && i < sec) {\r\n\t\t\t\tdata[i].classList.remove(\"d-none\");\r\n\t\t\t} else {\r\n\t\t\t\tdata[i].classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t    const keys= Object.keys(oracle_EVM_Description);\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\ticons.push(oracle_EVM_Icons[item]); \r\n\t\t\t\tdescriptions.push(oracle_EVM_Description[item]); \r\n\t\t\t});\r\n\t},[])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(`DASHBOARDDARL>MARKET 1  blockHeader.number: `,blockHeader.number)\r\n\r\n\t\tif (blockHeader && typeof oracle_EVM_PricesHuman[\"DOT\"] !== \"undefined\")\r\n\t\t{\r\n\t\t\tconsole.log(`DASHBOARDDARL>MARKET 2 *** > blockHeader.number: ${blockHeader.number} oracle_EVM_PricesHuman: `,oracle_EVM_PricesHuman);\r\n\t\t\tconst keys= Object.keys(oracle_EVM_PricesHuman);\r\n\t\t\trates =[];\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\trates.push(`${oracle_EVM_PricesHuman[item]}`);\r\n\t\t\t\ttotalSupply.push( TokenBindings[item].totalSupply );\r\n\t\t\t});\r\n\t\t\tconsole.log(`DASHBOARDDARL>MARKET 3  totalSupply: `,totalSupply);\r\n\r\n\t\t\t// oracle_EVM_Prices = { ACA: ACA_price, AUSD: AUSD_price, DOT: DOT_price, LDOT: LDOT_price, RENBTC: RENBTC_price, KAR: KAR_price, KUSD: KUSD_price, KSM: KSM_price, LKSM: LKSM_price };\r\n\t\t}\r\n\r\n\t}, [blockHeader])\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(document.querySelectorAll(\"#marketCapital tbody tr\"));\r\n\t}, [test]);\r\n\r\n  // Active pagginarion\r\n\tactivePag.current === 0 && chageData(0, sort);\r\n\t// paggination\r\n\tlet paggination = Array(Math.ceil(data.length / sort))\r\n\t\t.fill()\r\n\t\t.map((_, i) => i + 1);\r\n\r\n  // Active paggination & chage data\r\n\tconst onClick = (i) => {\r\n\t\tactivePag.current = i;\r\n\t\tchageData(activePag.current * sort, (activePag.current + 1) * sort);\r\n\t\tsettest(i);\r\n\t};\r\n\t\r\n\t\r\n  return (\r\n    <>\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t<div className=\"table-responsive table-hover fs-14 \">\r\n\t\t\t\t\t<div id=\"example6_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n\t\t\t\t\t\t<table className=\"table display mb-4 dataTablesCard font-w600  market-tbl border-no text-black dataTable no-footer border-0\" \r\n\t\t\t\t\t\t\tid=\"marketCapital\" role=\"grid\" aria-describedby=\"example6_info\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\">\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting_asc\" tabIndex={0}  rowSpan={1} colSpan={1}>Rank</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Coin</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Last Price</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Change (24h)</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Total Supply</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Graph</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"bg-none width50 sorting\" tabIndex={0} aria-controls=\"example6\" rowSpan={1} colSpan={1}/>\r\n\t\t\t\t\t\t\t   </tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#1</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[0]} />{descriptions[0]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"ACA\"]? oraclePrices[\"ACA\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>{total_CoinSupply? total_CoinSupply[0] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData1}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#2</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[1]} />{descriptions[1]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"AUSD\"]? oraclePrices[\"AUSD\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>{total_CoinSupply? total_CoinSupply[1] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>      \r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData2}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#3</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[2]} />{descriptions[2]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"DOT\"]? oraclePrices[\"DOT\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>{total_CoinSupply? total_CoinSupply[2] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData3} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#4</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[3]} />{descriptions[3]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"LDOT\"]? oraclePrices[\"LDOT\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>{total_CoinSupply? total_CoinSupply[3] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData4}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#5</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[4]} />{descriptions[4]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"RENBTC\"]? oraclePrices[\"RENBTC\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData5}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#6</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[5]} />{descriptions[5]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"KAR\"]? oraclePrices[\"KAR\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData6}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#7</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[10]} />{descriptions[10]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"XBTC\"]? oraclePrices[\"XBTC\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData7}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#8</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[7]} />{descriptions[7]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"KSM\"]? oraclePrices[\"KSM\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData8}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#9</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[9]} />{descriptions[9]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"XBTC\"]? oraclePrices[\"XBTC\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData9}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#10</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[8]} />{descriptions[8]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"LKSM\"]? oraclePrices[\"LKSM\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData1}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">#11</span></td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[6]} />{descriptions[6]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${oraclePrices[\"KUSD\"]? oraclePrices[\"KUSD\"] : 0}</td>\r\n\t\t\t\t\t\t\t\t\t<td>2,54%</td>\r\n\t\t\t\t\t\t\t\t\t<td>0</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<svg className=\"peity-line\" width=\"280\" height=\"50\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Sparklines data={sampleData2}  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SparklinesLine style={{ strokeWidth: 4, stroke: \"#2258bf\", fill: \"none\" }}  />\r\n\t\t\t\t\t\t\t\t\t\t\t</Sparklines>\t\t\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t<div className=\"dataTables_info\">\r\n\t\t\t\t\t\t\t\t  Showing {activePag.current * sort + 1} to{\" \"}\r\n\t\t\t\t\t\t\t\t  {data.length > (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t? (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t: data.length}{\" \"}\r\n\t\t\t\t\t\t\t\t  of {data.length} entries\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"dataTables_paginate paging_simple_numbers\" id=\"example5_paginate\">\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button previous disabled\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t  <span> \r\n\t\t\t\t\t\t\t\t\t{paggination.map((number, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<span key={i} to=\"/market-capital\" className={`paginate_button  ${ activePag.current === i ? \"current\" : \"\" } `}  \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"inline-block\" }}>{number}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t  </span>\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button next\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarketCapital;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Withdrawal.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Deposit.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/VAULTS/VaultDetailTab.js",["1548","1549","1550","1551"],"import React,{useState} from 'react';\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\nimport loadable from \"@loadable/component\";\r\nimport pMinDelay from \"p-min-delay\";\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\n//Import\r\nimport { DropDownBlog} from './OrderBlog';\r\n\r\nimport Quick_Deposit from './Quick_Deposit';\r\nimport Quick_Withdrawal from './Quick_Withdrawal';\r\n\r\n\r\n\r\nconst CoinLineChart1 = loadable(() =>\r\n\tpMinDelay(import(\"./CoinCharts/CoinLineChart1\"), 1000)\r\n);\r\nconst CoinLineChart2 = loadable(() =>\r\n\tpMinDelay(import(\"./CoinCharts/CoinLineChart2\"), 1000)\r\n);\r\nconst CoinLineChart3 = loadable(() =>\r\n\tpMinDelay(import(\"./CoinCharts/CoinLineChart3\"), 1000)\r\n);\r\nconst CoinLineChart4 = loadable(() =>\r\n\tpMinDelay(import(\"./CoinCharts/CoinLineChart4\"), 1000)\r\n);\r\n\r\n\r\nconst setVaultToken = (tokens) => {\r\n\tlet vault_tok_symbol = \"VL\"\r\n\ttokens.forEach((tok) => vault_tok_symbol += `_${tok}`);\r\n\tconsole.log(`***** VaultDetailTab ***** vault_tok_symbol: `,vault_tok_symbol);\r\n\treturn vault_tok_symbol;\r\n}\r\n\r\nconst VaultDetailTab = ({ icons, title, tokens, vaultMandate, vaultValues, chart  }) =>{\r\n\r\n\tconst [doller, setDoller] = useState(\"Total Value Locked\");\t\t\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-xl-3 col-xxl-4 mt-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 border-0\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0 text-black fs-20\">About</h4>\r\n\t\t\t\t\t\t\t\t\t\t<DropDownBlog />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-start mb-3 about-coin\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle===\"ACA/DOT MC\"? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"50\"  height=\"50\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[2]}  width=\"50\"  height=\"50\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: title===\"ACA DCA\"? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"50\"  height=\"50\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: title===\"XBTC/RENBTC/POLKABTC MC\"? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[9]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[4]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[10]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: title===\"custom_ACA/DOT/XBTC MC\"? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[0]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[2]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={icons[9]}  width=\"30\"  height=\"30\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"N/A\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ms-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"font-w600 text-black mb-0 title\">{title}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"font-w600 text-black sub-title\">{setVaultToken(tokens)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Price = {vaultValues.coinPrice} USD</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{vaultMandate}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-xl-9 col-xxl-8 mt-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header pb-0 d-block d-sm-flex flex-wrap border-0 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"me-auto mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">{title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"fs-12\">{vaultValues.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"input-group detault-daterange me-3  mb-3 coinDetails-datepiker\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\"><i className=\"las la-calendar\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<DateRangePicker>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</DateRangePicker>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"form-control style-1 default-select  mb-3 rounded\">{doller} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDoller(\"Total Value Locked\")}>Total Value Locked</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDoller(\"#Vault Coins\")}>#Vault Coins</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => setDoller(\"Coin Price\")}>Vault Coin Price</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t </Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body pb-0 pt-sm-3 pt-0\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row sp20 mb-4 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4 col-xxl-4 col-sm-4 d-flex flex-wrap align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"px-2 info-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"fs-18 mb-1\">{doller}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"fs-28 font-w600 text-black\">{doller ===\"Total Value Locked\"? `$${vaultValues.TVL}` \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: doller ===\"#Vault Coins\"? vaultValues.numOfCoins\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: doller ===\"Coin Price\"? `$${vaultValues.coinPrice}`  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"N/A\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"chartBarRunning\" className=\"bar-chart\">\r\n\t\t\t\t\t\t\t\t\t\t\t{ chart===\"1\"? <CoinLineChart1 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: chart===\"2\"? <CoinLineChart2 />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: chart===\"3\"? <CoinLineChart3 />\r\n\t\t\t\t\t\t\t\t\t\t\t    : chart===\"4\"? <CoinLineChart4 />\r\n\t\t\t\t\t\t\t\t\t\t\t    : \"NO CHART HAS BEEN PROVIDED\"}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t\t<Quick_Deposit icons={icons} tokens={tokens} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-12\">\r\n\t\t\t\t\t\t\t\t<Quick_Withdrawal icons={icons} tokens={tokens} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default VaultDetailTab;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETPortfolio.js",["1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563"],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description, TokenBindings, LP_TokenBindings} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet rates = [], icons = [], descriptions = [], totalSupply = [];\r\n\r\n\r\n//TODO sparkPriceArray\r\nconst sampleData1 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData2 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData3 = [2,2,4,3,2,4,3,3,4,2,1,3,2,4,2,3,5,4,3,2];\r\nconst sampleData4 = [6,2,3,2,3,5,3,3,7,2,4,7,5,1,3,6,5,9];\r\nconst sampleData5 = [6,2,3,2,3,5,4,3,2,2,4,5,2,5,5,4,3,1,3,4,5,6];\r\nconst sampleData6 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\nconst sampleData7 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData8 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData9 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\n\r\nconst MarketCapital = ({ blockHeader, customerLoans, sparkPriceArray, totalLoansInCoin }) => {\r\n\r\n\tconst [data, setData] = useState(document.querySelectorAll(\"#marketCapitalLP tbody tr\"));\r\n\tconst sort = 9;\r\n\tconst activePag = useRef(0);\r\n\tconst [test, settest] = useState(0);\r\n\r\n  // Active data\r\n\tconst chageData = (frist, sec) => {\r\n\t\tfor (var i = 0; i < data.length; ++i) {\r\n\t\t\tif (i >= frist && i < sec) {\r\n\t\t\t\tdata[i].classList.remove(\"d-none\");\r\n\t\t\t} else {\r\n\t\t\t\tdata[i].classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t    const keys= Object.keys(oracle_EVM_Description);\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\ticons.push(oracle_EVM_Icons[item]); \r\n\t\t\t\tdescriptions.push(oracle_EVM_Description[item]); \r\n\t\t\t});\r\n\t},[])\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`DASHBOARDDARL>MARKET 1  blockHeader.number: `,blockHeader.number)\r\n\r\n\t\tif (blockHeader && typeof oracle_EVM_PricesHuman[\"DOT\"] !== \"undefined\")\r\n\t\t{\r\n\t\t\t// console.log(`DASHBOARDDARL>MARKET 2 *** > blockHeader.number: ${blockHeader.number} oracle_EVM_PricesHuman: `,oracle_EVM_PricesHuman);\r\n\t\t\tconst keys= Object.keys(oracle_EVM_PricesHuman);\r\n\t\t\trates =[];\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\trates.push(`${oracle_EVM_PricesHuman[item]}`);\r\n\t\t\t\ttotalSupply.push( TokenBindings[item].totalSupply );\r\n\t\t\t});\r\n\t\t\t// console.log(`DASHBOARDDARL>MARKET 3  totalSupply: `,totalSupply);\r\n\r\n\t\t\t// oracle_EVM_Prices = { ACA: ACA_price, AUSD: AUSD_price, DOT: DOT_price, LDOT: LDOT_price, RENBTC: RENBTC_price, KAR: KAR_price, KUSD: KUSD_price, KSM: KSM_price, LKSM: LKSM_price };\r\n\t\t}\r\n\r\n\t}, [blockHeader])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(document.querySelectorAll(\"#marketCapitalLP tbody tr\"));\r\n\t}, [test]);\r\n\r\n  // Active pagginarion\r\n\tactivePag.current === 0 && chageData(0, sort);\r\n\t// paggination\r\n\tlet paggination = Array(Math.ceil(data.length / sort))\r\n\t\t.fill()\r\n\t\t.map((_, i) => i + 1);\r\n\r\n  // Active paggination & chage data\r\n\tconst onClick = (i) => {\r\n\t\tactivePag.current = i;\r\n\t\tchageData(activePag.current * sort, (activePag.current + 1) * sort);\r\n\t\tsettest(i);\r\n\t};\r\n\t\r\n  return (\r\n    <>\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t<div className=\"table-responsive table-hover fs-14 \">\r\n\t\t\t\t\t<div id=\"example6_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-28 text-black\">Active Loan Portfolio</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<table className=\"table display mb-4 dataTablesCard font-w600  market-tbl border-no text-black dataTable no-footer border-0\" \r\n\t\t\t\t\t\t\tid=\"marketCapitalLP\" role=\"grid\" aria-describedby=\"example6_info\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\">\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting_asc\" tabIndex={0}  rowSpan={1} colSpan={1}>Coin</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Collateral</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Debit (aUSD)</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Health %</th>\r\n\t\t\t\t\t\t\t   </tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[2]} />{descriptions[2]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customerLoans? customerLoans[\"DOT\"].collateral : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${customerLoans? customerLoans[\"DOT\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{totalLoansInCoin[\"DOT\"] && totalLoansInCoin[\"DOT\"]!==0? (100*(Number(customerLoans[\"DOT\"].debit) / totalLoansInCoin[\"DOT\"])).toFixed(2) : \"N/A\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[3]} />{descriptions[3]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customerLoans? customerLoans[\"LDOT\"].collateral : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${customerLoans? customerLoans[\"LDOT\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{totalLoansInCoin[\"LDOT\"] && totalLoansInCoin[\"LDOT\"]!==0? (100*(Number(customerLoans[\"LDOT\"].debit) / totalLoansInCoin[\"LDOT\"])).toFixed(2) : \"N/A\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[4]} />{descriptions[4]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customerLoans? customerLoans[\"RENBTC\"].collateral : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${customerLoans? customerLoans[\"RENBTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{totalLoansInCoin[\"RENBTC\"] && totalLoansInCoin[\"RENBTC\"]!==0? (100*(Number(customerLoans[\"RENBTC\"].debit) / totalLoansInCoin[\"RENBTC\"])).toFixed(2) : \"N/A\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[9]} />{descriptions[9]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customerLoans? customerLoans[\"XBTC\"].collateral : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${customerLoans? customerLoans[\"XBTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{totalLoansInCoin[\"XBTC\"] && totalLoansInCoin[\"XBTC\"]!==0? (100*(Number(customerLoans[\"XBTC\"].debit) / totalLoansInCoin[\"XBTC\"])).toFixed(2) : \"N/A\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[10]} />{descriptions[10]}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customerLoans? customerLoans[\"POLKABTC\"].collateral : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${customerLoans? customerLoans[\"POLKABTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{totalLoansInCoin[\"POLKABTC\"] && totalLoansInCoin[\"POLKABTC\"]!==0? (100*(Number(customerLoans[\"POLKABTC\"].debit) / totalLoansInCoin[\"POLKABTC\"])).toFixed(2) : \"N/A\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t<div className=\"dataTables_info\">\r\n\t\t\t\t\t\t\t\t  Showing {activePag.current * sort + 1} to{\" \"}\r\n\t\t\t\t\t\t\t\t  {data.length > (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t? (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t: data.length}{\" \"}\r\n\t\t\t\t\t\t\t\t  of {data.length} entries\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"dataTables_paginate paging_simple_numbers\" id=\"example5_paginate\">\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button previous disabled\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t  <span> \r\n\t\t\t\t\t\t\t\t\t{paggination.map((number, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<span key={i} to=\"/market-capital\" className={`paginate_button  ${ activePag.current === i ? \"current\" : \"\" } `}  \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"inline-block\" }}>{number}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t  </span>\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button next\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarketCapital;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETOverview.js",["1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575"],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport {EVM_Setup, oracle_EVM_PricesHuman, oracle_EVM_Icons, oracle_EVM_Description, TokenBindings, LP_TokenBindings} from '../../../Predeployed_EVM.js';     //Blockchain provider,signer setup and helper functions\r\nlet rates = [], icons = [], descriptions = [], totalSupply = [];\r\n\r\n\r\n//TODO sparkPriceArray\r\nconst sampleData1 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData2 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData3 = [2,2,4,3,2,4,3,3,4,2,1,3,2,4,2,3,5,4,3,2];\r\nconst sampleData4 = [6,2,3,2,3,5,3,3,7,2,4,7,5,1,3,6,5,9];\r\nconst sampleData5 = [6,2,3,2,3,5,4,3,2,2,4,5,2,5,5,4,3,1,3,4,5,6];\r\nconst sampleData6 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\nconst sampleData7 = [2,3,4,5,6,5,4,6,5,7,2,3,4,5,3,2,5,4,5,7];\r\nconst sampleData8 = [2,2,2,4,4,5,4,6,5,7,6,8,7,9,8,4,7,6,8,7];\r\nconst sampleData9 = [1,2,3,1,4,2,4,2,2,1,2,5,1,4,1,1,5,4,3,2,4,2];\r\n\r\nconst MarketCapital = ({ blockHeader, loansOverviews, sparkPriceArray }) => {\r\n\r\n\tconst [data, setData] = useState(document.querySelectorAll(\"#marketCapitalLMO tbody tr\"));\r\n\tconst sort = 9;\r\n\tconst activePag = useRef(0);\r\n\tconst [test, settest] = useState(0);\r\n\r\n  // Active data\r\n\tconst chageData = (frist, sec) => {\r\n\t\tfor (var i = 0; i < data.length; ++i) {\r\n\t\t\tif (i >= frist && i < sec) {\r\n\t\t\t\tdata[i].classList.remove(\"d-none\");\r\n\t\t\t} else {\r\n\t\t\t\tdata[i].classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t    const keys= Object.keys(oracle_EVM_Description);\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\ticons.push(oracle_EVM_Icons[item]); \r\n\t\t\t\tdescriptions.push(oracle_EVM_Description[item]); \r\n\t\t\t});\r\n\t},[])\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`DASHBOARDDARL>MARKET 1  blockHeader.number: `,blockHeader.number)\r\n\r\n\t\tif (blockHeader && typeof oracle_EVM_PricesHuman[\"DOT\"] !== \"undefined\")\r\n\t\t{\r\n\t\t\t// console.log(`DASHBOARDDARL>MARKET 2 *** > blockHeader.number: ${blockHeader.number} oracle_EVM_PricesHuman: `,oracle_EVM_PricesHuman);\r\n\t\t\tconst keys= Object.keys(oracle_EVM_PricesHuman);\r\n\t\t\trates =[];\r\n\t\t\tkeys.forEach((item) => {\r\n\t\t\t\trates.push(`${oracle_EVM_PricesHuman[item]}`);\r\n\t\t\t\ttotalSupply.push( TokenBindings[item].totalSupply );\r\n\t\t\t});\r\n\t\t\t// console.log(`DASHBOARDDARL>MARKET 3  totalSupply: `,totalSupply);\r\n\r\n\t\t\t// oracle_EVM_Prices = { ACA: ACA_price, AUSD: AUSD_price, DOT: DOT_price, LDOT: LDOT_price, RENBTC: RENBTC_price, KAR: KAR_price, KUSD: KUSD_price, KSM: KSM_price, LKSM: LKSM_price };\r\n\t\t}\r\n\r\n\t}, [blockHeader])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(document.querySelectorAll(\"#marketCapitalLMO tbody tr\"));\r\n\t}, [test]);\r\n\r\n  // Active pagginarion\r\n\tactivePag.current === 0 && chageData(0, sort);\r\n\t// paggination\r\n\tlet paggination = Array(Math.ceil(data.length / sort))\r\n\t\t.fill()\r\n\t\t.map((_, i) => i + 1);\r\n\r\n  // Active paggination & chage data\r\n\tconst onClick = (i) => {\r\n\t\tactivePag.current = i;\r\n\t\tchageData(activePag.current * sort, (activePag.current + 1) * sort);\r\n\t\tsettest(i);\r\n\t};\r\n\r\n\t\r\n  return (\r\n    <>\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t<div className=\"table-responsive table-hover fs-14 \">\r\n\t\t\t\t\t<div id=\"example6_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n\t\t\t\t\t\t<div className=\"card-header border-0 pb-0\">\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 fs-28 text-black\">Loan Market Overview</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<table className=\"table display mb-4 dataTablesCard font-w600  market-tbl border-no text-black dataTable no-footer border-0\" \r\n\t\t\t\t\t\t\tid=\"marketCapitalLMO\" role=\"grid\" aria-describedby=\"example6_info\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\">\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting_asc\" tabIndex={0}  rowSpan={1} colSpan={1}>Coin</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Collateral</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Debit (aUSD)</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Debit Exchange Rate</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Max Total Debit Value</th>\r\n\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Stability Fee %</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Liquidatio Ratio %</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Liquidation Penalty %</th>\r\n\t\t\t\t\t\t\t\t\t<th className=\"sorting\" tabIndex={0}  rowSpan={1} colSpan={1}>Required Collateral Ratio %</th>\r\n\t\t\t\t\t\t\t   </tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[2]} />{descriptions[2]}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">{loansOverviews? loansOverviews[\"DOT\"].collateral : \"...\"}</span></td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].debitExchangeRate : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].maximumTotalDebitValue : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].stabilityFee : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].liquidationRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].liquidationPenalty : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"DOT\"].requiredCollateralRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[3]} />{descriptions[3]}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">{loansOverviews? loansOverviews[\"LDOT\"].collateral : \"...\"}</span></td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].debitExchangeRate : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].maximumTotalDebitValue : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].stabilityFee : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].liquidationRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].liquidationPenalty : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"LDOT\"].requiredCollateralRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[4]} />{descriptions[4]}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">{loansOverviews? loansOverviews[\"RENBTC\"].collateral : \"...\"}</span></td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].debitExchangeRate : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].maximumTotalDebitValue : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].stabilityFee : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].liquidationRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].liquidationPenalty : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"RENBTC\"].requiredCollateralRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"even\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[9]} />{descriptions[9]}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">{loansOverviews? loansOverviews[\"XBTC\"].collateral : \"...\"}</span></td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].debitExchangeRate : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].maximumTotalDebitValue : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].stabilityFee : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].liquidationRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].liquidationPenalty : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"XBTC\"].requiredCollateralRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr role=\"row\" className=\"odd\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"wspace-no\"><img alt=\"images\" width={50} src={icons[10]} />{descriptions[10]}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"sorting_1\"><span className=\"rank-ic fs-20\">{loansOverviews? loansOverviews[\"POLKABTC\"].collateral : \"...\"}</span></td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].debit : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].debitExchangeRate : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].maximumTotalDebitValue : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].stabilityFee : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].liquidationRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].liquidationPenalty : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{loansOverviews? loansOverviews[\"POLKABTC\"].requiredCollateralRatio : \"...\"}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<div className=\"d-sm-flex text-center justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t<div className=\"dataTables_info\">\r\n\t\t\t\t\t\t\t\t  Showing {activePag.current * sort + 1} to{\" \"}\r\n\t\t\t\t\t\t\t\t  {data.length > (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t? (activePag.current + 1) * sort\r\n\t\t\t\t\t\t\t\t\t: data.length}{\" \"}\r\n\t\t\t\t\t\t\t\t  of {data.length} entries\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"dataTables_paginate paging_simple_numbers\" id=\"example5_paginate\">\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button previous disabled\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t  <span> \r\n\t\t\t\t\t\t\t\t\t{paggination.map((number, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<span key={i} to=\"/market-capital\" className={`paginate_button  ${ activePag.current === i ? \"current\" : \"\" } `}  \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"inline-block\" }}>{number}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t  </span>\r\n\t\t\t\t\t\t\t\t<span className=\"paginate_button next\" to=\"\">\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarketCapital;\r\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/ManageLoan.js",["1576","1577","1578"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nimport { adjustLoan, accountLoans, oracle_API_Prices} from '../../../../AMTC6_API.js';          \r\n\r\n\r\nconst ManageLoan = ({blockHeader, icons, tickSymbols}) => {\r\n\tconst [baseCurrency, setBaseCurrency] = useState(\"DOT\");\t\r\n\tconst [baseCurrencyIconIndex, setBaseCurrencyIconIndex] = useState(2);\t\r\n\r\n\tconst [input_depWith_collateralAmount, setInput_depWith_collateralAmount] = useState(\"\");\t\r\n\tconst [input_borRepay_AUSDAmount, setInput_borRepay_AUSDAmount] = useState(\"\");\t\r\n    const [manageLoan_IsSubmiting, setManageLoan_IsSubmiting] = useState(false);\r\n    const [transactionMessage, setTransactionMessage] = useState(\"\");\r\n\t\r\n\r\n\tconst settingBaseCurrency = (tokSymbl) => {\r\n\t\tsetBaseCurrency(tokSymbl);\r\n\t\tconst tok_indx =  tickSymbols.findIndex((tok) => tok.toLowerCase()===tokSymbl.toLowerCase());\r\n\t\tsetBaseCurrencyIconIndex(tok_indx);\r\n\t};\r\n\r\n\r\n\tconst manageLoan = async () => {\r\n\t\tif ( (baseCurrency==='DOT' || baseCurrency==='LDOT' || baseCurrency==='XBTC' || baseCurrency==='RENBTC' || baseCurrency==='POLKABTC') \r\n\t\t\t\t&& (input_depWith_collateralAmount!==\"\" || input_borRepay_AUSDAmount!==\"\") )\r\n\t\t{\r\n\t\t\tconsole.log(`MANAGE LOAN baseCurrency:${baseCurrency} input_depWith_collateralAmount:${input_depWith_collateralAmount} input_borRepay_AUSDAmount:${input_borRepay_AUSDAmount}`);\r\n\t\t\tconst collateral = input_depWith_collateralAmount===\"\"? 0 : input_depWith_collateralAmount;\r\n\t\t\tconst debit = input_borRepay_AUSDAmount===\"\"? 0 : input_borRepay_AUSDAmount;\r\n\t\t\tconsole.log(`MANAGE LOAN baseCurrency:${baseCurrency} collateral:${collateral} debit:${debit}`);\r\n\r\n\t\t\tsetManageLoan_IsSubmiting(true);\r\n\t\t\tsetTransactionMessage(`Manage Loan Transaction submitted at BlockNumber: ${blockHeader.number}`);\r\n\r\n\t\t\tconst result = await adjustLoan(baseCurrency, collateral, debit);\r\n\r\n\t\t\tconsole.log(`ManageLoan adjust Existing Loan result: `,result);\r\n\t\t\tconsole.dir(result);\r\n\t\t\t\r\n\t\t\tsetManageLoan_IsSubmiting(false);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Manage Loan</h4>\r\n\t\t\t\t\t\t<p className=\"fs-12\">Deposit/Withdraw Collateral\tBorrow,Repay or Close existing loan</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"basic-form\">\r\n\t\t\t\t\t\t<form className=\"form-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"input-group-text form-control style-2 default-select cursor-pointer\"><img alt=\"images\" width={50} src={icons[baseCurrencyIconIndex]} style={{ marginRight: \"25px\" }}/>{baseCurrency} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"DOT\")}>DOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LDOT\")}>LDOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"RENBTC\")}>RENBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"XBTC\")}>XBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"POLKABTC\")}>POLKABTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"-10\" max=\"10\" step=\"0.01\" className=\"form-control\" placeholder=\"Deposit(+)/Withdraw(-) Collateral\" value = { input_depWith_collateralAmount } onChange = { (event) => setInput_depWith_collateralAmount(event.target.value) } style={{color:\"white\"}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\"><img alt=\"images\" width={50} src={icons[1]} style={{ marginRight: \"25px\" }}/>AUSD</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"-100000\" max=\"100000\" step=\"1\" className=\"form-control\" placeholder=\"Borrow More(+)/ Repay(-) AUSD\" value = { input_borRepay_AUSDAmount } onChange = { (event) => setInput_borRepay_AUSDAmount(event.target.value) } style={{color:\"white\"}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">Close Loan</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Yes/No (functionality not available yet)\" value=\"\"  onChange = { (event) => console.log(event.target.value) } />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<span style={{fontSize:10, color:\"green\"}}>{transactionMessage}</span>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<div className=\"row mt-4 align-items-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"row pt-5 align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary d-block btn-lg rounded\">\r\n    \t\t\t\t                    \t<button className=\"btn-primary\" disabled = { manageLoan_IsSubmiting } onClick = {manageLoan} style={{border: \"none\"}}>Manage Loan</button> \r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default ManageLoan;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/AuthorizeLoan.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Home/TransferFromLoan.js",["1579"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport TestimonialOwl from './TestimonialOwl';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nimport {tranferLoanFrom} from '../../../../AMTC6_API.js';          \r\n\r\n \r\nconst QuickTransfer = ({blockHeader, icons, tickSymbols}) => {\r\n\tconst [baseCurrency, setBaseCurrency] = useState(\"DOT\");\t\r\n\tconst [baseCurrencyIconIndex, setBaseCurrencyIconIndex] = useState(2);\t\r\n\tconst [authorizorAddress, setAuthorizorAddress] = useState(\"\");\t\r\n\tconst [transferLoan_IsSubmiting, setTransferLoan_IsSubmiting] = useState(false);\t\r\n    const [transactionMessage, setTransactionMessage] = useState(\"\");\r\n\r\n\t\r\n\tconst settingBaseCurrency = (tokSymbl) => {\r\n\t\tsetBaseCurrency(tokSymbl);\r\n\t\tconst tok_indx =  tickSymbols.findIndex((tok) => tok.toLowerCase()===tokSymbl.toLowerCase());\r\n\t\tsetBaseCurrencyIconIndex(tok_indx);\r\n\t};\r\n\r\n\tconst provideAddressToSendCoins = (adr) => {\r\n\t\tsetAuthorizorAddress(adr);\r\n\t};\r\n\r\n\tconst _trasnferLoanFrom = async () => {\r\n\t\tif ( (baseCurrency==='DOT' || baseCurrency==='LDOT' || baseCurrency==='XBTC' || baseCurrency==='RENBTC' || baseCurrency==='POLKABTC') && authorizorAddress)\r\n\t\t{\r\n\t\t\tconsole.log(`TRANSFER LOAN IN baseCurrency:${baseCurrency} from authorizorAddress: ${authorizorAddress}`);\r\n\t\t\tsetTransferLoan_IsSubmiting(true);\r\n\t\t\tsetTransactionMessage(`Transfer Loan Transaction submitted at BlockNumber: ${blockHeader.number}`);\r\n\r\n\t\t\tconst result = await tranferLoanFrom(baseCurrency, authorizorAddress);\r\n\r\n\t\t\t// console.log(`TRANSFER LOAN result: `,result);\r\n\t\t\tsetTransferLoan_IsSubmiting(false);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"fs-20 text-black\">Transfer Loan from</h4>\r\n\t\t\t\t\t\t<p className=\"fs-12\">Requires that your account has been authorized by loan owner</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"form-wrapper\">\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"\" as=\"div\" className=\"input-group-text form-control style-2 default-select cursor-pointer\"><img alt=\"images\" width={50} src={icons[baseCurrencyIconIndex]} style={{ marginRight: \"25px\" }}/>{baseCurrency} </Dropdown.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"DOT\")}>DOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"LDOT\")}>LDOT</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"RENBTC\")}>RENBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"XBTC\")}>XBTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => settingBaseCurrency(\"POLKABTC\")}>POLKABTC</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input type=\"number\" disabled={true} className=\"form-control\" placeholder=\"loan with token collateral to transfer\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-group input-group-lg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">Loan Owner</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={authorizorAddress} onChange = { (event) => setAuthorizorAddress(event.target.value) } placeholder=\"\" style={{fontSize: \"14px\", color: \"white\"}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<span style={{fontSize:\"14px\", color:\"green\"}}>{transactionMessage}</span>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\r\n\t\t\t\t\t<div className=\"d-flex mb-3 justify-content-between align-items-center view-link\">\r\n\t\t\t\t\t\t<h4 className=\"text-black fs-20 mb-0\">Recent Contacts</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TestimonialOwl provideAddressToSendCoins={provideAddressToSendCoins} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row pt-5 align-items-center\">\r\n\t\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-primary d-block btn-lg rounded\" style={{backgroundColor: \"#58D68D\"}}>\r\n    \t\t\t\t            <button className=\"btn-primary\" disabled={transferLoan_IsSubmiting} onClick={_trasnferLoanFrom} style={{border: \"none\", backgroundColor: \"#58D68D\"}}>Transfer Loan</button> \r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</>\r\n\t)\r\n}\r\nexport default QuickTransfer;","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/AMTC6_API.js",["1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611"],"// import React, { useState, useEffect, useMemo, useCallback } from 'react';\n// import {getSigner} from './Setup.js';     //getSigner using seed phrase to be able to signAndSend transactions\n// import ChangeMessage from './ChangeMessage.js';\n// import { ethers } from 'ethers';\n// import BasicToken01_raw from './Abis/BasicToken01';\n// import { CurrencyId, Balance, AccounId} from '@acala-network/types/interfaces';   //used exclusively for transfer currency / balance events\n\n\n\n\nlet api,decimals,selectedAddress, extension;\nlet acaBalance, ausdBalance, dotBalance, ldotBalance,renbtcBalance,karBalance,kusdBalance,ksmBalance,lksmBalance,xbtcBalance,polkabtcBalance,plmBalance,phaBalance,hdtBalance,bcgBalance,sdnBalance;\nlet customer_portfolio = { ACA: undefined , AUSD: undefined, DOT: undefined , LDOT: undefined, RENBTC: undefined  , KAR: undefined\n                         , KUSD: undefined, KSM: undefined , LKSM: undefined, XBTC: undefined, POLKABTC: undefined, PLM: undefined \n                         , PHA: undefined , HDT: undefined, BCG: undefined, SDN: undefined};\n\nlet  acaAusdPool,dotAusdPool,ldotAusdPool,xbtcAusdPool,renbtcAusdPool,polkabtcAusdPool,plmAusdPool,hdtAusdPool,sdnAusdPool,bcgAusdPool;                        \nlet oracle_API_Prices = { ACA: undefined, DOT: undefined, LDOT: undefined, XBTC: undefined, RENBTC: undefined, POLKABTC: undefined, PLM: undefined, HDT: undefined, SDN: undefined , BCA: undefined  };\n\nlet accountLoans;     \nlet loansOverview;\n\n\n\n\nconst formatNumber = (number, decimals) => {\n    if (number.toString() === \"0\") return \"0\";\n    return (Number(number.toString()) / 10 ** decimals).toFixed(5);\n};\n\n\n// const AMTC6_FE = ({ extension, blockHeader, accountList, setupSpecs, getCurrentGasPrice}) => {\n// }\n\n\n\nconst update_CustomerAccount = async (customerAddress, blockHeader) => {\n    selectedAddress = customerAddress;\n    console.log(`AMTC6_API update_CustomerAccount selectedAddress: ${selectedAddress}`)\n    await getAccountBalanceSnapshot();  //while waiting to subscribe to account events  \n    await getAccountLoans();\n    if (blockHeader) await getLoansOverview(blockHeader);\n    await subscribeToAccountEvents();\n};\n\nconst setExtensionAPI = (_extension) => {\n    extension = _extension;\n};\n\n    // const [api, setApi] = useState();\n    // const [decimals, setDecimals] = useState();\n    // const [selectedAddress, setSelectedAddress] = useState();\n\n    // const [acaBalance, setACABalance]   = useState();\n    // const [ausdBalance, setAUSDBalance] = useState();\n    // const [dotBalance, setDOTBalance]   = useState();\n    // const [ldotBalance, setLDOTBalance]   = useState();\n    // const [renbtcBalance, setRENBTCBalance]   = useState();\n    // const [karBalance, setKARBalance]   = useState();\n    // const [kusdBalance, setKUSDBalance]   = useState();\n    // const [ksmBalance, setKSMBalance]   = useState();\n    // const [lksmBalance, setLKSMBalance]   = useState();\n    // const [xbtcBalance, setXBTCBalance]   = useState();\n    // const [polkabtcBalance, setPOLKABTCBalance]   = useState();\n    // const [plmBalance, setPLMBalance]   = useState();\n    // const [phaBalance, setPHABalance]   = useState();\n    // const [hdtBalance, setHDTBalance]   = useState();\n    // const [bcgBalance, setBCGBalance]   = useState();\n    // const [sdnBalance, setSDNBalance]   = useState();\n\n    //LIQUIDITY POOLS\n    // const [ACAAUSD, setACAAUSD] = useState(0);\n    // const [DOTAUSD, setDOTAUSD] = useState(0);\n    // const [LDOTAUSD, setLDOTAUSD] = useState(0);\n    // const [XBTCAUSD, setXBTCAUSD] = useState(0);\n    // const [RENBTCAUSD, setRENBTCAUSD] = useState(0);\n    // const [POLKABTCAUSD, setPOLKABTCAUSD] = useState(0);\n    // const [PLMAUSD, setPLMAUSD] = useState(0);\n    // const [HDTAUSD, setHDTAUSD] = useState(0);\n    // const [SDNAUSD, setSDNAUSD] = useState(0);\n    // const [BCGAUSD, setBCGAUSD] = useState(0);\n\n    // const [statusACAAUSD, setStatusACAAUSD] = useState();\n    // const [statusDOTAUSD, setStatusDOTAUSD] = useState();\n    // const [statusLDOTAUSD, setStatusLDOTAUSD] = useState();\n    // const [statusXBTCAUSD, setStatusXBTCAUSD] = useState();\n    // const [statusRENBTCAUSD, setStatusRENBTCAUSD] = useState();\n    // const [statusPOLKABTCAUSD, setStatusPOLKABTCAUSD] = useState();\n    // const [statusPLMAUSD, setStatusPLMAUSD] = useState();\n    // const [statusHDTAUSD, setStatusHDTAUSD] = useState();\n    // const [statusSDNAUSD, setStatusSDNAUSD] = useState();\n    // const [statusBCGAUSD, setStatusBCGAUSD] = useState();\n\n    /*\n    const [input_Supply_ACA, setInput_Supply_ACA] = useState(\"\");\n    const [swapWithExactSupply_IsSubmiting, setSwapWithExactSupply_IsSubmiting] = useState(false);\n\n    const [input_target_AUSD, setInput_target_AUSD] = useState(\"\");\n    const [input_maxSupply_ACA, setInput_maxSupply_ACA] = useState(\"\");\n    const [swapWithExactTarget_IsSubmiting, setSwapWithExactTarget_IsSubmiting] = useState(false);\n\n    const [input_liq_ACA, setInput_Liq_ACA] = useState(\"\");\n    const [input_liq_AUSD, setInput_Liq_AUSD] = useState(\"\");\n    const [isAddLiquiditySubmiting, setIsAddLiquiditySubmiting] = useState(false);\n\n    const [input_removeliquidity_Shares, setInput_RemoveLiquidityShares] = useState(\"\");\n    const [isRemovingLiquiditySubmiting, setIsRemoveLiquiditySubmiting] = useState(false);\n\n    const [input_balanceToTransfer, setInput_BalanceToTransfer] = useState(\"\");\n    const [destinationAddress, setDestinationAddress] = useState(\"\");\n    const [isBalanceToTransferSubmiting, setIsBalanceToTransferSubmiting] = useState(false);\n    \n    const [input_currencyToTransfer, setInput_CurrencyToTransfer] = useState(\"\");\n    const [currencyDestinationAddress, setCurrencyDestinationAddress] = useState(\"\");\n    const [input_transferToken, setInput_transferToken] = useState(\"\");\n    const [isCurrencyToTransferSubmiting, setIsCurrencyToTransferSubmiting] = useState(false);\n\n    //LOANS \n    const [loans_DOT, setLoans_DOT] = useState({hash: \"\", collateral: \"\", debit: \"\" });\n    const [loans_LDOT, setLoans_LDOT] = useState({hash: \"\",collateral: \"\", debit: \"\" });\n    const [loans_XBTC, setLoans_XBTC] = useState({hash: \"\", collateral: \"\", debit: \"\" });\n    const [loans_RENBTC, setLoans_RENBTC] = useState({hash: \"\", collateral: \"\", debit: \"\" });\n    const [loans_POLKABTC, setLoans_POLKABTC] = useState({hash: \"\", collateral: \"\", debit: \"\" });\n\n    const [total_loans_DOT, setTotalLoans_DOT] = useState({hash: \"\", collateral: \"\", debit: \"\", debitExchangeRate: \"\" });\n    const [total_loans_LDOT, setTotalLoans_LDOT] = useState({hash: \"\",collateral: \"\", debit: \"\", debitExchangeRate: \"\" });\n    const [total_loans_XBTC, setTotalLoans_XBTC] = useState({hash: \"\", collateral: \"\", debit: \"\", debitExchangeRate: \"\" });\n    const [total_loans_RENBTC, setTotalLoans_RENBTC] = useState({hash: \"\", collateral: \"\", debit: \"\", debitExchangeRate: \"\" });\n    const [total_loans_POLKABTC, setTotalLoans_POLKABTC] = useState({hash: \"\", collateral: \"\", debit: \"\", debitExchangeRate: \"\" });\n\n    const [loans_DOT_Params, setLoans_DOT_Params] = useState({maximumTotalDebitValue: \"\", stabilityFee: \"\", liquidationRatio: \"\", liquidationPenalty: \"\", requiredCollateralRatio: \"\" });\n    const [loans_LDOT_Params, setLoans_LDOT_Params] = useState({maximumTotalDebitValue: \"\", stabilityFee: \"\", liquidationRatio: \"\", liquidationPenalty: \"\", requiredCollateralRatio: \"\" });\n    const [loans_XBTC_Params, setLoans_XBTC_Params] = useState({maximumTotalDebitValue: \"\", stabilityFee: \"\", liquidationRatio: \"\", liquidationPenalty: \"\", requiredCollateralRatio: \"\" });\n    const [loans_RENBTC_Params, setLoans_RENBTC_Params] = useState({maximumTotalDebitValue: \"\", stabilityFee: \"\", liquidationRatio: \"\", liquidationPenalty: \"\", requiredCollateralRatio: \"\" });\n    const [loans_POLKABTC_Params, setLoans_POLKABTC_Params] = useState({maximumTotalDebitValue: \"\", stabilityFee: \"\", liquidationRatio: \"\", liquidationPenalty: \"\", requiredCollateralRatio: \"\" });\n\n\n    const [input_CollateralTokenSumbol, setInput_CollateralTokenSumbol] = useState(\"\");\n    const [autorizeeAddress, setAuthorizeeAddress] = useState(\"\");\n    const [isCollateralTokenSubmiting, setIsCollateralTokenSubmiting] = useState(false);\n    const [isUnauthorizeSubmiting, setIsUnauthorizeSubmiting] = useState(false);\n    const [isUnauthorizeALLSubmiting, setIsUnauthorizeALLSubmiting] = useState(false);\n\n\n    const [input_LoanAdjust_CollateralTokenSymbol, setInput_LoanAdjust_CollateralTokenSymbol] = useState(\"\");\n    const [input_adjust_collateral_depositWithdraw, setInput_adjust_collateral_depositWithdraw] = useState(\"\");\n    const [input_adjust_borrowRepay_AUSD, setInput_adjust_borrowRepay_AUSD] = useState(\"\");\n    const [isAdjustLoanSubmiting, setIsAdjustLoanSubmiting] = useState(false);\n\n    const [input_LoanClose_CollateralTokenSymbol, setInput_LoanClose_CollateralTokenSymbol] = useState(\"\");\n    const [isCloseLoanSubmiting, setIsCloseLoanSubmiting] = useState(false);\n\n    const [input_LoanTransfer_CollateralTokenSymbol, setInput_LoanTransfer_CollateralTokenSymbol] = useState(\"\");\n    const [input_LoanTransfer_FromAccount, setInput_LoanTransfer_FromAccount] = useState(\"\");\n    const [isTransferLoanSubmiting, setIsTransferLoanSubmiting] = useState(false);\n\n    const [sc, setSC]                             = useState({ scAddress: null, scABI: null, scReadOnly: null, scAbstraction: null });\n    const [scStateVariables, setSCStateVariables] = useState({ name: null, symbol: null, message: \"\" });\n   */\n\n    //#region Setup API\n    // useEffect(() => {\n\n        const API_Setup = async (setupSpecs) => {\n            if (setupSpecs.connected === 'Connected to AcalaMandalaTC6')\n            {\n                console.log('AMTC6_API API_Setup setupSpecs.connected : ',setupSpecs.connected);\n\n                api = await setupSpecs.provider.api;\n\n                //#region created object decimals with symbol: Numberofdecimals key:value\n                if (api) {\n                      // api.rpc.system.properties().then((result) => {\n                      const result = await api.rpc.system.properties();\n                      let _decimals = {};\n                      const tokenDecimals = result.tokenDecimals.isNone ? [] : result.tokenDecimals.value;\n                      const tokenSymbol = result.tokenSymbol.isNone ? [] : result.tokenSymbol.value;\n                      for (let i = 0; i < tokenSymbol.length; i++) {\n                        _decimals[tokenSymbol[i]] = tokenDecimals[i].toNumber();\n                      }\n                      decimals = _decimals;\n                      console.log(`AMTC6 decimals: `,decimals);  //{ACA: 13, AUSD: 12, DOT: 10, HDT: 12, KAR: 12, KSM: 12, KUSD: 12, LDOT: 10, LKSM: 12, PHA: 18, PLM: 18, POLKABTC: 8, RENBTC: 8, SDN: 18, XBTC: 8}\n                    // });\n                }\n                //#endregion\n\n                return true\n            } else return false\n        }\n        // runSetup();\n\n    // }, [setupSpecs.connected]);   \n    //#endregion Setup API\n\n  \n     \n    //#region token balance event listeners for selectedAddress\n    const getAccountBalanceSnapshot = async () => {\n        if (api && decimals && selectedAddress) {\n\n            console.log(`AMTC6 getAccountBalanceSnapshot decimals: `,decimals,`selectedAddress: ${selectedAddress}`);\n\n            let result;\n            result = await api.query.system.account(selectedAddress);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance ACA (cash) ${result.data.free} nonce: ${result.nonce} result: `,result);\n            // setACABalance(result.data.free);\n            acaBalance = result.data.free;\n            customer_portfolio[\"ACA\"] = formatedACA();\n           \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"AUSD\",} );\n            // setAUSDBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance AUSD ${result.free}  results: `,result);\n            ausdBalance = result.free;\n            customer_portfolio[\"AUSD\"] = formatedAUSD();\n             \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"DOT\",} );\n            // setDOTBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance DOT ${result.free}  results: `,result);\n            dotBalance = result.free;\n            customer_portfolio[\"DOT\"] = formatedDOT();\n           \n            result =  await api.query.tokens.accounts(selectedAddress, { TOKEN: \"LDOT\",} );\n            // setLDOTBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance LDOT ${result.free}  results: `,result);\n            ldotBalance = result.free;\n            customer_portfolio[\"LDOT\"] = formatedLDOT();\n          \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"RENBTC\",} );\n            // setRENBTCBalance(result.free);\n            console.log(`getAccountBalanceSnapshotFor account ${selectedAddress} Balance RENBTC ${result.free}  results: `,result);\n            renbtcBalance = result.free;\n            customer_portfolio[\"RENBTC\"] = formatedRENBTC();\n          \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KAR\",} );\n            // setKARBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance KAR ${result.free}  results: `,result);\n            karBalance = result.free;\n            customer_portfolio[\"KAR\"] = formatedKAR();\n        \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KUSD\",} );\n            // setKUSDBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance KUSD ${result.free}  results: `,result);\n            kusdBalance = result.free;\n            customer_portfolio[\"KUSD\"] = formatedKUSD();\n         \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KSM\",} );\n            // setKSMBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance KSM ${result.free}  results: `,result);\n            ksmBalance = result.free;\n            customer_portfolio[\"KSM\"] = formatedKSM();\n             \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"XBTC\",} );\n            // setXBTCBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance XBTC ${result.free}  results: `,result);\n            xbtcBalance = result.free;\n            customer_portfolio[\"XBTC\"] = formatedXBTC();\n             \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"POLKABTC\",} );\n            // setPOLKABTCBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance POLKABTC ${result.free}  results: `,result);\n            polkabtcBalance = result.free;\n            customer_portfolio[\"POLKABTC\"] = formatedPOLKABTC();\n           \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"PLM\",} );\n            // setPLMBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance PLM ${result.free}  results: `,result);\n            plmBalance = result.free;\n            customer_portfolio[\"PLM\"] = formatedPLM();\n             \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"PHA\",} );\n            // setPHABalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance PHA ${result.free}  results: `,result);\n            phaBalance = result.free;\n            customer_portfolio[\"PHA\"] = formatedPHA();\n           \n            // result = await api.query.tokens.accounts(selectedAddress);\n            //     // setHDTBalance(result.free);\n            //     hdtBalance = result.free;\n            //     customer_portfolio[\"HDT\"] = formatedHDT();\n            // });\n            // result= await api.query.tokens.accounts(selectedAddress);\n            //     // setBCGBalance(result.free);\n            //     console.log(`For account ${selectedAddress} Balance BCG ${result.free}  results: `,result);\n            //     bcgBalance = result.free;\n            //     customer_portfolio[\"BCG\"] = formatedBCG();\n            // });\n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"LKSM\",} )\n            // setLKSMBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance LKSM ${result.free}  results: `,result);\n            lksmBalance = result.free;\n            customer_portfolio[\"LKSM\"] = formatedLKSM();\n            \n            result = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"SDN\",} );\n            // setSDNBalance(result.free);\n            console.log(`getAccountBalanceSnapshot For account ${selectedAddress} Balance SDN ${result.free}  results: `,result);\n            sdnBalance = result.free;\n            customer_portfolio[\"SDN\"] = formatedSDN();\n\n            console.log(`AMTC6-API .customer_portfolio: `,customer_portfolio);\n            \n            return true;\n        } else return false;\n    }\n\n\n\n\n\n    // useEffect(() => {\n    let unsubACA, unsubAUSD, unsubDOT, unsubLDOT, unsubRENBTC, unsubKAR, unsubKUSD, unsubKSM, unsubXBTC, unsubPOLKABTC, unsubPLM, unsubPHA, unsubHDT, unsubBCG, unsubLKSM, unsubSDN;\n    let alreadySubscribedToAccountEvents = false;\n    const subscribeToAccountEvents = async () => {\n        if (api && decimals && selectedAddress) {\n\n            console.log(`AMTC6 subscribeToAccountEvents decimals: `,decimals,`selectedAddress: ${selectedAddress} alreadySubscribedToAccountEvents: ${alreadySubscribedToAccountEvents}`);\n\n            if (alreadySubscribedToAccountEvents) unsubscribeToAccountEvents();\n\n            unsubACA = await api.query.system.account(selectedAddress, (result) => {\n                    console.log(`For account ${selectedAddress} Balance ACA (cash) ${result.data.free} nonce: ${result.nonce} result: `,result);\n                    // setACABalance(result.data.free);\n                    acaBalance = result.data.free;\n                    customer_portfolio[\"ACA\"] = formatedACA();\n            });\n            unsubAUSD = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"AUSD\",} , (result) => {\n                // setAUSDBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance AUSD ${result.free}  results: `,result);\n                ausdBalance = result.free;\n                customer_portfolio[\"AUSD\"] = formatedAUSD();\n            });\n            unsubDOT = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"DOT\",} , (result) => {\n                // setDOTBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance DOT ${result.free}  results: `,result);\n                dotBalance = result.free;\n                customer_portfolio[\"DOT\"] = formatedDOT();\n            });\n            unsubLDOT = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"LDOT\",} , (result) => {\n                // setLDOTBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance LDOT ${result.free}  results: `,result);\n                ldotBalance = result.free;\n                customer_portfolio[\"LDOT\"] = formatedLDOT();\n            });\n            unsubRENBTC = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"RENBTC\",} , (result) => {\n                // setRENBTCBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance RENBTC ${result.free}  results: `,result);\n                renbtcBalance = result.free;\n                customer_portfolio[\"RENBTC\"] = formatedRENBTC();\n            });\n            unsubKAR = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KAR\",} , (result) => {\n                // setKARBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance KAR ${result.free}  results: `,result);\n                karBalance = result.free;\n                customer_portfolio[\"KAR\"] = formatedKAR();\n            });\n            unsubKUSD = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KUSD\",} , (result) => {\n                // setKUSDBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance KUSD ${result.free}  results: `,result);\n                kusdBalance = result.free;\n                customer_portfolio[\"KUSD\"] = formatedKUSD();\n            });\n            unsubKSM = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"KSM\",} , (result) => {\n                // setKSMBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance KSM ${result.free}  results: `,result);\n                ksmBalance = result.free;\n                customer_portfolio[\"KSM\"] = formatedKSM();\n            });\n            unsubXBTC = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"XBTC\",} , (result) => {\n                // setXBTCBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance XBTC ${result.free}  results: `,result);\n                xbtcBalance = result.free;\n                customer_portfolio[\"XBTC\"] = formatedXBTC();\n            });\n            unsubPOLKABTC = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"POLKABTC\",} , (result) => {\n                // setPOLKABTCBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance POLKABTC ${result.free}  results: `,result);\n                polkabtcBalance = result.free;\n                customer_portfolio[\"POLKABTC\"] = formatedPOLKABTC();\n            });\n            unsubPLM = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"PLM\",} , (result) => {\n                // setPLMBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance PLM ${result.free}  results: `,result);\n                plmBalance = result.free;\n                customer_portfolio[\"PLM\"] = formatedPLM();\n            });\n            unsubPHA = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"PHA\",} , (result) => {\n                // setPHABalance(result.free);\n                console.log(`For account ${selectedAddress} Balance PHA ${result.free}  results: `,result);\n                phaBalance = result.free;\n                customer_portfolio[\"PHA\"] = formatedPHA();\n            });\n            // const unsubHDT = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"HDT\",} , (result) => {\n            //     // setHDTBalance(result.free);\n            //     hdtBalance = result.free;\n            //     customer_portfolio[\"HDT\"] = formatedHDT();\n            // });\n            // unsubBCG = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"BCG\",} , (result) => {\n            //     // setBCGBalance(result.free);\n            //     console.log(`For account ${selectedAddress} Balance BCG ${result.free}  results: `,result);\n            //     bcgBalance = result.free;\n            //     customer_portfolio[\"BCG\"] = formatedBCG();\n            // });\n            unsubLKSM = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"LKSM\",} , (result) => {\n                // setLKSMBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance LKSM ${result.free}  results: `,result);\n                lksmBalance = result.free;\n                customer_portfolio[\"LKSM\"] = formatedLKSM();\n            });\n            unsubSDN = await api.query.tokens.accounts(selectedAddress, { TOKEN: \"SDN\",} , (result) => {\n                // setSDNBalance(result.free);\n                console.log(`For account ${selectedAddress} Balance SDN ${result.free}  results: `,result);\n                sdnBalance = result.free;\n                customer_portfolio[\"SDN\"] = formatedSDN();\n            });\n            // const unsubLP_ACA_AUSD = api.query.tokens.accounts(selectedAddress, { TOKEN: \"LP_ACA_AUSD\",} , (result) => {\n            //     setLP_ACA_AUSDBalance(result.free);\n            // });\n\n\n            console.log(`AMTC6-API ....... typeof unsubACA: ${typeof unsubACA}  unsubACA: `);\n            console.dir(unsubACA);\n    \n        //   return () => {\n        //         unsubAUSD.then((cb) => cb());\n        //         unsubACA.then((cb) => cb());\n        //         unsubDOT.then((cb) => cb());\n        //         unsubLDOT.then((cb) => cb());\n        //         unsubRENBTC.then((cb) => cb());\n        //         unsubKAR.then((cb) => cb());\n        //         unsubKUSD.then((cb) => cb());\n        //         unsubKSM.then((cb) => cb());\n        //         unsubXBTC.then((cb) => cb());\n        //         unsubPOLKABTC.then((cb) => cb());\n        //         unsubPLM.then((cb) => cb());\n        //         unsubPHA.then((cb) => cb());\n        //         unsubHDT.then((cb) => cb());\n        //         unsubBCG.then((cb) => cb());\n        //         unsubLKSM.then((cb) => cb());\n        //         unsubSDN.then((cb) => cb());\n        //         // unsubLP_ACA_AUSD.then((cb) => cb());\n        //   };\n            \n            alreadySubscribedToAccountEvents = true;\n            return true;\n        } else return false;\n    }\n    // }, [api, decimals, selectedAddress]);\n\n    const unsubscribeToAccountEvents = () => {\n        unsubAUSD();\n        unsubACA();\n        // unsubDOT.then((cb) => cb());\n        // unsubLDOT.then((cb) => cb());\n        // unsubRENBTC.then((cb) => cb());\n        // unsubKAR.then((cb) => cb());\n        // unsubKUSD.then((cb) => cb());\n        // unsubKSM.then((cb) => cb());\n        // unsubXBTC.then((cb) => cb());\n        // unsubPOLKABTC.then((cb) => cb());\n        // unsubPLM.then((cb) => cb());\n        // unsubPHA.then((cb) => cb());\n        // // unsubHDT.then((cb) => cb());\n        // // unsubBCG.then((cb) => cb());\n        // unsubLKSM.then((cb) => cb());\n        // unsubSDN.then((cb) => cb());\n        // unsubLP_ACA_AUSD.then((cb) => cb());\n    };\n    //#endregion\n\n    //#region Format TOKEN balance with Decimals before showing it\n    const formatedACA = () => {\n        if (!acaBalance || !decimals[\"ACA\"]) return \"0\";\n        return formatNumber(acaBalance, decimals[\"ACA\"]);\n    };\n    const formatedAUSD = () => {\n        if (!ausdBalance || !decimals[\"AUSD\"]) return \"0\";\n        return formatNumber(ausdBalance, decimals[\"AUSD\"]);\n    };\n    const formatedDOT = () => {\n        if (!dotBalance || !decimals[\"DOT\"]) return \"0\";\n        return formatNumber(dotBalance, decimals[\"DOT\"]);\n    };\n    const formatedLDOT = () => {\n        if (!ldotBalance || !decimals[\"LDOT\"]) return \"0\";\n        return formatNumber(ldotBalance, decimals[\"LDOT\"]);\n    };\n    const formatedRENBTC = () => {\n        if (!renbtcBalance || !decimals[\"RENBTC\"]) return \"0\";\n        return formatNumber(renbtcBalance, decimals[\"RENBTC\"]);\n    };\n    const formatedKAR = () => {\n        if (!karBalance || !decimals[\"KAR\"]) return \"0\";\n        return formatNumber(karBalance, decimals[\"KAR\"]);\n    };\n    const formatedKUSD = () => {\n        if (!kusdBalance || !decimals[\"KUSD\"]) return \"0\";\n        return formatNumber(kusdBalance, decimals[\"KUSD\"]);\n    };\n    const formatedKSM = () => {\n        if (!ksmBalance || !decimals[\"KSM\"]) return \"0\";\n        return formatNumber(ksmBalance, decimals[\"KSM\"]);\n    };\n    const formatedXBTC = () => {\n        if (!xbtcBalance || !decimals[\"XBTC\"]) return \"0\";\n        return formatNumber(xbtcBalance, decimals[\"XBTC\"]);\n    };\n    const formatedPOLKABTC = () => {\n        if (!polkabtcBalance || !decimals[\"POLKABTC\"]) return \"0\";\n        return formatNumber(polkabtcBalance, decimals[\"POLKABTC\"]);\n    };\n    const formatedPLM = () => {\n        if (!plmBalance || !decimals[\"PLM\"]) return \"0\";\n        return formatNumber(plmBalance, decimals[\"PLM\"]);\n    };\n    const formatedPHA = () => {\n        if (!phaBalance || !decimals[\"PHA\"]) return \"0\";\n        return formatNumber(phaBalance, decimals[\"PHA\"]);\n    };\n    const formatedHDT = () => {\n        if (!hdtBalance || !decimals[\"HDT\"]) return \"0\";\n        return formatNumber(hdtBalance, decimals[\"HDT\"]);\n    };\n    const formatedBCG = () => {\n        if (!bcgBalance || !decimals[\"BCG\"]) return \"0\";\n        return formatNumber(bcgBalance, decimals[\"BCG\"]);\n    };\n    const formatedLKSM = () => {\n        if (!lksmBalance || !decimals[\"LKSM\"]) return \"0\";\n        return formatNumber(lksmBalance, decimals[\"LKSM\"]);\n    };\n    const formatedSDN = () => {\n        if (!sdnBalance || !decimals[\"SDN\"]) return \"0\";\n        return formatNumber(sdnBalance, decimals[\"SDN\"]);\n    };\n    //#endregion\n\n    //#region get Liquidity in Pools and Pricing for ACAAUSD, DOTAUSD LDOTAUSD XBTCAUSD RENBTCAUSD POLKABTCAUSD\n    // useEffect( () => { \n    const get_API_OraclePrices = async () => {\n            //api.query.dex provides access to liquidityPool, provisioningPool, tradingPairStatuses\n\n            if (api && decimals) \n            {\n                 acaAusdPool = await api.query.dex.liquidityPool([ {Token: \"ACA\"},{Token: \"AUSD\"},]);\n                 dotAusdPool = await api.query.dex.liquidityPool([ {Token: \"DOT\"},{Token: \"AUSD\"},]);\n                 // console.log(`AMTC6 acaAusdPool[1].toString(): ${acaAusdPool[1].toString()} acaAusdPool[0].toString(): ${acaAusdPool[0].toString()}`);\n                 // console.log(`AMTC6 dotAusdPool[1].toString(): ${dotAusdPool[1].toString()} dotAusdPool[0].toString(): ${dotAusdPool[0].toString()}`);\n                 ldotAusdPool = await api.query.dex.liquidityPool([ {Token: \"LDOT\"},{Token: \"AUSD\"},]);\n                 xbtcAusdPool = await api.query.dex.liquidityPool([ {Token: \"XBTC\"},{Token: \"AUSD\"},]);\n                 renbtcAusdPool = await api.query.dex.liquidityPool([ {Token: \"RENBTC\"},{Token: \"AUSD\"},]);\n                 polkabtcAusdPool = await api.query.dex.liquidityPool([ {Token: \"POLKABTC\"},{Token: \"AUSD\"},]);\n                 plmAusdPool = await api.query.dex.liquidityPool([ {Token: \"PLM\"},{Token: \"AUSD\"},]);\n                 hdtAusdPool = await api.query.dex.liquidityPool([ {Token: \"HDT\"},{Token: \"AUSD\"},]);\n                 sdnAusdPool = await api.query.dex.liquidityPool([ {Token: \"SDN\"},{Token: \"AUSD\"},]);\n                 bcgAusdPool = await api.query.dex.liquidityPool([ {Token: \"BCG\"},{Token: \"AUSD\"},]);\n\n                // console.log(`AMTC6 acaAusdPool[1].toString(): ${acaAusdPool[1].toString()} acaAusdPool[0].toString(): ${acaAusdPool[0].toString()} acaAusdPool: `,acaAusdPool);\n                const _ACAAUSD = (+acaAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+acaAusdPool[0].toString() / 10 ** decimals[\"ACA\"]);\n                const _DOTAUSD = (+dotAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+dotAusdPool[0].toString() / 10 ** decimals[\"DOT\"]);\n                const _LDOTAUSD = (+ldotAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+ldotAusdPool[0].toString() / 10 ** decimals[\"LDOT\"]);\n                const _XBTCAUSD = (+xbtcAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+xbtcAusdPool[0].toString() / 10 ** decimals[\"XBTC\"]);\n                const _RENBTCAUSD = (+renbtcAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+renbtcAusdPool[0].toString() / 10 ** decimals[\"RENBTC\"]);\n                const _POLKABTCAUSD = (+polkabtcAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+polkabtcAusdPool[0].toString() / 10 ** decimals[\"POLKABTC\"]);\n                const _PLMAUSD = (+plmAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+plmAusdPool[0].toString() / 10 ** decimals[\"PLM\"]);\n                const _HDTAUSD = (+hdtAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+hdtAusdPool[0].toString() / 10 ** decimals[\"HDT\"]);\n                const _SDNAUSD = (+sdnAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+sdnAusdPool[0].toString() / 10 ** decimals[\"SDN\"]);\n                const _BCGAUSD = (+bcgAusdPool[1].toString() / 10 ** decimals[\"AUSD\"]) / (+bcgAusdPool[0].toString() / 10 ** decimals[\"BCG\"]);\n\n\n\n                // console.log(`AMTC6 _ACAAUSD: ${_ACAAUSD} _DOTAUSD: ${_DOTAUSD}`);\n                oracle_API_Prices = { ACA: _ACAAUSD, DOT: _DOTAUSD, LDOT: _LDOTAUSD, XBTC: _XBTCAUSD, RENBTC: _RENBTCAUSD, POLKABTC: _POLKABTCAUSD, PLM: _PLMAUSD, HDT: _HDTAUSD, SDN: _SDNAUSD , BCA: _BCGAUSD  };\n\n                // setACAAUSD(_ACAAUSD);\n                // setDOTAUSD(_DOTAUSD);\n                // setLDOTAUSD(_LDOTAUSD);\n                // setXBTCAUSD(_XBTCAUSD);\n                // setRENBTCAUSD(_RENBTCAUSD);\n                // setPOLKABTCAUSD(_POLKABTCAUSD);\n                // setPLMAUSD(_PLMAUSD);\n                // setHDTAUSD(_HDTAUSD);\n                // setSDNAUSD(_SDNAUSD);\n                // setBCGAUSD(_BCGAUSD);\n\n\n                // const karKusdPool = await api.query.dex.liquidityPool([ {Token: \"KAR\"},{Token: \"KUSD\"},]);\n                // console.log(`AMTC6 karKusdPool[1].toString(): ${karKusdPool[1].toString()} karKusdPool[0].toString(): ${karKusdPool[0].toString()} karKusdPool: `,karKusdPool);\n                // const karKusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"KAR\"},{Token: \"KUSD\"},]);\n                // console.log(`AMTC6 karKusdPool_status.toString() : `,karKusdPool_status.toString());\n\n                const acaAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"ACA\"},{Token: \"AUSD\"},]);\n                const dotAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"DOT\"},{Token: \"AUSD\"},]);\n                const ldotAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"LDOT\"},{Token: \"AUSD\"},]);\n                const xbtcAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"XBTC\"},{Token: \"AUSD\"},]);\n                const renbtcAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"RENBTC\"},{Token: \"AUSD\"},]);\n                const polkabtcAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"POLKABTC\"},{Token: \"AUSD\"},]);\n                const plmAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"PLM\"},{Token: \"AUSD\"},]);\n                const hdtAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"HDT\"},{Token: \"AUSD\"},]);\n                const sdnAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"SDN\"},{Token: \"AUSD\"},]);\n                const bcgAusdPool_status = await api.query.dex.tradingPairStatuses([ {Token: \"BCG\"},{Token: \"AUSD\"},]);\n\n                // setStatusACAAUSD(acaAusdPool_status.toString());\n                // setStatusDOTAUSD(dotAusdPool_status.toString());\n                // setStatusLDOTAUSD(ldotAusdPool_status.toString());\n                // setStatusXBTCAUSD(xbtcAusdPool_status.toString());\n                // setStatusRENBTCAUSD(renbtcAusdPool_status.toString());\n                // setStatusPOLKABTCAUSD(polkabtcAusdPool_status.toString());\n                // setStatusPLMAUSD(plmAusdPool_status.toString());\n                // setStatusHDTAUSD(hdtAusdPool_status.toString());\n                // setStatusSDNAUSD(sdnAusdPool_status.toString());\n                // setStatusBCGAUSD(bcgAusdPool_status.toString());\n\n\n                //TODO Provision Pool In the example it does not say what is \"t98jaBc3cdvZuQpBoiXpJW1uGsFhf9Gq6YDW4UmMtxdxZVL\"\n                // const acaAusdPool_status = await api.query.dex.provisioningPool([ {Token: \"ACA\"},{Token: \"AUSD\"},]);\n\n                return oracle_API_Prices;\n            }\n    }\n        // get_API_OraclePrices();\n    // }, [api, decimals]);\n    //#endregion\n\n    //#region SWAPwithExactSupply\n    // const swapWithExactSupply = async () => {\n    const swapWithExactSupply = async (input_Supply_ACA) => {\n\n        if (api && input_Supply_ACA && extension && selectedAddress && decimals) {\n        //   setSwapWithExactSupply_IsSubmiting(true);\n          const supplyAmount = parseInt(input_Supply_ACA * 10 ** decimals[\"ACA\"])\n\n          try {\n                const path = [{TOKEN: \"ACA\"},{TOKEN: \"AUSD\"}];\n                const minTargetAmount = \"0x0\";\n\n                //prepare extrinsic\n                const extrinsic = api.tx.dex.swapWithExactSupply(path, supplyAmount, minTargetAmount);\n    \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                //This is for Vaults\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        //subscribe Front End to status updates\n                        console.log(`swapWithExactSupply extrinsic.send result.status: `,result.status);\n                        console.log(`swapWithExactSupply extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`swapWithExactSupply extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                         \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_Supply_ACA(\"\");\n          } catch (error) {\n                let erMsg=\"something has gone wrong\";\n                if (error.message) { \n                    alert(`Failed, ${error.message}`); \n                    erMsg = error.message;\n                } \n                else { alert(`Failed`); }\n                \n          } finally { \n            //   setSwapWithExactSupply_IsSubmiting(false); \n          }\n        }\n    }\n    // }, [api, input_Supply_ACA, extension, selectedAddress, decimals]);\n    //#endregion\n\n    //#region SWAPwithExactTarget\n    const swapWithExactTarget = async (input_target_AUSD, input_maxSupply_ACA) => {\n        if (api && input_target_AUSD && input_maxSupply_ACA && extension && selectedAddress && decimals) {\n        //   setSwapWithExactTarget_IsSubmiting(true);\n          \n          try {\n                const path = [{TOKEN: \"ACA\"},{TOKEN: \"AUSD\"}];\n              \n                // const amountOfAUSDToConvert = 100;\n                // const targetAmount = parseInt(amountOfAUSDToConvert * 10 ** decimals[\"AUSD\"]);\n                const targetAmount = parseInt(input_target_AUSD * 10 ** decimals[\"AUSD\"]);\n\n                // we are willing to spend maximum 2 ACA to get 1 AUSD\n                // const maxSupplyAmount = 2 * 10 ** decimals[\"ACA\"];\n                const maxSupplyAmount = parseInt(input_maxSupply_ACA * 10 ** decimals[\"ACA\"]);\n\n                //prepare extrinsic\n                const extrinsic = api.tx.dex.swapWithExactTarget(path, targetAmount, maxSupplyAmount);\n    \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`swapWithExactTarget extrinsic.send result.status: `,result.status);\n                        console.log(`swapWithExactTarget extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`swapWithExactTarget extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                        \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_target_AUSD(\"\");  setInput_maxSupply_ACA(\"\");\n          } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n          } finally { /*setSwapWithExactTarget_IsSubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_target_AUSD, input_maxSupply_ACA, extension, selectedAddress, decimals]);\n    //#endregion  \n\n    //#region ADD LIQUIDITY\n    const addLiquidity = async (input_liq_ACA, input_liq_AUSD) => {\n        if (api && input_liq_ACA && input_liq_AUSD && extension && selectedAddress && decimals) {\n            // setIsAddLiquiditySubmiting(true);\n            // console.log(`running addLiquidity`);\n\n            try {\n                const currency_id_a = { TOKEN: \"ACA\"};\n                const currency_id_b = { TOKEN: \"AUSD\"};\n\n                // const max_amount_a = 15 * 10 ** decimals[\"ACA\"];\n                // const max_amount_b = 70 * 10 ** decimals[\"AUSD\"];\n                const max_amount_a = parseInt(input_liq_ACA * 10 ** decimals[\"ACA\"]);\n                const max_amount_b = parseInt(input_liq_AUSD * 10 ** decimals[\"AUSD\"]);\n                 \n\n                // slippage is 100% for receiving shares\n                const min_share_increment = 0;\n                const stake_increment_share = true;\n\n                //prepare extrinsic\n                const extrinsic = api.tx.dex.addLiquidity(\n                    currency_id_a,\n                    currency_id_b,\n                    max_amount_a,\n                    max_amount_b,\n                    min_share_increment,\n                );\n                // stake_increment_share\n\n    \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`addLiquidity extrinsic.send result.status: `,result.status);\n                        console.log(`addLiquidity extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`addLiquidity extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                        \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_Liq_ACA(\"\");  setInput_Liq_AUSD(\"\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsAddLiquiditySubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_liq_ACA, input_liq_AUSD, extension, selectedAddress, decimals]);\n    //#endregion\n\n    //#region REMOVE LIQUIDITY\n    const removeLiquidity = async (input_removeliquidity_Shares) => {\n        if (api && input_removeliquidity_Shares && extension && selectedAddress && decimals) {\n            // setIsRemoveLiquiditySubmiting(true);\n            // console.log(`running removeiquidity`);\n\n            try {\n                const currency_id_a = { TOKEN: \"ACA\"};\n                const currency_id_b = { TOKEN: \"AUSD\"};\n                \n                // slippage is 100%, we want to receive anything that liquidity pool ratio will offer\n                const min_withdrawn_a = 0;\n                const min_withdrawn_b = 0;\n                const by_unstake = false;\n                \n                // const remove_share = 1;\n                const remove_share = parseInt(input_removeliquidity_Shares *10 * 10 ** decimals[\"ACA\"]);\n\n                //prepare extrinsic\n                const extrinsic = api.tx.dex.removeLiquidity(\n                    currency_id_a,\n                    currency_id_b,\n                    remove_share,\n                    min_withdrawn_a,\n                );\n                // min_withdrawn_b,\n                // by_unstake\n\n    \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`removeLiquidity extrinsic.send result.status: `,result.status);\n                        console.log(`removeLiquidity extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`removeLiquidity extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                        \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_RemoveLiquidityShares(\"\");   \n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsRemoveLiquiditySubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_removeliquidity_Shares, extension, selectedAddress, decimals]);\n    //#endregion\n    \n    //#region transfer_Balance transfer native token ACA\n    const transfer_Balance = async (input_balanceToTransfer,destinationAddress) => {\n\n        if (api && input_balanceToTransfer && extension && selectedAddress && destinationAddress && decimals) {\n            // setIsBalanceToTransferSubmiting(true);\n\n            try {\n                // transfer 10 ACA to `dest`\n                // const dest = '5CfNjYygrfiaAfGWaGRVgGdkTuDfykZsgSXfuxTkekqq7JBh';\n            \t// const amount = 10 * (10 ** decimals['ACA']);\n                const amount = parseInt(input_balanceToTransfer * 10 ** decimals[\"ACA\"]);\n\n                //prepare extrinsic\n                const extrinsic = api.tx.balances.transfer(destinationAddress, amount);  \n\n    \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`transfer_Balance extrinsic.send result.status: `,result.status);\n                        console.log(`transfer_Balance extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`transfer_Balance extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                        \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_BalanceToTransfer(\"\");  setDestinationAddress(\"\"); \n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsBalanceToTransferSubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_balanceToTransfer, extension, selectedAddress, destinationAddress, decimals]);\n    //#endregion\n\n    //#region transfer_Balance transfer native token and nonative tokens\n    const transfer_Currency = async (input_currencyToTransfer, input_transferToken, currencyDestinationAddress) => {\n        if (api && input_currencyToTransfer && input_transferToken && extension && selectedAddress && currencyDestinationAddress && decimals) {\n            // setIsCurrencyToTransferSubmiting(true);\n            console.log(`running transfer_Currency`);\n\n            try {\n                const amount = parseInt(input_currencyToTransfer * 10 ** decimals[`${input_transferToken}`]);\n                const token = { TOKEN: `${input_transferToken}` }\n\n                //prepare extrinsic\n                const extrinsic = api.tx.currencies.transfer(currencyDestinationAddress, token, amount);  \n\n\n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n                // //*** FYI the above can be expanded as follows ***\n                // const unSub = await extrinsic.signAndSend(signer, async (result) => {\n                //     if (result.isInBlock) {\n                //         console.log(`transfer_Currency result.isInBlock result: `,result);\n                //     }\n                //     else if (result.isFinalized) {\n                //         console.log(`transfer_Currency result.isFinalized result: `,result);\n                //     }\n                // });\n                // console.log(\"unSub\", unSub);  //in this case unSub is the unsubscribe function for the event listener. we could write just await ...\n                //can also do somthing similar as below to catch errors and ExtrinsicSuccess or ExtrinsicFailed\n\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n\n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`transfer_Currency extrinsic.send result.status: `,result.status);\n                        console.log(`transfer_Currency extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`transfer_Currency extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                         \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n\n                alert(\"Success\");\n                // setInput_CurrencyToTransfer(\"\");  setCurrencyDestinationAddress(\"\"); setInput_transferToken(\"\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsCurrencyToTransferSubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_currencyToTransfer, input_transferToken, extension, selectedAddress, currencyDestinationAddress, decimals]);\n    //#endregion\n\n\n    \n    //NOTE THE BELOW EVENTS IS NOT JUST FOR MY TRANSFER. ALL PARACHAIN TRANSFERS ARE RECORDED HERE\n    //UNCOMMENT IF/WHEN YOU WANT THIS AND CALL unsubscribeFromTransferEvents() to unsubscribe\n    //#region Subscribing to Trasfer Events. For all currencies currencies.Transfered event is triggered. For ACA or KAR balances.Transfer and currencyies.Transfered are emitted if we use currecies module. If we use balances module only balances.Transfer  is emitted\n    // let unsubscribeFromTransferEvents;\n    // useEffect(async () => {\n    /*    \n    const startParachainEvents = async () => {        \n        \n        if (api && decimals)\n        {\n            // // NOTE: if transfer native token using currencies section, there will be two events: currencies.Transferred and balances.Transfer.\n            // unsubscribeFromTransferEvents = await api.query.system.events((events) => {\n            //     events.forEach((event) => {\n            //         const { section, method, hash } = event.event;\n\n            //         // subscribe transfer through currencies section\n            //         if (section === 'currencies' && method === 'Transferred') {\n            //             // [ASSET, ORIGIN, TARGET, AMOUNT]\n            //             const data = event.event.data;\n            //             // console.log('Transfer Currencies: DATA: ',data);\n\n            //             const token = data[0] ; //as CurrencyId;\n            //             const origin = data[1] ; //as AccountId;\n            //             const target = data[2] ; //as AccountId;\n            //             const amount = data[3] ; //as Balance;\n            //             // console.log(`Transfer Currencies Event token: ${token} origin: ${origin} target: ${target} amount: ${amount} token: `,token);\n\n            //             const decimal = token.isToken ? decimals[`${token.asToken.toString()}`]  : 12;\n            //               //TODO                  // token.isDexShare ? decimals[`${token.asDexShare[0].asToken.toString()}`] : 12;\n\n            //             const tokenObj = JSON.parse(token.toString());    // token is {\"dexShare\":[\"AUSD\",\"XBTC\"]} {\"token\":\"AUSD\"}\n            //             const tokenSymbol = token.isDexShare ? `${tokenObj.dexShare[0]}/${tokenObj.dexShare[1]}` : `${tokenObj.token}`;\n            //             console.log(`HASH: ${hash.toString()} Transfer Currencies ${Number(amount.toString()) / (10 ** decimal)} ${token.toString()} *** tokenSymbol: ${tokenSymbol} ***   from ${origin.toHuman()} to ${target.toHuman()} tokenObj: `,tokenObj);\n            //         }\n\n            //         // subscribe transfer through balances section\n            //         if (section === 'balances' && method === 'Transfer') {\n            //             // [ORIGIN, TARGET, AMOUNT]\n            //             const data = event.event.data;\n            //             // console.log('Transfer Balances: DATA: ',data);\n            //             const origin = data[0] ; //as AccountId;\n            //             const target = data[1] ; //as AccountId;\n            //             const amount = data[2] ; //as Balance;\n            //             const decimal = decimals[\"ACA\"];   // pls. ensure the native token\n            //             console.log(`HASH: ${hash.toString()} Transfer Balances ${Number(amount.toString()) / (10 ** decimal)} ACA from ${origin.toHuman()} to ${target.toHuman()}`);\n            //         }\n            //     })\n            // });\n\n            // //return unsubscribe;   if you want to unsubscribe from events\n        }\n    }\n    */\n    // }, [api, decimals]);   \n    //#endregion\n\n    \n    //LOANS   NOTE: FOR DEBIT IT SHOWS ACA AS UNITS INSTEAD OF AUSD \n    //#region getAccountLoans\n    // useEffect(async () => {\n    const getAccountLoans = async () => { \n        console.log(`RETRIEVING ACCOUNT LOANS`);\n        if (api && decimals && selectedAddress) {\n\n            const result_DOT = await api.query.loans.positions({ TOKEN: \"DOT\" }, `${selectedAddress}`);\n            // console.log(`LOAN Hash:${result_DOT.hash.toString()}  COLLATERAL:${(+result_DOT.collateral.toString() / 10**decimals[\"DOT\"]).toFixed(5)} DOT  DEBIT:${(+result_DOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)} AUSD  FOR ACCOUNT ${selectedAddress}`);\n            const result_LDOT = await api.query.loans.positions({ TOKEN: \"LDOT\" }, `${selectedAddress}`);\n            // console.log(`LOAN Hash:${result_LDOT.hash.toString()} COLLATERAL:${+result_LDOT.collateral.toString() / 10**decimals[\"LDOT\"]} LDOT  DEBIT:${+result_LDOT.debit.toString() / 10**decimals[\"AUSD\"]} AUSD  FOR ACCOUNT ${selectedAddress}`);\n            const result_XBTC = await api.query.loans.positions({ TOKEN: \"XBTC\" }, `${selectedAddress}`);\n            // console.log(`LOAN Hash:${result_XBTC.hash.toString()}  COLLATERAL:${(+result_XBTC.collateral.toString() / 10**decimals[\"XBTC\"]).toFixed(5)} XBTC  DEBIT:${(+result_XBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)} AUSD  FOR ACCOUNT ${selectedAddress}`);\n            // console.log(`RETRIEVING LOANS ON XBTC decimals[\"XBTC\"]: ${decimals[\"XBTC\"]} FOR ACCOUNT ${selectedAddress}`,result.toHuman());\n            const result_RENBTC = await api.query.loans.positions({ TOKEN: \"RENBTC\" }, `${selectedAddress}`);\n            // console.log(`LOAN Hash:${result_RENBTC.hash.toString()}  COLLATERAL:${+result_RENBTC.collateral.toString() / 10**decimals[\"RENBTC\"]} RENBTC  DEBIT:${+result_RENBTC.debit.toString() / 10**decimals[\"AUSD\"]} AUSD  FOR ACCOUNT ${selectedAddress}`);\n            const result_POLKABTC = await api.query.loans.positions({ TOKEN: \"POLKABTC\" }, `${selectedAddress}`);\n            // console.log(`LOAN Hash:${result_POLKABTC.hash.toString()} COLLATERAL:${+result_POLKABTC.collateral.toString() / 10**decimals[\"POLKABTC\"]} POLKABTC  DEBIT:${+result_POLKABTC.debit.toString() / 10**decimals[\"AUSD\"]} AUSD  FOR ACCOUNT ${selectedAddress}`);\n\n                    // setLoans_DOT({hash:`${result_DOT.hash.toString()}`, collateral: `${(+result_DOT.collateral.toString() / 10**decimals[\"DOT\"]).toFixed(5)}`, debit: `${(+result_DOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}` });\n                    // setLoans_LDOT({hash:`${result_LDOT.hash.toString()}`, collateral: `${(+result_LDOT.collateral.toString() / 10**decimals[\"LDOT\"]).toFixed(5)}`, debit: `${(+result_LDOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}` });\n                    // setLoans_XBTC({hash:`${result_XBTC.hash.toString()}`, collateral: `${(+result_XBTC.collateral.toString() / 10**decimals[\"XBTC\"]).toFixed(5)}`, debit: `${(+result_XBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}` });\n                    // setLoans_RENBTC({hash:`${result_RENBTC.hash.toString()}`, collateral: `${(+result_RENBTC.collateral.toString() / 10**decimals[\"RENBTC\"]).toFixed(5)}`, debit: `${(+result_RENBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}` });\n                    // setLoans_POLKABTC({hash:`${result_POLKABTC.hash.toString()}`, collateral: `${(+result_POLKABTC.collateral.toString() / 10**decimals[\"POLKABTC\"]).toFixed(5)}`, debit: `${(+result_POLKABTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}` });\n\n            accountLoans = {\n                            DOT:    {\n                                        hash      : `${result_DOT.hash.toString()}`,\n                                        collateral: `${(+result_DOT.collateral.toString() / 10**decimals[\"DOT\"]).toFixed(5)}`,\n                                        debit     : `${(+result_DOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                    },\n                            LDOT:    {\n                                        hash      : `${result_LDOT.hash.toString()}`,\n                                        collateral: `${(+result_LDOT.collateral.toString() / 10**decimals[\"LDOT\"]).toFixed(5)}`,\n                                        debit     : `${(+result_LDOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                    },\n                            XBTC:   {\n                                        hash      : `${result_XBTC.hash.toString()}`,\n                                        collateral: `${(+result_XBTC.collateral.toString() / 10**decimals[\"XBTC\"]).toFixed(5)}`,\n                                        debit     : `${(+result_XBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                    },\n                            RENBTC: {\n                                        hash      : `${result_RENBTC.hash.toString()}`,\n                                        collateral: `${(+result_RENBTC.collateral.toString() / 10**decimals[\"RENBTC\"]).toFixed(5)}`,\n                                        debit     : `${(+result_RENBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                    },\n                            POLKABTC:    {\n                                            hash      : `${result_POLKABTC.hash.toString()}`,\n                                            collateral: `${(+result_POLKABTC.collateral.toString() / 10**decimals[\"POLKABTC\"]).toFixed(5)}`,\n                                            debit     : `${(+result_POLKABTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                        },\n                            };\n            \n            return accountLoans;\n        }\n    }\n    // }, [api, selectedAddress, decimals]);\n    //#endregion\n     \n    //#region getLoansOverview  Requires blockHeader\n    const getLoansOverview = async (blockHeader) => { \n        console.log(`RETRIEVING LOANS Overview`);\n        if (api && decimals && selectedAddress && blockHeader) {\n            const result_Tot_DOT = await api.query.loans.totalPositions({ TOKEN: \"DOT\" });\n            const result_Tot_LDOT = await api.query.loans.totalPositions({ TOKEN: \"LDOT\" });\n            const result_Tot_XBTC = await api.query.loans.totalPositions({ TOKEN: \"XBTC\" });\n            const result_Tot_RENBTC = await api.query.loans.totalPositions({ TOKEN: \"RENBTC\" });\n            const result_Tot_POLKABTC = await api.query.loans.totalPositions({ TOKEN: \"POLKABTC\" });\n\n            const blockHash = blockHeader.hash;\n            const debitExchangeRate_DOT = await api.query.cdpEngine.debitExchangeRate.at(blockHash, {TOKEN: \"DOT\"});\n            const debitExchangeRate_LDOT = await api.query.cdpEngine.debitExchangeRate.at(blockHash, {TOKEN: \"LDOT\"});\n            const debitExchangeRate_XBTC = await api.query.cdpEngine.debitExchangeRate.at(blockHash, {TOKEN: \"XBTC\"});\n            const debitExchangeRate_RENBTC = await api.query.cdpEngine.debitExchangeRate.at(blockHash, {TOKEN: \"RENBTC\"});\n            const debitExchangeRate_POLKABTC = await api.query.cdpEngine.debitExchangeRate.at(blockHash, {TOKEN: \"POLKABTC\"});\n\n            const resObj_ColParam_DOT = await api.query.cdpEngine.collateralParams({ TOKEN: \"DOT\" });\n            const resObj_ColParam_LDOT = await api.query.cdpEngine.collateralParams({ TOKEN: \"LDOT\" });\n            const resObj_ColParam_XBTC = await api.query.cdpEngine.collateralParams({ TOKEN: \"XBTC\" });\n            const resObj_ColParam_RENBTC = await api.query.cdpEngine.collateralParams({ TOKEN: \"RENBTC\" });\n            const resObj_ColParam_POLKABTC = await api.query.cdpEngine.collateralParams({ TOKEN: \"POLKABTC\" });\n            \n            loansOverview = {\n                                DOT:    {\n\n                                            collateral: `${(+result_Tot_DOT.collateral.toString() / 10**decimals[\"ACA\"]).toFixed(5)}`,\n                                            debit     : `${(+result_Tot_DOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                            debitExchangeRate : `${(+debitExchangeRate_DOT.toString() / 10**17).toFixed(8)}`,\n                                            maximumTotalDebitValue: `${resObj_ColParam_DOT.maximumTotalDebitValue.toHuman() }`,\n                                            stabilityFee : `${(resObj_ColParam_DOT.stabilityFee  / (10**9)).toFixed(2)}`,\n                                            liquidationRatio: `${resObj_ColParam_DOT.liquidationRatio  / (10**decimals[\"ACA\"]  * 1000)  }`,\n                                            liquidationPenalty: `${resObj_ColParam_DOT.liquidationPenalty  / (10**decimals[\"ACA\"]  * 1000) }`,\n                                            requiredCollateralRatio : `${resObj_ColParam_DOT.requiredCollateralRatio  / (10**decimals[\"ACA\"]  * 1000) }`\n                                        },\n                                LDOT:   {\n\n                                            collateral: `${(+result_Tot_LDOT.collateral.toString() / 10**decimals[\"ACA\"]).toFixed(5)}`,\n                                            debit     : `${(+result_Tot_LDOT.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                            debitExchangeRate : `${(+debitExchangeRate_LDOT.toString() / 10**17).toFixed(8)}`,\n                                            maximumTotalDebitValue: `${resObj_ColParam_LDOT.maximumTotalDebitValue.toHuman() }`,\n                                            stabilityFee : `${(resObj_ColParam_LDOT.stabilityFee  / (10**9)).toFixed(2)}`,\n                                            liquidationRatio: `${resObj_ColParam_LDOT.liquidationRatio  / (10**decimals[\"ACA\"]  * 1000)  }`,\n                                            liquidationPenalty: `${resObj_ColParam_LDOT.liquidationPenalty  / (10**decimals[\"ACA\"]  * 1000) }`,\n                                            requiredCollateralRatio : `${resObj_ColParam_LDOT.requiredCollateralRatio  / (10**decimals[\"ACA\"]  * 1000) }`\n                                        },      \n                                XBTC:   {\n\n                                            collateral: `${(+result_Tot_XBTC.collateral.toString() / 10**decimals[\"ACA\"]).toFixed(5)}`,\n                                            debit     : `${(+result_Tot_XBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                            debitExchangeRate : `${(+debitExchangeRate_XBTC.toString() / 10**17).toFixed(8)}`,\n                                            maximumTotalDebitValue: `${resObj_ColParam_XBTC.maximumTotalDebitValue.toHuman() }`,\n                                            stabilityFee : `${(resObj_ColParam_XBTC.stabilityFee  / (10**9)).toFixed(2)}`,\n                                            liquidationRatio: `${resObj_ColParam_XBTC.liquidationRatio  / (10**decimals[\"ACA\"]  * 1000)  }`,\n                                            liquidationPenalty: `${resObj_ColParam_XBTC.liquidationPenalty  / (10**decimals[\"ACA\"]  * 1000) }`,\n                                            requiredCollateralRatio : `${resObj_ColParam_XBTC.requiredCollateralRatio  / (10**decimals[\"ACA\"]  * 1000) }`\n                                        },      \n                                RENBTC: {\n\n                                            collateral: `${(+result_Tot_RENBTC.collateral.toString() / 10**decimals[\"ACA\"]).toFixed(5)}`,\n                                            debit     : `${(+result_Tot_RENBTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                            debitExchangeRate : `${(+debitExchangeRate_RENBTC.toString() / 10**17).toFixed(8)}`,\n                                            maximumTotalDebitValue: `${resObj_ColParam_RENBTC.maximumTotalDebitValue.toHuman() }`,\n                                            stabilityFee : `${(resObj_ColParam_RENBTC.stabilityFee  / (10**9)).toFixed(2)}`,\n                                            liquidationRatio: `${resObj_ColParam_RENBTC.liquidationRatio  / (10**decimals[\"ACA\"]  * 1000)  }`,\n                                            liquidationPenalty: `${resObj_ColParam_RENBTC.liquidationPenalty  / (10**decimals[\"ACA\"]  * 1000) }`,\n                                            requiredCollateralRatio : `${resObj_ColParam_RENBTC.requiredCollateralRatio  / (10**decimals[\"ACA\"]  * 1000) }`\n                                        },      \n                                POLKABTC:   {\n\n                                                collateral: `${(+result_Tot_POLKABTC.collateral.toString() / 10**decimals[\"ACA\"]).toFixed(5)}`,\n                                                debit     : `${(+result_Tot_POLKABTC.debit.toString() / 10**decimals[\"ACA\"]).toFixed(2)}`,\n                                                debitExchangeRate : `${(+debitExchangeRate_POLKABTC.toString() / 10**17).toFixed(8)}`,\n                                                maximumTotalDebitValue: `${resObj_ColParam_POLKABTC.maximumTotalDebitValue.toHuman() }`,\n                                                stabilityFee : `${(resObj_ColParam_POLKABTC.stabilityFee  / (10**9)).toFixed(2)}`,\n                                                liquidationRatio: `${resObj_ColParam_POLKABTC.liquidationRatio  / (10**decimals[\"ACA\"]  * 1000)  }`,\n                                                liquidationPenalty: `${resObj_ColParam_POLKABTC.liquidationPenalty  / (10**decimals[\"ACA\"]  * 1000) }`,\n                                                requiredCollateralRatio : `${resObj_ColParam_POLKABTC.requiredCollateralRatio  / (10**decimals[\"ACA\"]  * 1000) }`\n                                            }\n\n                            }\n            return loansOverview;\n        }\n    }\n    //#endregion\n\n\n    //#region Authorize_Loan  This works but I am not sure this is anything other than an Approval/Authorization. \n    //Authorize `to` to manipulate the loan under `currency_id`\n    \t/// - `currency_id`: collateral currency id.\n\t\t/// - `to`: authorizee account\n    // const authorize_LoanForTransferTo3rdParty = useCallback(async () => {\n    const authorize_LoanForTransferTo3rdParty = async (input_CollateralTokenSumbol, autorizeeAddress, ) => {\n\n        if (api && input_CollateralTokenSumbol && autorizeeAddress && extension && selectedAddress && decimals) {\n            // setIsCollateralTokenSubmiting(true);\n            console.log(`running authorize_Loan`);\n\n            try {\n                // const accountId = '5FNZdmuPipRa8fz5ab12Y8P2dKx9zFbMgNyDwoWQMLynbPg8';  //Hellen\n\n                //prepare extrinsic\n                const extrinsic = api.tx.honzon.authorize({ TOKEN: input_CollateralTokenSumbol }, autorizeeAddress);\n                \n                \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n                \n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`authorize_authorize_LoanForTransferTo3rdParty CollateralForLoan extrinsic.send result.status: `,result.status);\n                        console.log(`authorize_LoanForTransferTo3rdParty extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`authorize_LoanForTransferTo3rdParty extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                        \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_CollateralTokenSumbol(\"\");    setAuthorizeeAddress(\"\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsCollateralTokenSubmiting(false); */}\n        }\n    }\n    // }, [api, input_CollateralTokenSumbol, autorizeeAddress, extension, selectedAddress, decimals]);\n    //#endregion\n\n    //#region UnAuthorize_Loan    \n    //UnAuthorize `to` to manipulate the loan under `currency_id`\n    \t/// - `currency_id`: collateral currency id.\n\t\t/// - `to`: unauthorizee account\n    // const unauthorize_LoanForTransferTo3rdParty = useCallback(async () => {\n    const unauthorize_LoanForTransferTo3rdParty = async (input_CollateralTokenSumbol, autorizeeAddress) => {\n\n            if (api && input_CollateralTokenSumbol && autorizeeAddress && extension && selectedAddress && decimals) {\n                // setIsUnauthorizeSubmiting(true);\n                console.log(`running unauthorize_Loan`);\n    \n                try {\n                    //prepare extrinsic\n                    const extrinsic = api.tx.honzon.unauthorize({ TOKEN: input_CollateralTokenSumbol }, autorizeeAddress);\n                    \n                    \n                    //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                    // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                    // const hash = await extrinsic.signAndSend(signer);\n                    // console.log(\"hash\", hash.toHuman());\n    \n    \n                    //#region *** 2nd way sign and then send ***\n                    //sign extrinsic\n                    await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                    \n                    //send extrinsic\n                    await new Promise((resolve, reject) => {\n                        extrinsic.send((result) => {\n    \n                            console.log(`unauthorize_LoanForTransferTo3rdParty extrinsic.send result.status: `,result.status);\n                            console.log(`unauthorize_LoanForTransferTo3rdParty extrinsic.send result: `,result);\n    \n                            if (result.status.isFinalized || result.status.isInBlock) {\n                                result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                    .forEach((event) => {\n    \n                                        console.log(`unauthorize_LoanForTransferTo3rdParty extrinsic.send event: `,event);\n    \n                                        const { event: { data, method },} = event;\n                \n                                        if (method === \"ExtrinsicFailed\") {\n                                            const [dispatchError] = data;\n                                            let message = dispatchError.type;\n                \n                                            if (dispatchError.isModule) {\n                                                try {\n                                                    const mod = dispatchError.asModule;\n                                                    const error = api.registry.findMetaError(\n                                                        new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                    );\n                                                    message = `${error.section}.${error.name}`;\n                                                } catch (error) {\n                                                    // swallow\n                                                }\n                                            }\n                \n                                            reject({ message, result });\n                                        } else if (method === \"ExtrinsicSuccess\") {\n                                            resolve({ result });\n                                        }\n                                    });\n                             \n                            } else if (result.isError) {\n                                reject({ result });\n                            }\n                        });\n                    });\n                    //#endregion\n        \n                    alert(\"Success\");\n                    // setInput_CollateralTokenSumbol(\"\");   setAuthorizeeAddress(\"\");\n                } catch (error) {\n                    if (error.message) { alert(`Failed, ${error.message}`); } \n                    else { alert(`Failed`); }\n                } finally { /*setIsUnauthorizeSubmiting(false);*/ }\n            }\n    }     \n    // }, [api, input_CollateralTokenSumbol, autorizeeAddress, extension, selectedAddress, decimals]);\n    //#endregion\n\n    //#region unauthorizeALL_Loans    \n    //UnAuthorizeALL `to` to manipulate the loan under `currency_id`\n    \t/// - `currency_id`: collateral currency id.\n\t\t/// - `to`: unauthorizee account\n    // const unauthorizeALL_Loans = useCallback(async () => {\n    const unauthorizeALL_Loans = async () => {\n\n        if (api && extension && selectedAddress) {\n            // setIsUnauthorizeALLSubmiting(true);\n            console.log(`running unauthorizeALL_Loans`);\n\n            try {\n                //prepare extrinsic\n                const extrinsic = api.tx.honzon.unauthorizeAll();\n                \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`unauthorizeALL_Loans extrinsic.send result.status: `,result.status);\n                        console.log(`unauthorizeALL_Loans extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`unauthorizeALL_Loans extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                         \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsUnauthorizeALLSubmiting(false); */}\n        }\n    }\n    // }, [api, extension, selectedAddress ]);\n    //#endregion\n\n\n    //#region TRANSFER LOAN FROM  Transfer the whole CDP of `from` under `currency_id` to caller's CDP \n    //under the same `currency_id`, caller must have the authorization of `from` for the specific collateral type\n    \t/// - `currency_id`: collateral currency id.\n\t\t/// - `from`: authorizer account\n    // const tranferLoanFrom = useCallback(async () => {\n    const tranferLoanFrom = async (input_LoanTransfer_CollateralTokenSymbol, input_LoanTransfer_FromAccount) => {\n\n        if (api && input_LoanTransfer_CollateralTokenSymbol && input_LoanTransfer_FromAccount && extension && selectedAddress && decimals) {\n            // setIsTransferLoanSubmiting(true);\n            console.log(`running tranferLoanFrom`);\n\n            try {\n                //prepare extrinsic\n                const extrinsic = api.tx.honzon.transferLoanFrom( { TOKEN: input_LoanTransfer_CollateralTokenSymbol }, input_LoanTransfer_FromAccount );\n                \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"hash\", hash.toHuman());\n                \n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`tranferLoanFrom extrinsic.send result.status: `,result.status);\n                        console.log(`tranferLoanFrom extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`tranferLoanFrom extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                         \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_LoanTransfer_CollateralTokenSymbol(\"\");  setInput_LoanTransfer_FromAccount(\"\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsTransferLoanSubmiting(false);*/ }\n        }\n    }\n    // }, [api, input_LoanTransfer_CollateralTokenSymbol, input_LoanTransfer_FromAccount, extension, selectedAddress, decimals]);\n    //#endregion\n\n\n    //There is also check_authorization, unauthorize, unauthorize_all, transfer_loan_from, close_loan_has_debit_by_dex\n\n    //#region Adjust_Loan    \n    /// Adjust the loans of `currency_id` by specific /// `collateral_adjustment` and `debit_adjustment`\n    // const adjustLoan = useCallback(async () => {\n    const adjustLoan = async (input_LoanAdjust_CollateralTokenSymbol, input_adjust_collateral_depositWithdraw, input_adjust_borrowRepay_AUSD) => {\n\n        if (api && input_LoanAdjust_CollateralTokenSymbol && input_adjust_collateral_depositWithdraw && input_adjust_borrowRepay_AUSD && extension && selectedAddress && decimals) {\n            // setIsAdjustLoanSubmiting(true);\n            // console.log(`running adjustLoan api.tx.honzon: `);\n            // console.dir(api.tx.honzon);\n\n            try {\n                const symbol = input_LoanAdjust_CollateralTokenSymbol;\n\n                const currency_id = { TOKEN: symbol };    //collateral currency id.\n                // const collateral_adjustment = `${ 1 * 10**decimals[\"DOT\"]}`;  //signed amount, positive means to deposit collateral currency into CDP, negative means withdraw collateral currency from CDP\n                const collateral_adjustment = `${+input_adjust_collateral_depositWithdraw * 10**decimals[symbol]}`;  //signed amount, positive means to deposit collateral currency into CDP, negative means withdraw collateral currency from CDP\n\n                // const debit_adjustment = `${ 10 * 10**decimals[\"ACA\"]}`; // signed amount, positive means to issue some amount of stablecoin to caller according to the debit adjustment, negative means caller will payback some  amount of stablecoin to CDP according to to the debit adjustment.\n                const debit_adjustment = `${+input_adjust_borrowRepay_AUSD * 10**decimals[\"ACA\"]}`; // signed amount, positive means to issue some amount of stablecoin to caller according to the debit adjustment, negative means caller will payback some  amount of stablecoin to CDP according to to the debit adjustment.\n                \n                // const amount = parseInt(input_balanceToTransfer * 10 ** decimals[\"ACA\"]);\n                \n                //here for an existing loan of 2 DOT collateral we deposit 1 DOT and ask 10 more AUSD as loan\n                //prepare extrinsic\n                const extrinsic = api.tx.honzon.adjustLoan(\n                    currency_id,\n                    collateral_adjustment,\n                    debit_adjustment\n                );\n\n                \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"ADJUST LOAN hash.toHuman(): \", hash.toHuman());\n                \n\n\n                //#region *** 2nd way sign and then send ***\n                //sign extrinsic\n                await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                //send extrinsic\n                await new Promise((resolve, reject) => {\n                    extrinsic.send((result) => {\n\n                        console.log(`adjust Existing Loan extrinsic.send result.status: `,result.status);\n                        console.log(`adjust Existing Loan extrinsic.send result: `,result);\n\n                        if (result.status.isFinalized || result.status.isInBlock) {\n                            result.events.filter( ( { event: { section } } ) => section === \"system\")\n                                .forEach((event) => {\n\n                                    console.log(`adjust Existing Loan extrinsic.send event: `,event);\n\n                                    const { event: { data, method },} = event;\n            \n                                    if (method === \"ExtrinsicFailed\") {\n                                        const [dispatchError] = data;\n                                        let message = dispatchError.type;\n            \n                                        if (dispatchError.isModule) {\n                                            try {\n                                                const mod = dispatchError.asModule;\n                                                const error = api.registry.findMetaError(\n                                                    new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                                                );\n                                                message = `${error.section}.${error.name}`;\n                                            } catch (error) {\n                                                // swallow\n                                            }\n                                        }\n            \n                                        reject({ message, result });\n                                    } else if (method === \"ExtrinsicSuccess\") {\n                                        resolve({ result });\n                                    }\n                                });\n                         \n                        } else if (result.isError) {\n                            reject({ result });\n                        }\n                    });\n                });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_LoanAdjust_CollateralTokenSymbol(\"\"); setInput_adjust_collateral_depositWithdraw(\"\"); setInput_adjust_borrowRepay_AUSD(\"\");\n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally {/*setIsAdjustLoanSubmiting(false); */}\n        }\n    }\n    // }, [api, input_LoanAdjust_CollateralTokenSymbol, input_adjust_collateral_depositWithdraw, input_adjust_borrowRepay_AUSD, extension, selectedAddress, decimals]);\n    //#endregion\n\n    //#region Close Loan Close caller's CDP which has debit but still in safe by use collateral to swap stable token on DEX for clearing debit \n    ///Running  console.dir(api.tx.honzon); shows that the function is not yet implemented in AMTC6 \n    // const closeLoan = useCallback( async () => {\n    const closeLoan = async (input_LoanClose_CollateralTokenSymbol) => {\n        if (api && input_LoanClose_CollateralTokenSymbol && extension && selectedAddress && decimals) {\n            // setIsCloseLoanSubmiting(true);\n            console.log(`running closeLoan`);\n\n            try {\n                // const symbol = \"DOT\";\n                const symbol = input_LoanClose_CollateralTokenSymbol;\n                \n                console.log(`UNDER CONSTRUCTION.  FUNCTION closeLoanHasDebitByDex NOT YET PROVIDED IN AMTC6  api.tx.honzon : `);\n                console.dir(api.tx.honzon);\n\n                //prepare extrinsic\n                // const extrinsic = api.tx.honzon.closeLoanHasDebitByDex(\n                //     { TOKEN: symbol },   //`currency_id`: collateral currency id.\n                //      // large number, allows swapping almost any amount\n                //      1 * 10 ** 30,     //`max_collateral_amount`: the max collateral amount which is used to swap enough stable token to clear debit.\n                //      [{ TOKEN: symbol }, { TOKEN: \"AUSD\" }]\n                // );\n\n                \n                //*** 1st way signAndSend THIS IS IF YOU WANT YOUR SC or ACCOUNT TO SIGN AND SEND USING SEED PHRASE. WITHOUT USING EXTENSION POLKADOT.JS ***\n                // const signer = getSigner(process.env.REACT_APP_seed_Helen);\n                // const hash = await extrinsic.signAndSend(signer);\n                // console.log(\"CLOSE LOAN hash.toHuman(): \", hash.toHuman());\n                \n\n\n                //#region *** 2nd way sign and then send ***\n                // //sign extrinsic\n                // await extrinsic.signAsync(selectedAddress, { signer: extension.signer });\n                \n                // //send extrinsic\n                // await new Promise((resolve, reject) => {\n                //     extrinsic.send((result) => {\n\n                //         console.log(`Close Loan extrinsic.send result.status: `,result.status);\n                //         console.log(`Close Loan extrinsic.send result: `,result);\n\n                //         if (result.status.isFinalized || result.status.isInBlock) {\n                //             result.events.filter( ( { event: { section } } ) => section === \"system\")\n                //                 .forEach((event) => {\n\n                //                     console.log(`Close Loan extrinsic.send event: `,event);\n\n                //                     const { event: { data, method },} = event;\n            \n                //                     if (method === \"ExtrinsicFailed\") {\n                //                         const [dispatchError] = data;\n                //                         let message = dispatchError.type;\n            \n                //                         if (dispatchError.isModule) {\n                //                             try {\n                //                                 const mod = dispatchError.asModule;\n                //                                 const error = api.registry.findMetaError(\n                //                                     new Uint8Array([mod.index.toNumber(),mod.error.toNumber(),])\n                //                                 );\n                //                                 message = `${error.section}.${error.name}`;\n                //                             } catch (error) {\n                //                                 // swallow\n                //                             }\n                //                         }\n            \n                //                         reject({ message, result });\n                //                     } else if (method === \"ExtrinsicSuccess\") {\n                //                         resolve({ result });\n                //                     }\n                //                 });\n                \n                //         } else if (result.isError) {\n                //             reject({ result });\n                //         }\n                //     });\n                // });\n                //#endregion\n    \n                alert(\"Success\");\n                // setInput_LoanClose_CollateralTokenSymbol(\"\");  \n            } catch (error) {\n                if (error.message) { alert(`Failed, ${error.message}`); } \n                else { alert(`Failed`); }\n            } finally { /*setIsCloseLoanSubmiting(false); */}\n        }\n    }\n    // }, [api, input_LoanClose_CollateralTokenSymbol, extension, selectedAddress, decimals]);\n    //#endregion\n\n\n\n   \n\n\n    // if (!api) { return <div> loading... </div> }\n\n    // return (\n    //     <div style={{overflow: 'scroll'}}>\n    //         <div>\n    //         <label style={{backgroundColor: \"#9DD861\", color:\"black\", fontSize:\"20px\"}}>Basic Token SC</label>\n    //         <table style={{backgroundColor: \"#9DD861\", color:\"black\", width:\"100%\"}}>\n    //                 <thead>\n    //                     <tr><th>Smart Contract Address</th><th>Name</th><th>Symbol</th><th>Message</th></tr>\n    //                 </thead>\n    //                 <tbody>\n    //                     <tr><td>{sc.scAddress}</td><td>{scStateVariables.name}</td><td>{scStateVariables.symbol}</td><td>{scStateVariables.message}</td></tr>\n    //                 </tbody>\n    //         </table>\n\n    //         <ChangeMessage sc={sc} getCurrentGasPrice={getCurrentGasPrice} />\n    //         </div>\n    //         <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n\n    //         <h3>Acala Mandala TC6 Front End</h3>\n\n\n    //         <div className = \"App\" >\n    //             <h2> Swap ACA to AUSD example </h2> \n\n    //             <div> \n    //                 <select defaultValue = \"\" value = { selectedAddress } onChange = { (event) => setSelectedAddress(event.target.value) } >\n    //                     <option value = \"\" disabled hidden > Choose Account </option> \n    //                     { (accountList || []).map(({ address, name }) => ( <option key = { address } value = { address } > { name } </option>)) } \n    //                 </select>  \n    //             </div>\n\n    //             <div> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- </div> \n\n    //             <div> Address: { selectedAddress || 'account not selected' } </div> \n\n    //             <div> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</div>  \n\n    //             { selectedAddress && (  \n    //             <div>\n    //                 <h3>Balances</h3>\n    //                 <div> ACA balance: { formatedACA  } ACA </div> \n    //                 <div> AUSD balance: { formatedAUSD  } AUSD</div> \n    //                 <div> DOT balance: { formatedDOT  } DOT</div> \n    //                 <div> LDOT balance: { formatedLDOT  } LDOT</div> \n    //                 <div> RENBTC balance: { formatedRENBTC  } RENBTC</div> \n    //                 <div> KAR balance: { formatedKAR  } KAR</div> \n    //                 <div> KUSD balance: { formatedKUSD  } KUSD</div> \n    //                 <div> KSM balance: { formatedKSM  } KSM</div> \n    //                 <div> XBTC balance: { formatedXBTC  } XBTC</div> \n    //                 <div> POLKABTC balance: { formatedPOLKABTC  } POLKABTC</div> \n    //                 <div> PLM balance: { formatedPLM  } PLM</div> \n    //                 <div> PHA balance: { formatedPHA  } PHA</div> \n    //                 <div> HDT balance: { formatedHDT  } HDT</div> \n    //                 <div> BCG balance: { formatedBCG  } BCG</div> \n    //                 <div> LKSM balance: { formatedLKSM  } LKSM</div> \n    //                 <div> SDN balance: { formatedSDN } SDN</div> \n    //                 <div> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</div>  \n    //             </div>\n    //             )}\n\n    //             <div>\n    //                 <h3>Oracle Prices</h3>\n    //                 <div>ACAAUSD: {ACAAUSD}  Status: {statusACAAUSD} </div> \n    //                 <div>DOTAUSD: {DOTAUSD} Status: {statusDOTAUSD} </div>\n    //                 <div>LDOTAUSD: {LDOTAUSD} Status: {statusLDOTAUSD} </div>\n    //                 <div>XBTCAUSD: {XBTCAUSD} Status: {statusXBTCAUSD} </div>\n    //                 <div>RENBTCAUSD: {RENBTCAUSD} Status: {statusRENBTCAUSD} </div>\n    //                 <div>POLKABTCAUSD: {POLKABTCAUSD} Status: {statusPOLKABTCAUSD} </div>\n    //                 <div>PLMAUSD: {PLMAUSD} Status: {statusPLMAUSD} </div>\n    //                 <div>HDTAUSD: {HDTAUSD} Status: {statusHDTAUSD} </div>\n    //                 <div>SDNAUSD: {SDNAUSD} Status: {statusSDNAUSD} </div>\n    //                 <div>BCGAUSD: {BCGAUSD} Status: {statusBCGAUSD} </div>\n    //             </div>\n    //             <div> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</div>  \n\n    //             { selectedAddress && ( \n    //             <div> \n    //                 <h3>DEX</h3>\n    //                 <br/> \n    //                 <h6>Swap</h6>\n    //                 <div> \n    //                     Input ACA: <input type = \"text\" value = { input_Supply_ACA } onChange = { (event) => setInput_Supply_ACA(event.target.value) }/> \n    //                     <button disabled = { swapWithExactSupply_IsSubmiting } onClick = { swapWithExactSupply } > SWAP ACA </button> \n    //                     <div> \n    //                         To receive: { (input_Supply_ACA * ACAAUSD).toFixed(2) || 0 } AUSD \n    //                     </div> \n    //                 </div> \n    //                 <br/> \n    //                 <h6>Swap With Eact Target</h6>\n    //                 <div> \n    //                     Target Receive AUSD: <input type = \"text\" value = { input_target_AUSD } onChange = { (event) => setInput_target_AUSD(event.target.value) }/> \n    //                     Max Supply ACA: <input type = \"text\" value = { input_maxSupply_ACA } onChange = { (event) => setInput_maxSupply_ACA(event.target.value) }/> \n    //                     <button disabled = { swapWithExactTarget_IsSubmiting } onClick = { swapWithExactTarget } > SWAP ACA for target AUSD </button> \n    //                     <div> \n    //                         To swap: { (input_target_AUSD / ACAAUSD).toFixed(2) || 0 } ACA \n    //                     </div> \n    //                 </div> \n    //                 <br/> \n    //                 <h6>Add Liquidity</h6>\n    //                 <div> \n    //                     Input ACA: <input type = \"text\" value = { input_liq_ACA } onChange = { (event) => setInput_Liq_ACA(event.target.value) }/> \n    //                     Input AUSD: <input type = \"text\" value = { input_liq_AUSD } onChange = { (event) => setInput_Liq_AUSD(event.target.value) }/> \n    //                     <button disabled = { isAddLiquiditySubmiting } onClick = { addLiquidity } > Add Liquidity </button> \n    //                 </div> \n    //                 <br/><br/>\n    //                 <h6>Remove Liquidity</h6>\n    //                 <div> \n    //                     Remove Liquidity Shares: <input type = \"text\" value = { input_removeliquidity_Shares } onChange = { (event) => setInput_RemoveLiquidityShares(event.target.value) }/> \n    //                     <button disabled = { isRemovingLiquiditySubmiting } onClick = { removeLiquidity } > Remove Liquidity </button> \n    //                 </div> \n    //                 <br/><br/>\n\n    //                 <h6>Transfers</h6>\n    //                 <div> \n    //                     Transfer ACA Balance Amount: <input type = \"text\" value = { input_balanceToTransfer } onChange = { (event) => setInput_BalanceToTransfer(event.target.value) }/> \n    //                     Destination Address: <input type = \"text\" value = { destinationAddress } onChange = { (event) => setDestinationAddress(event.target.value) }/> \n    //                     <button disabled = { isBalanceToTransferSubmiting } onClick = { transfer_Balance } > Transfer Balance </button> \n    //                 </div> \n    //                 <br/><br/>\n    //                 <div> \n    //                     Transfer Currency Amount (non-native ACA): <input type = \"text\" value = { input_currencyToTransfer } onChange = { (event) => setInput_CurrencyToTransfer(event.target.value) }/> \n    //                     Transfer Token: <input type = \"text\" value = { input_transferToken } onChange = { (event) => setInput_transferToken(event.target.value) }/> \n    //                     Currency Destination Address: <input type = \"text\" value = { currencyDestinationAddress } onChange = { (event) => setCurrencyDestinationAddress(event.target.value) }/> \n    //                     <button disabled = { isCurrencyToTransferSubmiting } onClick = { transfer_Currency } > Transfer Currency </button> \n    //                 </div> \n    //                 <br/><br/>\n\n    //                 <br/> \n    //             </div>\n    //             )}  \n                \n    //             <div> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</div>  \n    //             <h3>LOANS</h3>\n    //             <h6>Outstanding Account Loans</h6>\n    //             <div>\n    //                 <div>Hash: {loans_DOT.hash}  Collateral:{loans_DOT.collateral} DOT  Debit: {loans_DOT.debit} AUSD </div> \n    //                 <div>Hash: {loans_LDOT.hash}  Collateral:{loans_LDOT.collateral} LDOT  Debit: {loans_LDOT.debit} AUSD </div> \n    //                 <div>Hash: {loans_XBTC.hash}  Collateral:{loans_XBTC.collateral} XBTC  Debit: {loans_XBTC.debit} AUSD </div> \n    //                 <div>Hash: {loans_RENBTC.hash}  Collateral:{loans_RENBTC.collateral} RENBTC  Debit: {loans_RENBTC.debit} AUSD </div> \n    //                 <div>Hash: {loans_POLKABTC.hash}  Collateral:{loans_POLKABTC.collateral} POLKABTC  Debit: {loans_POLKABTC.debit} AUSD </div> \n    //             </div>\n    //             <h6>Total Loans</h6>\n    //             <div>\n    //                 <div>DOT Loans Collateral:{total_loans_DOT.collateral} ACA  Debit: {total_loans_DOT.debit} AUSD  debitExchangeRate: {total_loans_DOT.debitExchangeRate} </div> \n    //                 <div>LDOT Loans Collateral:{total_loans_LDOT.collateral} ACA  Debit: {total_loans_LDOT.debit} AUSD debitExchangeRate: {total_loans_LDOT.debitExchangeRate}</div> \n    //                 <div>XBTC Loans Collateral:{total_loans_XBTC.collateral} ACA  Debit: {total_loans_XBTC.debit} AUSD debitExchangeRate: {total_loans_XBTC.debitExchangeRate}</div> \n    //                 <div>RENBTC Loans Collateral:{total_loans_RENBTC.collateral} ACA  Debit: {total_loans_RENBTC.debit} AUSD debitExchangeRate: {total_loans_RENBTC.debitExchangeRate}</div> \n    //                 <div>POLKABTC Loans Collateral:{total_loans_POLKABTC.collateral} ACA  Debit: {total_loans_POLKABTC.debit} AUSD debitExchangeRate: {total_loans_POLKABTC.debitExchangeRate}</div> \n    //             </div>\n    //             <h6>Loan Parameters</h6>\n    //             <div>\n    //                 <div>DOT Loans maximumTotalDebitValue: {loans_DOT_Params.maximumTotalDebitValue} stabilityFee: {loans_DOT_Params.stabilityFee}% liquidationRatio: {loans_DOT_Params.liquidationRatio}% liquidationPenalty: {loans_DOT_Params.liquidationPenalty}% requiredCollateralRatio: {loans_DOT_Params.requiredCollateralRatio}% </div> \n    //                 <div>LDOT Loans maximumTotalDebitValue: {loans_LDOT_Params.maximumTotalDebitValue} stabilityFee: {loans_LDOT_Params.stabilityFee}% liquidationRatio: {loans_LDOT_Params.liquidationRatio}% liquidationPenalty: {loans_LDOT_Params.liquidationPenalty}% requiredCollateralRatio: {loans_LDOT_Params.requiredCollateralRatio}% </div> \n    //                 <div>XBTC Loans maximumTotalDebitValue: {loans_XBTC_Params.maximumTotalDebitValue} stabilityFee: {loans_XBTC_Params.stabilityFee}% liquidationRatio: {loans_XBTC_Params.liquidationRatio}% liquidationPenalty: {loans_XBTC_Params.liquidationPenalty}% requiredCollateralRatio: {loans_XBTC_Params.requiredCollateralRatio}% </div> \n    //                 <div>RENBTC Loans maximumTotalDebitValue: {loans_RENBTC_Params.maximumTotalDebitValue} stabilityFee: {loans_RENBTC_Params.stabilityFee}% liquidationRatio: {loans_RENBTC_Params.liquidationRatio}% liquidationPenalty: {loans_RENBTC_Params.liquidationPenalty}% requiredCollateralRatio: {loans_RENBTC_Params.requiredCollateralRatio}% </div> \n    //                 <div>POLKABTC Loans maximumTotalDebitValue: {loans_POLKABTC_Params.maximumTotalDebitValue} stabilityFee: {loans_POLKABTC_Params.stabilityFee}% liquidationRatio: {loans_POLKABTC_Params.liquidationRatio}% liquidationPenalty: {loans_POLKABTC_Params.liquidationPenalty}% requiredCollateralRatio: {loans_POLKABTC_Params.requiredCollateralRatio}% </div> \n    //             </div>\n    //             <h6>Authorize/Unauthorize Account For Loan Management</h6>\n    //             <div> \n    //                 Collateral Token <input type = \"text\" value = { input_CollateralTokenSumbol } onChange = { (event) => setInput_CollateralTokenSumbol(event.target.value) }/> \n    //                 Authorizee Address: <input type = \"text\" value = { autorizeeAddress } onChange = { (event) => setAuthorizeeAddress(event.target.value) }/> \n    //                 <button disabled = { isCollateralTokenSubmiting } onClick = { authorize_LoanForTransferTo3rdParty } > Authorize Loan of Token for Adress </button> \n    //                 <button disabled = { isUnauthorizeSubmiting } onClick = { unauthorize_LoanForTransferTo3rdParty } > Unauthorize Loan of Token for Adress </button> \n    //                 <button disabled = { isUnauthorizeALLSubmiting } onClick = { unauthorizeALL_Loans } > Unauthorize ALL Loans for authorizees </button> \n    //             </div> \n    //             <h6>Adjust Existing Loan</h6>\n    //             <div> \n    //                 Collateral Token <input type = \"text\" value = { input_LoanAdjust_CollateralTokenSymbol } onChange = { (event) => setInput_LoanAdjust_CollateralTokenSymbol(event.target.value) }/> \n    //                 Deposit/Wothdraw Collateral Tokens (+/-): <input type = \"text\" value = { input_adjust_collateral_depositWithdraw } onChange = { (event) => setInput_adjust_collateral_depositWithdraw(event.target.value) }/> \n    //                 Borrow/Repay AUSD (+/-): <input type = \"text\" value = { input_adjust_borrowRepay_AUSD } onChange = { (event) => setInput_adjust_borrowRepay_AUSD(event.target.value) }/> \n    //                 <button disabled = {isAdjustLoanSubmiting} onClick = { adjustLoan } > Adjust Loan </button> \n    //             </div> \n    //             <h6>Close Existing Loan</h6>\n    //             <div> \n    //                 Collateral Token <input type = \"text\" value = { input_LoanClose_CollateralTokenSymbol } onChange = { (event) => setInput_LoanClose_CollateralTokenSymbol(event.target.value) }/> \n    //                 <button disabled = {isCloseLoanSubmiting} onClick = { closeLoan } > Close Loan </button> \n    //             </div> \n    //             <h6>Transfer Loan From</h6>\n    //             <div> \n    //                 Collateral Token <input type = \"text\" value = { input_LoanTransfer_CollateralTokenSymbol } onChange = { (event) => setInput_LoanTransfer_CollateralTokenSymbol(event.target.value) }/> \n    //                 Transfer From Account <input type = \"text\" value = { input_LoanTransfer_FromAccount } onChange = { (event) => setInput_LoanTransfer_FromAccount (event.target.value) }/> \n    //                 <button disabled = {isTransferLoanSubmiting} onClick = { tranferLoanFrom } > Transfer Loan </button> \n    //             </div> \n    //             <br/><br/>\n\n\n\n    //             <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n\n    //         </div> \n\n    //     </div>\n\n    // );\n \n\n// };\n\n\n\n// export default AMTC6_FE;\n\nexport {\n    API_Setup,\n    decimals,\n    update_CustomerAccount,\n    setExtensionAPI,\n    getAccountBalanceSnapshot,\n    subscribeToAccountEvents,\n    unsubscribeToAccountEvents,\n    customer_portfolio,\n    get_API_OraclePrices,\n    oracle_API_Prices,\n\n    swapWithExactSupply,\n    swapWithExactTarget,\n    transfer_Balance,\n    transfer_Currency,\n\n    getAccountLoans,\n    accountLoans,\n    getLoansOverview,\n    loansOverview,\n\n    adjustLoan,\n    authorize_LoanForTransferTo3rdParty,\n    unauthorize_LoanForTransferTo3rdParty,\n    unauthorizeALL_Loans,\n    tranferLoanFrom,\n\n    addLiquidity,\n    removeLiquidity,\n};\n","/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/Index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ReduxForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/MaterialUiForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ShowResults.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/AsyncValidate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxForm/Validate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormThirdPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormSecondPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormFirstPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/renderField.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/validate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Todo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Widget.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon/HackathonChallenge/src/jsx/pages/Editable.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/App.js",["1612","1613","1614","1615","1616","1617","1618","1619","1620"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/reportWebVitals.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/store.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/context/ThemeContext.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/Setup.js",["1621","1622","1623"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/AMTC6_API.js",["1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/Predeployed_EVM.js",["1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/context/ThemeDemo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/Reducers.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/PostsReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/reducers/AuthReducer.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/index.js",["1689","1690","1691"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/actions/PostTypes.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/store/actions/AuthActions.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/NavHader.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/Footer.js",["1692"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/Setting.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/Header.js",["1693","1694"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/nav/SideBar.js",["1695","1696","1697","1698","1699","1700","1701","1702","1703","1704"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Todo.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Widget.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/DashboardDark.js",["1705","1706"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LOANS.js",["1707","1708","1709","1710","1711","1712","1713","1714"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/DEX.js",["1715","1716","1717","1718","1719","1720"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/SOCIAL.js",["1721","1722","1723"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/GOALS.js",["1724"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/VAULTS.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ReduxForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/Index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/Portofolio.js",["1725","1726","1727","1728","1729","1730","1731"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/layouts/PageTitle.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/pages/Editable.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/MaterialUiForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardForm.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/ShowResults.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Widget1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/WeeklySales2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/VisitorActivity.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ViewProject.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/MyWallet/CoinChart.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/index.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/Validate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormSecondPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormThirdPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/WizardFormFirstPage.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxForm/AsyncValidate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/AppsMenu/Shop/productData/allProducts.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/renderField.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Forms/ReduxWizard/validate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/MyWallet/Donut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexDonut.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/CurrentApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Portfolio/SummarApexBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinDetailTab.js",["1732","1733","1734","1735","1736","1737","1738"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Transactions/TableData.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/MARKET.js",["1739","1740","1741"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETOverview.js",["1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Dashboard/LoansMARKETPortfolio.js",["1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TotalCourse.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/CurrentRadialApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTrade.js",["1766","1767"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/MarketLineApex.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/TransferFromLoan.js",["1768"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/AuthorizeLoan.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/ManageLoan.js",["1769","1770","1771"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/TopProducts1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/QuickTransfer.js",["1772","1773"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerLine.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/PowerBar.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/SalesAnalysis.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/NewStudent.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/LifeTimeEarning.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/GlucoseRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/FeeCollection.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/HeartRate.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/Clolesterol.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/BloodPressure.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/AllSell1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/ActiveUser.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/WidgetBasic/MarketNow.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/VaultDetailTab.js",["1774","1775","1776","1777"],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/services/AuthService.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart1.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/Home/TestimonialOwl.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/OrderBlog.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Withdrawal.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/Quick_Deposit.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart2.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart3.js",[],"/Users/angelos_imac/Dropbox/Cryptos/KARURA/Hackathlon_Public/HackathonChallenge/src/jsx/components/Boltz/VAULTS/CoinCharts/CoinLineChart4.js",[],{"ruleId":"1778","severity":1,"message":"1779","line":2,"column":17,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1782","line":14,"column":10,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1783","line":14,"column":19,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":30},{"ruleId":"1778","severity":1,"message":"1784","line":15,"column":11,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1785","line":15,"column":18,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1786","line":15,"column":26,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":36},{"ruleId":"1778","severity":1,"message":"1787","line":409,"column":11,"nodeType":"1780","messageId":"1781","endLine":409,"endColumn":29},{"ruleId":"1788","severity":1,"message":"1789","line":453,"column":2,"nodeType":"1790","messageId":"1791","endLine":473,"endColumn":7},{"ruleId":"1792","severity":1,"message":"1793","line":453,"column":2,"nodeType":"1790","messageId":"1794","endLine":473,"endColumn":7},{"ruleId":"1788","severity":1,"message":"1795","line":476,"column":1,"nodeType":"1790","messageId":"1796","endLine":480,"endColumn":7},{"ruleId":"1788","severity":1,"message":"1795","line":482,"column":1,"nodeType":"1790","messageId":"1796","endLine":482,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1797","line":14,"column":8,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1798","line":23,"column":8,"nodeType":"1780","messageId":"1781","endLine":23,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1799","line":132,"column":9,"nodeType":"1780","messageId":"1781","endLine":132,"endColumn":15},{"ruleId":"1800","severity":1,"message":"1801","line":248,"column":23,"nodeType":"1802","messageId":"1803","endLine":248,"endColumn":115},{"ruleId":"1800","severity":1,"message":"1804","line":249,"column":23,"nodeType":"1802","messageId":"1803","endLine":249,"endColumn":115},{"ruleId":"1778","severity":1,"message":"1805","line":4,"column":7,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1806","line":2,"column":9,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1807","line":2,"column":13,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1808","line":3,"column":8,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1809","line":5,"column":8,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1810","line":7,"column":8,"nodeType":"1780","messageId":"1781","endLine":7,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1811","line":8,"column":8,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1812","line":9,"column":8,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1813","line":10,"column":8,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1814","line":11,"column":8,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1815","line":14,"column":10,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1816","line":14,"column":22,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1817","line":16,"column":2,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1818","line":17,"column":5,"nodeType":"1780","messageId":"1781","endLine":17,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1819","line":18,"column":5,"nodeType":"1780","messageId":"1781","endLine":18,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1820","line":19,"column":5,"nodeType":"1780","messageId":"1781","endLine":19,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1821","line":20,"column":5,"nodeType":"1780","messageId":"1781","endLine":20,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1822","line":21,"column":5,"nodeType":"1780","messageId":"1781","endLine":21,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1823","line":22,"column":5,"nodeType":"1780","messageId":"1781","endLine":22,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1824","line":23,"column":5,"nodeType":"1780","messageId":"1781","endLine":23,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1825","line":24,"column":5,"nodeType":"1780","messageId":"1781","endLine":24,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1826","line":25,"column":5,"nodeType":"1780","messageId":"1781","endLine":25,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1827","line":26,"column":5,"nodeType":"1780","messageId":"1781","endLine":26,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1828","line":27,"column":5,"nodeType":"1780","messageId":"1781","endLine":27,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1829","line":28,"column":5,"nodeType":"1780","messageId":"1781","endLine":28,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1830","line":29,"column":5,"nodeType":"1780","messageId":"1781","endLine":29,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1831","line":30,"column":5,"nodeType":"1780","messageId":"1781","endLine":30,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1832","line":31,"column":5,"nodeType":"1780","messageId":"1781","endLine":31,"endColumn":19},{"ruleId":"1778","severity":1,"message":"1833","line":32,"column":5,"nodeType":"1780","messageId":"1781","endLine":32,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1834","line":33,"column":5,"nodeType":"1780","messageId":"1781","endLine":33,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1835","line":34,"column":5,"nodeType":"1780","messageId":"1781","endLine":34,"endColumn":11},{"ruleId":"1778","severity":1,"message":"1836","line":35,"column":5,"nodeType":"1780","messageId":"1781","endLine":35,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1837","line":36,"column":5,"nodeType":"1780","messageId":"1781","endLine":36,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1838","line":37,"column":5,"nodeType":"1780","messageId":"1781","endLine":37,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1839","line":38,"column":5,"nodeType":"1780","messageId":"1781","endLine":38,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1840","line":39,"column":5,"nodeType":"1780","messageId":"1781","endLine":39,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1841","line":40,"column":5,"nodeType":"1780","messageId":"1781","endLine":40,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1842","line":41,"column":2,"nodeType":"1780","messageId":"1781","endLine":41,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1839","line":23,"column":28,"nodeType":"1780","messageId":"1781","endLine":23,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":26,"column":5,"nodeType":"1845","endLine":26,"endColumn":7,"suggestions":"1846"},{"ruleId":"1778","severity":1,"message":"1839","line":26,"column":28,"nodeType":"1780","messageId":"1781","endLine":26,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":29,"column":5,"nodeType":"1845","endLine":29,"endColumn":7,"suggestions":"1847"},{"ruleId":"1778","severity":1,"message":"1848","line":88,"column":5,"nodeType":"1780","messageId":"1781","endLine":88,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1849","line":89,"column":5,"nodeType":"1780","messageId":"1781","endLine":89,"endColumn":9},{"ruleId":"1778","severity":1,"message":"1850","line":107,"column":5,"nodeType":"1780","messageId":"1781","endLine":107,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1851","line":126,"column":5,"nodeType":"1780","messageId":"1781","endLine":126,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1852","line":135,"column":2,"nodeType":"1780","messageId":"1781","endLine":135,"endColumn":7},{"ruleId":"1778","severity":1,"message":"1853","line":140,"column":5,"nodeType":"1780","messageId":"1781","endLine":140,"endColumn":11},{"ruleId":"1778","severity":1,"message":"1854","line":141,"column":5,"nodeType":"1780","messageId":"1781","endLine":141,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1855","line":148,"column":5,"nodeType":"1780","messageId":"1781","endLine":148,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1856","line":149,"column":5,"nodeType":"1780","messageId":"1781","endLine":149,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1857","line":159,"column":5,"nodeType":"1780","messageId":"1781","endLine":159,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1858","line":2,"column":9,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1859","line":9,"column":10,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1860","line":9,"column":22,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":29},{"ruleId":"1778","severity":1,"message":"1861","line":9,"column":31,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":39},{"ruleId":"1843","severity":1,"message":"1862","line":158,"column":8,"nodeType":"1845","endLine":158,"endColumn":30,"suggestions":"1863"},{"ruleId":"1778","severity":1,"message":"1864","line":595,"column":23,"nodeType":"1780","messageId":"1781","endLine":595,"endColumn":44},{"ruleId":"1778","severity":1,"message":"1865","line":686,"column":23,"nodeType":"1780","messageId":"1781","endLine":686,"endColumn":38},{"ruleId":"1778","severity":1,"message":"1866","line":687,"column":23,"nodeType":"1780","messageId":"1781","endLine":687,"endColumn":33},{"ruleId":"1843","severity":1,"message":"1867","line":947,"column":15,"nodeType":"1868","endLine":993,"endColumn":6},{"ruleId":"1843","severity":1,"message":"1867","line":999,"column":15,"nodeType":"1868","endLine":1063,"endColumn":6},{"ruleId":"1843","severity":1,"message":"1869","line":1063,"column":8,"nodeType":"1845","endLine":1063,"endColumn":40,"suggestions":"1870"},{"ruleId":"1778","severity":1,"message":"1871","line":1494,"column":23,"nodeType":"1780","messageId":"1781","endLine":1494,"endColumn":29},{"ruleId":"1843","severity":1,"message":"1872","line":1571,"column":8,"nodeType":"1845","endLine":1571,"endColumn":90,"suggestions":"1873"},{"ruleId":"1778","severity":1,"message":"1874","line":2,"column":33,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":45},{"ruleId":"1778","severity":1,"message":"1875","line":3,"column":10,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1876","line":5,"column":10,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1877","line":22,"column":12,"nodeType":"1780","messageId":"1781","endLine":22,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1878","line":22,"column":30,"nodeType":"1780","messageId":"1781","endLine":22,"endColumn":49},{"ruleId":"1843","severity":1,"message":"1862","line":59,"column":8,"nodeType":"1845","endLine":59,"endColumn":30,"suggestions":"1879"},{"ruleId":"1843","severity":1,"message":"1880","line":113,"column":7,"nodeType":"1845","endLine":113,"endColumn":39,"suggestions":"1881"},{"ruleId":"1778","severity":1,"message":"1882","line":151,"column":15,"nodeType":"1780","messageId":"1781","endLine":151,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1883","line":152,"column":15,"nodeType":"1780","messageId":"1781","endLine":152,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1884","line":156,"column":19,"nodeType":"1780","messageId":"1781","endLine":156,"endColumn":27},{"ruleId":"1778","severity":1,"message":"1885","line":27,"column":12,"nodeType":"1780","messageId":"1781","endLine":27,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1886","line":27,"column":16,"nodeType":"1780","messageId":"1781","endLine":27,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1887","line":28,"column":12,"nodeType":"1780","messageId":"1781","endLine":28,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1888","line":28,"column":30,"nodeType":"1780","messageId":"1781","endLine":28,"endColumn":49},{"ruleId":"1778","severity":1,"message":"1889","line":32,"column":35,"nodeType":"1780","messageId":"1781","endLine":32,"endColumn":59},{"ruleId":"1778","severity":1,"message":"1877","line":35,"column":12,"nodeType":"1780","messageId":"1781","endLine":35,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1878","line":35,"column":30,"nodeType":"1780","messageId":"1781","endLine":35,"endColumn":49},{"ruleId":"1890","severity":1,"message":"1891","line":39,"column":217,"nodeType":"1892","messageId":"1893","endLine":39,"endColumn":220},{"ruleId":"1890","severity":1,"message":"1891","line":40,"column":217,"nodeType":"1892","messageId":"1893","endLine":40,"endColumn":220},{"ruleId":"1890","severity":1,"message":"1891","line":41,"column":217,"nodeType":"1892","messageId":"1893","endLine":41,"endColumn":220},{"ruleId":"1778","severity":1,"message":"1894","line":68,"column":12,"nodeType":"1780","messageId":"1781","endLine":68,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1895","line":71,"column":26,"nodeType":"1780","messageId":"1781","endLine":71,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1896","line":172,"column":17,"nodeType":"1780","messageId":"1781","endLine":172,"endColumn":33},{"ruleId":"1843","severity":1,"message":"1897","line":230,"column":8,"nodeType":"1845","endLine":230,"endColumn":30,"suggestions":"1898"},{"ruleId":"1843","severity":1,"message":"1899","line":281,"column":7,"nodeType":"1845","endLine":281,"endColumn":24,"suggestions":"1900"},{"ruleId":"1778","severity":1,"message":"1901","line":516,"column":11,"nodeType":"1780","messageId":"1781","endLine":516,"endColumn":25},{"ruleId":"1902","replacedBy":"1903"},{"ruleId":"1904","replacedBy":"1905"},{"ruleId":"1778","severity":1,"message":"1779","line":2,"column":17,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1906","line":2,"column":54,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":65},{"ruleId":"1778","severity":1,"message":"1907","line":10,"column":20,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1908","line":10,"column":120,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":144},{"ruleId":"1778","severity":1,"message":"1909","line":10,"column":146,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":172},{"ruleId":"1778","severity":1,"message":"1910","line":10,"column":196,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":213},{"ruleId":"1778","severity":1,"message":"1911","line":108,"column":11,"nodeType":"1780","messageId":"1781","endLine":108,"endColumn":21},{"ruleId":"1843","severity":1,"message":"1867","line":184,"column":16,"nodeType":"1868","endLine":223,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1787","line":554,"column":11,"nodeType":"1780","messageId":"1781","endLine":554,"endColumn":29},{"ruleId":"1778","severity":1,"message":"1874","line":2,"column":33,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":45},{"ruleId":"1778","severity":1,"message":"1875","line":3,"column":10,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1876","line":5,"column":10,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1799","line":43,"column":9,"nodeType":"1780","messageId":"1781","endLine":43,"endColumn":15},{"ruleId":"1800","severity":1,"message":"1801","line":61,"column":23,"nodeType":"1802","messageId":"1803","endLine":61,"endColumn":149},{"ruleId":"1800","severity":1,"message":"1804","line":62,"column":23,"nodeType":"1802","messageId":"1803","endLine":62,"endColumn":149},{"ruleId":"1778","severity":1,"message":"1805","line":4,"column":7,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1912","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":4,"column":20,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1848","line":78,"column":5,"nodeType":"1780","messageId":"1781","endLine":78,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1849","line":79,"column":5,"nodeType":"1780","messageId":"1781","endLine":79,"endColumn":9},{"ruleId":"1778","severity":1,"message":"1850","line":97,"column":5,"nodeType":"1780","messageId":"1781","endLine":97,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1851","line":116,"column":5,"nodeType":"1780","messageId":"1781","endLine":116,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1852","line":125,"column":2,"nodeType":"1780","messageId":"1781","endLine":125,"endColumn":7},{"ruleId":"1778","severity":1,"message":"1853","line":130,"column":5,"nodeType":"1780","messageId":"1781","endLine":130,"endColumn":11},{"ruleId":"1778","severity":1,"message":"1854","line":131,"column":5,"nodeType":"1780","messageId":"1781","endLine":131,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1855","line":138,"column":5,"nodeType":"1780","messageId":"1781","endLine":138,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1856","line":139,"column":5,"nodeType":"1780","messageId":"1781","endLine":139,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1857","line":149,"column":5,"nodeType":"1780","messageId":"1781","endLine":149,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1914","line":1,"column":15,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1912","line":8,"column":9,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":8,"column":20,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":8,"column":62,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1839","line":13,"column":28,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":26,"column":5,"nodeType":"1845","endLine":26,"endColumn":7,"suggestions":"1916"},{"ruleId":"1778","severity":1,"message":"1912","line":14,"column":9,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":14,"column":20,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":14,"column":62,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1917","line":21,"column":7,"nodeType":"1780","messageId":"1781","endLine":21,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1839","line":28,"column":28,"nodeType":"1780","messageId":"1781","endLine":28,"endColumn":38},{"ruleId":"1778","severity":1,"message":"1918","line":31,"column":9,"nodeType":"1780","messageId":"1781","endLine":31,"endColumn":18},{"ruleId":"1843","severity":1,"message":"1919","line":83,"column":4,"nodeType":"1845","endLine":83,"endColumn":19,"suggestions":"1920"},{"ruleId":"1843","severity":1,"message":"1844","line":97,"column":5,"nodeType":"1845","endLine":97,"endColumn":7,"suggestions":"1921"},{"ruleId":"1902","replacedBy":"1922"},{"ruleId":"1904","replacedBy":"1923"},{"ruleId":"1778","severity":1,"message":"1839","line":21,"column":28,"nodeType":"1780","messageId":"1781","endLine":21,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":70,"column":5,"nodeType":"1845","endLine":70,"endColumn":7,"suggestions":"1924"},{"ruleId":"1778","severity":1,"message":"1925","line":2,"column":10,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1926","line":20,"column":9,"nodeType":"1780","messageId":"1781","endLine":20,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1927","line":20,"column":19,"nodeType":"1780","messageId":"1781","endLine":20,"endColumn":30},{"ruleId":"1928","severity":1,"message":"1929","line":220,"column":34,"nodeType":"1930","messageId":"1893","endLine":220,"endColumn":36},{"ruleId":"1778","severity":1,"message":"1839","line":23,"column":28,"nodeType":"1780","messageId":"1781","endLine":23,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":26,"column":5,"nodeType":"1845","endLine":26,"endColumn":7,"suggestions":"1931"},{"ruleId":"1778","severity":1,"message":"1912","line":11,"column":9,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":11,"column":20,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1932","line":11,"column":86,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":99},{"ruleId":"1778","severity":1,"message":"1933","line":11,"column":101,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1934","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1935","line":19,"column":7,"nodeType":"1780","messageId":"1781","endLine":19,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1936","line":26,"column":7,"nodeType":"1780","messageId":"1781","endLine":26,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1907","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":17},{"ruleId":"1843","severity":1,"message":"1937","line":52,"column":4,"nodeType":"1845","endLine":52,"endColumn":18,"suggestions":"1938"},{"ruleId":"1778","severity":1,"message":"1907","line":5,"column":9,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":17},{"ruleId":"1843","severity":1,"message":"1939","line":72,"column":4,"nodeType":"1845","endLine":72,"endColumn":18,"suggestions":"1940"},{"ruleId":"1902","replacedBy":"1941"},{"ruleId":"1904","replacedBy":"1942"},{"ruleId":"1778","severity":1,"message":"1914","line":1,"column":15,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1925","line":2,"column":10,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1912","line":9,"column":9,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":9,"column":20,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":9,"column":62,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1943","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1944","line":53,"column":3,"nodeType":"1780","messageId":"1781","endLine":53,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1945","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1946","line":14,"column":8,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1947","line":42,"column":5,"nodeType":"1780","messageId":"1781","endLine":42,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1877","line":43,"column":5,"nodeType":"1780","messageId":"1781","endLine":43,"endColumn":21},{"ruleId":"1890","severity":1,"message":"1891","line":46,"column":178,"nodeType":"1892","messageId":"1893","endLine":46,"endColumn":181},{"ruleId":"1890","severity":1,"message":"1891","line":47,"column":177,"nodeType":"1892","messageId":"1893","endLine":47,"endColumn":180},{"ruleId":"1890","severity":1,"message":"1891","line":48,"column":178,"nodeType":"1892","messageId":"1893","endLine":48,"endColumn":181},{"ruleId":"1778","severity":1,"message":"1948","line":77,"column":5,"nodeType":"1780","messageId":"1781","endLine":77,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1894","line":229,"column":17,"nodeType":"1780","messageId":"1781","endLine":229,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1949","line":253,"column":17,"nodeType":"1780","messageId":"1781","endLine":253,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1950","line":411,"column":13,"nodeType":"1780","messageId":"1781","endLine":411,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1951","line":412,"column":13,"nodeType":"1780","messageId":"1781","endLine":412,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1952","line":473,"column":11,"nodeType":"1780","messageId":"1781","endLine":473,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1953","line":517,"column":11,"nodeType":"1780","messageId":"1781","endLine":517,"endColumn":33},{"ruleId":"1778","severity":1,"message":"1901","line":549,"column":11,"nodeType":"1780","messageId":"1781","endLine":549,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1954","line":572,"column":11,"nodeType":"1780","messageId":"1781","endLine":572,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1955","line":620,"column":11,"nodeType":"1780","messageId":"1781","endLine":620,"endColumn":27},{"ruleId":"1788","severity":1,"message":"1795","line":653,"column":13,"nodeType":"1790","messageId":"1796","endLine":653,"endColumn":26},{"ruleId":"1788","severity":1,"message":"1795","line":654,"column":13,"nodeType":"1790","messageId":"1796","endLine":680,"endColumn":23},{"ruleId":"1788","severity":1,"message":"1795","line":682,"column":9,"nodeType":"1790","messageId":"1796","endLine":682,"endColumn":23},{"ruleId":"1788","severity":1,"message":"1795","line":683,"column":9,"nodeType":"1790","messageId":"1796","endLine":729,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":732,"column":9,"nodeType":"1790","messageId":"1796","endLine":732,"endColumn":31},{"ruleId":"1788","severity":1,"message":"1795","line":756,"column":9,"nodeType":"1790","messageId":"1796","endLine":756,"endColumn":31},{"ruleId":"1788","severity":1,"message":"1795","line":757,"column":9,"nodeType":"1790","messageId":"1796","endLine":791,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":794,"column":9,"nodeType":"1790","messageId":"1796","endLine":794,"endColumn":39},{"ruleId":"1788","severity":1,"message":"1795","line":795,"column":9,"nodeType":"1790","messageId":"1796","endLine":833,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":836,"column":9,"nodeType":"1790","messageId":"1796","endLine":836,"endColumn":29},{"ruleId":"1788","severity":1,"message":"1795","line":837,"column":9,"nodeType":"1790","messageId":"1796","endLine":880,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":884,"column":9,"nodeType":"1790","messageId":"1796","endLine":884,"endColumn":26},{"ruleId":"1788","severity":1,"message":"1795","line":885,"column":9,"nodeType":"1790","messageId":"1796","endLine":923,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":927,"column":9,"nodeType":"1790","messageId":"1796","endLine":927,"endColumn":33},{"ruleId":"1788","severity":1,"message":"1795","line":928,"column":9,"nodeType":"1790","messageId":"1796","endLine":965,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":969,"column":7,"nodeType":"1790","messageId":"1796","endLine":969,"endColumn":106},{"ruleId":"1778","severity":1,"message":"1912","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":4,"column":101,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1956","line":78,"column":8,"nodeType":"1780","messageId":"1781","endLine":78,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1806","line":2,"column":20,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1807","line":2,"column":25,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":28},{"ruleId":"1800","severity":1,"message":"1957","line":136,"column":9,"nodeType":"1802","messageId":"1803","endLine":136,"endColumn":56},{"ruleId":"1800","severity":1,"message":"1958","line":139,"column":9,"nodeType":"1802","messageId":"1803","endLine":139,"endColumn":59},{"ruleId":"1778","severity":1,"message":"1912","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":3,"column":101,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1959","line":8,"column":7,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1960","line":9,"column":7,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1961","line":10,"column":7,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1962","line":11,"column":7,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1963","line":12,"column":7,"nodeType":"1780","messageId":"1781","endLine":12,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1964","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1965","line":14,"column":7,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1966","line":15,"column":7,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1967","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1956","line":76,"column":8,"nodeType":"1780","messageId":"1781","endLine":76,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1912","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":3,"column":101,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1959","line":8,"column":7,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1960","line":9,"column":7,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1961","line":10,"column":7,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1962","line":11,"column":7,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1963","line":12,"column":7,"nodeType":"1780","messageId":"1781","endLine":12,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1964","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1965","line":14,"column":7,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1966","line":15,"column":7,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1967","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1956","line":76,"column":8,"nodeType":"1780","messageId":"1781","endLine":76,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1968","line":1,"column":25,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":34},{"ruleId":"1778","severity":1,"message":"1969","line":5,"column":22,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":34},{"ruleId":"1778","severity":1,"message":"1910","line":5,"column":36,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1970","line":34,"column":10,"nodeType":"1780","messageId":"1781","endLine":34,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1971","line":310,"column":141,"nodeType":"1780","messageId":"1781","endLine":310,"endColumn":149},{"ruleId":"1778","severity":1,"message":"1972","line":310,"column":151,"nodeType":"1780","messageId":"1781","endLine":310,"endColumn":159},{"ruleId":"1778","severity":1,"message":"1973","line":331,"column":13,"nodeType":"1780","messageId":"1781","endLine":331,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1974","line":337,"column":13,"nodeType":"1780","messageId":"1781","endLine":337,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1975","line":343,"column":13,"nodeType":"1780","messageId":"1781","endLine":343,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1976","line":349,"column":13,"nodeType":"1780","messageId":"1781","endLine":349,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1977","line":355,"column":13,"nodeType":"1780","messageId":"1781","endLine":355,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1978","line":361,"column":13,"nodeType":"1780","messageId":"1781","endLine":361,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1979","line":367,"column":13,"nodeType":"1780","messageId":"1781","endLine":367,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1980","line":373,"column":13,"nodeType":"1780","messageId":"1781","endLine":373,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1981","line":379,"column":13,"nodeType":"1780","messageId":"1781","endLine":379,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1982","line":385,"column":13,"nodeType":"1780","messageId":"1781","endLine":385,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1983","line":402,"column":13,"nodeType":"1780","messageId":"1781","endLine":402,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1984","line":408,"column":13,"nodeType":"1780","messageId":"1781","endLine":408,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1985","line":518,"column":11,"nodeType":"1780","messageId":"1781","endLine":518,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1986","line":522,"column":11,"nodeType":"1780","messageId":"1781","endLine":522,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1987","line":590,"column":23,"nodeType":"1780","messageId":"1781","endLine":590,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1988","line":591,"column":23,"nodeType":"1780","messageId":"1781","endLine":591,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1989","line":592,"column":23,"nodeType":"1780","messageId":"1781","endLine":592,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1990","line":593,"column":23,"nodeType":"1780","messageId":"1781","endLine":593,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1991","line":594,"column":23,"nodeType":"1780","messageId":"1781","endLine":594,"endColumn":44},{"ruleId":"1778","severity":1,"message":"1992","line":595,"column":23,"nodeType":"1780","messageId":"1781","endLine":595,"endColumn":46},{"ruleId":"1778","severity":1,"message":"1993","line":596,"column":23,"nodeType":"1780","messageId":"1781","endLine":596,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1994","line":597,"column":23,"nodeType":"1780","messageId":"1781","endLine":597,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1995","line":598,"column":23,"nodeType":"1780","messageId":"1781","endLine":598,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1996","line":599,"column":23,"nodeType":"1780","messageId":"1781","endLine":599,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1997","line":700,"column":21,"nodeType":"1780","messageId":"1781","endLine":700,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1864","line":814,"column":23,"nodeType":"1780","messageId":"1781","endLine":814,"endColumn":44},{"ruleId":"1778","severity":1,"message":"1865","line":905,"column":23,"nodeType":"1780","messageId":"1781","endLine":905,"endColumn":38},{"ruleId":"1778","severity":1,"message":"1866","line":906,"column":23,"nodeType":"1780","messageId":"1781","endLine":906,"endColumn":33},{"ruleId":"1778","severity":1,"message":"1998","line":1794,"column":11,"nodeType":"1780","messageId":"1781","endLine":1794,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1871","line":1801,"column":23,"nodeType":"1780","messageId":"1781","endLine":1801,"endColumn":29},{"ruleId":"1778","severity":1,"message":"1779","line":2,"column":17,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1906","line":2,"column":54,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":65},{"ruleId":"1778","severity":1,"message":"1907","line":10,"column":20,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1908","line":10,"column":120,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":144},{"ruleId":"1778","severity":1,"message":"1909","line":10,"column":146,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":172},{"ruleId":"1778","severity":1,"message":"1910","line":10,"column":196,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":213},{"ruleId":"1778","severity":1,"message":"1911","line":108,"column":11,"nodeType":"1780","messageId":"1781","endLine":108,"endColumn":21},{"ruleId":"1843","severity":1,"message":"1867","line":184,"column":16,"nodeType":"1868","endLine":223,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1787","line":554,"column":11,"nodeType":"1780","messageId":"1781","endLine":554,"endColumn":29},{"ruleId":"1778","severity":1,"message":"1874","line":2,"column":33,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":45},{"ruleId":"1778","severity":1,"message":"1875","line":3,"column":10,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1876","line":5,"column":10,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1971","line":310,"column":141,"nodeType":"1780","messageId":"1781","endLine":310,"endColumn":149},{"ruleId":"1778","severity":1,"message":"1972","line":310,"column":151,"nodeType":"1780","messageId":"1781","endLine":310,"endColumn":159},{"ruleId":"1778","severity":1,"message":"1973","line":331,"column":13,"nodeType":"1780","messageId":"1781","endLine":331,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1974","line":337,"column":13,"nodeType":"1780","messageId":"1781","endLine":337,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1975","line":343,"column":13,"nodeType":"1780","messageId":"1781","endLine":343,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1976","line":349,"column":13,"nodeType":"1780","messageId":"1781","endLine":349,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1977","line":355,"column":13,"nodeType":"1780","messageId":"1781","endLine":355,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1978","line":361,"column":13,"nodeType":"1780","messageId":"1781","endLine":361,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1979","line":367,"column":13,"nodeType":"1780","messageId":"1781","endLine":367,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1980","line":373,"column":13,"nodeType":"1780","messageId":"1781","endLine":373,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1981","line":379,"column":13,"nodeType":"1780","messageId":"1781","endLine":379,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1982","line":385,"column":13,"nodeType":"1780","messageId":"1781","endLine":385,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1983","line":402,"column":13,"nodeType":"1780","messageId":"1781","endLine":402,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1984","line":408,"column":13,"nodeType":"1780","messageId":"1781","endLine":408,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1985","line":518,"column":11,"nodeType":"1780","messageId":"1781","endLine":518,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1986","line":522,"column":11,"nodeType":"1780","messageId":"1781","endLine":522,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1987","line":590,"column":23,"nodeType":"1780","messageId":"1781","endLine":590,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1988","line":591,"column":23,"nodeType":"1780","messageId":"1781","endLine":591,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1989","line":592,"column":23,"nodeType":"1780","messageId":"1781","endLine":592,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1990","line":593,"column":23,"nodeType":"1780","messageId":"1781","endLine":593,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1991","line":594,"column":23,"nodeType":"1780","messageId":"1781","endLine":594,"endColumn":44},{"ruleId":"1778","severity":1,"message":"1992","line":595,"column":23,"nodeType":"1780","messageId":"1781","endLine":595,"endColumn":46},{"ruleId":"1778","severity":1,"message":"1993","line":596,"column":23,"nodeType":"1780","messageId":"1781","endLine":596,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1994","line":597,"column":23,"nodeType":"1780","messageId":"1781","endLine":597,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1995","line":598,"column":23,"nodeType":"1780","messageId":"1781","endLine":598,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1996","line":599,"column":23,"nodeType":"1780","messageId":"1781","endLine":599,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1997","line":700,"column":21,"nodeType":"1780","messageId":"1781","endLine":700,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1864","line":814,"column":23,"nodeType":"1780","messageId":"1781","endLine":814,"endColumn":44},{"ruleId":"1778","severity":1,"message":"1865","line":905,"column":23,"nodeType":"1780","messageId":"1781","endLine":905,"endColumn":38},{"ruleId":"1778","severity":1,"message":"1866","line":906,"column":23,"nodeType":"1780","messageId":"1781","endLine":906,"endColumn":33},{"ruleId":"1778","severity":1,"message":"1998","line":1794,"column":11,"nodeType":"1780","messageId":"1781","endLine":1794,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1871","line":1801,"column":23,"nodeType":"1780","messageId":"1781","endLine":1801,"endColumn":29},{"ruleId":"1778","severity":1,"message":"1945","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1946","line":14,"column":8,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1947","line":42,"column":5,"nodeType":"1780","messageId":"1781","endLine":42,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1877","line":43,"column":5,"nodeType":"1780","messageId":"1781","endLine":43,"endColumn":21},{"ruleId":"1890","severity":1,"message":"1891","line":46,"column":178,"nodeType":"1892","messageId":"1893","endLine":46,"endColumn":181},{"ruleId":"1890","severity":1,"message":"1891","line":47,"column":177,"nodeType":"1892","messageId":"1893","endLine":47,"endColumn":180},{"ruleId":"1890","severity":1,"message":"1891","line":48,"column":178,"nodeType":"1892","messageId":"1893","endLine":48,"endColumn":181},{"ruleId":"1778","severity":1,"message":"1948","line":77,"column":5,"nodeType":"1780","messageId":"1781","endLine":77,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1894","line":229,"column":17,"nodeType":"1780","messageId":"1781","endLine":229,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1949","line":253,"column":17,"nodeType":"1780","messageId":"1781","endLine":253,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1950","line":411,"column":13,"nodeType":"1780","messageId":"1781","endLine":411,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1951","line":412,"column":13,"nodeType":"1780","messageId":"1781","endLine":412,"endColumn":22},{"ruleId":"1778","severity":1,"message":"1952","line":473,"column":11,"nodeType":"1780","messageId":"1781","endLine":473,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1953","line":517,"column":11,"nodeType":"1780","messageId":"1781","endLine":517,"endColumn":33},{"ruleId":"1778","severity":1,"message":"1901","line":549,"column":11,"nodeType":"1780","messageId":"1781","endLine":549,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1954","line":572,"column":11,"nodeType":"1780","messageId":"1781","endLine":572,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1955","line":620,"column":11,"nodeType":"1780","messageId":"1781","endLine":620,"endColumn":27},{"ruleId":"1788","severity":1,"message":"1795","line":653,"column":13,"nodeType":"1790","messageId":"1796","endLine":653,"endColumn":26},{"ruleId":"1788","severity":1,"message":"1795","line":654,"column":13,"nodeType":"1790","messageId":"1796","endLine":680,"endColumn":23},{"ruleId":"1788","severity":1,"message":"1795","line":682,"column":9,"nodeType":"1790","messageId":"1796","endLine":682,"endColumn":23},{"ruleId":"1788","severity":1,"message":"1795","line":683,"column":9,"nodeType":"1790","messageId":"1796","endLine":729,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":732,"column":9,"nodeType":"1790","messageId":"1796","endLine":732,"endColumn":31},{"ruleId":"1788","severity":1,"message":"1795","line":756,"column":9,"nodeType":"1790","messageId":"1796","endLine":756,"endColumn":31},{"ruleId":"1788","severity":1,"message":"1795","line":757,"column":9,"nodeType":"1790","messageId":"1796","endLine":791,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":794,"column":9,"nodeType":"1790","messageId":"1796","endLine":794,"endColumn":39},{"ruleId":"1788","severity":1,"message":"1795","line":795,"column":9,"nodeType":"1790","messageId":"1796","endLine":833,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":836,"column":9,"nodeType":"1790","messageId":"1796","endLine":836,"endColumn":29},{"ruleId":"1788","severity":1,"message":"1795","line":837,"column":9,"nodeType":"1790","messageId":"1796","endLine":880,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":884,"column":9,"nodeType":"1790","messageId":"1796","endLine":884,"endColumn":26},{"ruleId":"1788","severity":1,"message":"1795","line":885,"column":9,"nodeType":"1790","messageId":"1796","endLine":923,"endColumn":18},{"ruleId":"1788","severity":1,"message":"1795","line":927,"column":9,"nodeType":"1790","messageId":"1796","endLine":927,"endColumn":33},{"ruleId":"1788","severity":1,"message":"1795","line":928,"column":9,"nodeType":"1790","messageId":"1796","endLine":965,"endColumn":19},{"ruleId":"1788","severity":1,"message":"1795","line":969,"column":7,"nodeType":"1790","messageId":"1796","endLine":969,"endColumn":106},{"ruleId":"1778","severity":1,"message":"1799","line":43,"column":9,"nodeType":"1780","messageId":"1781","endLine":43,"endColumn":15},{"ruleId":"1800","severity":1,"message":"1801","line":61,"column":23,"nodeType":"1802","messageId":"1803","endLine":61,"endColumn":149},{"ruleId":"1800","severity":1,"message":"1804","line":62,"column":23,"nodeType":"1802","messageId":"1803","endLine":62,"endColumn":149},{"ruleId":"1778","severity":1,"message":"1805","line":4,"column":7,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1912","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":4,"column":20,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1848","line":78,"column":5,"nodeType":"1780","messageId":"1781","endLine":78,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1849","line":79,"column":5,"nodeType":"1780","messageId":"1781","endLine":79,"endColumn":9},{"ruleId":"1778","severity":1,"message":"1850","line":97,"column":5,"nodeType":"1780","messageId":"1781","endLine":97,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1851","line":116,"column":5,"nodeType":"1780","messageId":"1781","endLine":116,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1852","line":125,"column":2,"nodeType":"1780","messageId":"1781","endLine":125,"endColumn":7},{"ruleId":"1778","severity":1,"message":"1853","line":130,"column":5,"nodeType":"1780","messageId":"1781","endLine":130,"endColumn":11},{"ruleId":"1778","severity":1,"message":"1854","line":131,"column":5,"nodeType":"1780","messageId":"1781","endLine":131,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1855","line":138,"column":5,"nodeType":"1780","messageId":"1781","endLine":138,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1856","line":139,"column":5,"nodeType":"1780","messageId":"1781","endLine":139,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1857","line":149,"column":5,"nodeType":"1780","messageId":"1781","endLine":149,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1839","line":21,"column":28,"nodeType":"1780","messageId":"1781","endLine":21,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":70,"column":5,"nodeType":"1845","endLine":70,"endColumn":7,"suggestions":"1999"},{"ruleId":"1778","severity":1,"message":"1912","line":14,"column":9,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":14,"column":20,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":14,"column":62,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1917","line":21,"column":7,"nodeType":"1780","messageId":"1781","endLine":21,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1839","line":28,"column":28,"nodeType":"1780","messageId":"1781","endLine":28,"endColumn":38},{"ruleId":"1778","severity":1,"message":"1918","line":31,"column":9,"nodeType":"1780","messageId":"1781","endLine":31,"endColumn":18},{"ruleId":"1843","severity":1,"message":"1919","line":83,"column":4,"nodeType":"1845","endLine":83,"endColumn":19,"suggestions":"2000"},{"ruleId":"1843","severity":1,"message":"1844","line":97,"column":5,"nodeType":"1845","endLine":97,"endColumn":7,"suggestions":"2001"},{"ruleId":"1778","severity":1,"message":"1914","line":1,"column":15,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1912","line":8,"column":9,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":8,"column":20,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":8,"column":62,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1839","line":13,"column":28,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":38},{"ruleId":"1843","severity":1,"message":"1844","line":26,"column":5,"nodeType":"1845","endLine":26,"endColumn":7,"suggestions":"2002"},{"ruleId":"1778","severity":1,"message":"1925","line":2,"column":10,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1926","line":20,"column":9,"nodeType":"1780","messageId":"1781","endLine":20,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1927","line":20,"column":19,"nodeType":"1780","messageId":"1781","endLine":20,"endColumn":30},{"ruleId":"1928","severity":1,"message":"1929","line":220,"column":34,"nodeType":"1930","messageId":"1893","endLine":220,"endColumn":36},{"ruleId":"1778","severity":1,"message":"1912","line":11,"column":9,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":11,"column":20,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1932","line":11,"column":86,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":99},{"ruleId":"1778","severity":1,"message":"1933","line":11,"column":101,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1934","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1935","line":19,"column":7,"nodeType":"1780","messageId":"1781","endLine":19,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1936","line":26,"column":7,"nodeType":"1780","messageId":"1781","endLine":26,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1914","line":1,"column":15,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1925","line":2,"column":10,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1912","line":9,"column":9,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1913","line":9,"column":20,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":42},{"ruleId":"1778","severity":1,"message":"1915","line":9,"column":62,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":84},{"ruleId":"1778","severity":1,"message":"1943","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1944","line":53,"column":3,"nodeType":"1780","messageId":"1781","endLine":53,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1912","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":4,"column":101,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1956","line":78,"column":8,"nodeType":"1780","messageId":"1781","endLine":78,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1912","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":3,"column":101,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1959","line":8,"column":7,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1960","line":9,"column":7,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1961","line":10,"column":7,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1962","line":11,"column":7,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1963","line":12,"column":7,"nodeType":"1780","messageId":"1781","endLine":12,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1964","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1965","line":14,"column":7,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1966","line":15,"column":7,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1967","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1956","line":76,"column":8,"nodeType":"1780","messageId":"1781","endLine":76,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1912","line":3,"column":9,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1933","line":3,"column":101,"nodeType":"1780","messageId":"1781","endLine":3,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1959","line":8,"column":7,"nodeType":"1780","messageId":"1781","endLine":8,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1960","line":9,"column":7,"nodeType":"1780","messageId":"1781","endLine":9,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1961","line":10,"column":7,"nodeType":"1780","messageId":"1781","endLine":10,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1962","line":11,"column":7,"nodeType":"1780","messageId":"1781","endLine":11,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1963","line":12,"column":7,"nodeType":"1780","messageId":"1781","endLine":12,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1964","line":13,"column":7,"nodeType":"1780","messageId":"1781","endLine":13,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1965","line":14,"column":7,"nodeType":"1780","messageId":"1781","endLine":14,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1966","line":15,"column":7,"nodeType":"1780","messageId":"1781","endLine":15,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1967","line":16,"column":7,"nodeType":"1780","messageId":"1781","endLine":16,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1956","line":76,"column":8,"nodeType":"1780","messageId":"1781","endLine":76,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1907","line":4,"column":9,"nodeType":"1780","messageId":"1781","endLine":4,"endColumn":17},{"ruleId":"1843","severity":1,"message":"1937","line":52,"column":4,"nodeType":"1845","endLine":52,"endColumn":18,"suggestions":"2003"},{"ruleId":"1778","severity":1,"message":"1970","line":34,"column":10,"nodeType":"1780","messageId":"1781","endLine":34,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1968","line":1,"column":25,"nodeType":"1780","messageId":"1781","endLine":1,"endColumn":34},{"ruleId":"1778","severity":1,"message":"1969","line":5,"column":22,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":34},{"ruleId":"1778","severity":1,"message":"1910","line":5,"column":36,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1907","line":5,"column":9,"nodeType":"1780","messageId":"1781","endLine":5,"endColumn":17},{"ruleId":"1843","severity":1,"message":"1939","line":72,"column":4,"nodeType":"1845","endLine":72,"endColumn":18,"suggestions":"2004"},{"ruleId":"1778","severity":1,"message":"1806","line":2,"column":20,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1807","line":2,"column":25,"nodeType":"1780","messageId":"1781","endLine":2,"endColumn":28},{"ruleId":"1800","severity":1,"message":"1957","line":136,"column":9,"nodeType":"1802","messageId":"1803","endLine":136,"endColumn":56},{"ruleId":"1800","severity":1,"message":"1958","line":139,"column":9,"nodeType":"1802","messageId":"1803","endLine":139,"endColumn":59},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'useDispatch' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","'getCurrentGasPrice' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","Block is redundant.","redundantBlock","'NAV_index' is defined but never used.","'Home' is defined but never used.","'routes' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component NAV_NavHade must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component NAV_SideBar must be in PascalCase or SCREAMING_SNAKE_CASE","'d' is assigned a value but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Select' is defined but never used.","'demo1' is defined but never used.","'demo2' is defined but never used.","'demo3' is defined but never used.","'demo4' is defined but never used.","'demo5' is defined but never used.","'demoToggle' is assigned a value but never used.","'setDemoToggle' is assigned a value but never used.","'body' is assigned a value but never used.","'sideBarOption' is assigned a value but never used.","'layoutOption' is assigned a value but never used.","'backgroundOption' is assigned a value but never used.","'sidebarposition' is assigned a value but never used.","'headerPositions' is assigned a value but never used.","'containerPosition' is assigned a value but never used.","'fontFamily' is assigned a value but never used.","'changePrimaryColor' is assigned a value but never used.","'changeNavigationHader' is assigned a value but never used.","'sideBarStyle' is assigned a value but never used.","'changeSideBarStyle' is assigned a value but never used.","'changeSideBarPostion' is assigned a value but never used.","'sidebarpositions' is assigned a value but never used.","'changeHeaderPostion' is assigned a value but never used.","'headerposition' is assigned a value but never used.","'changeSideBarLayout' is assigned a value but never used.","'sidebarLayout' is assigned a value but never used.","'colors' is assigned a value but never used.","'chnageHaderColor' is assigned a value but never used.","'chnageSidebarColor' is assigned a value but never used.","'changeBackground' is assigned a value but never used.","'background' is assigned a value but never used.","'changeContainerPosition' is assigned a value but never used.","'containerPosition_' is assigned a value but never used.","'setDemoTheme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeBackground'. Either include it or remove the dependency array.","ArrayExpression",["2005"],["2006"],"'email' is assigned a value but never used.","'shop' is assigned a value but never used.","'bootstrap' is assigned a value but never used.","'plugins' is assigned a value but never used.","'redux' is assigned a value but never used.","'widget' is assigned a value but never used.","'forms' is assigned a value but never used.","'table' is assigned a value but never used.","'pages' is assigned a value but never used.","'error' is assigned a value but never used.","'getSigner' is defined but never used.","'CurrencyId' is defined but never used.","'Balance' is defined but never used.","'AccounId' is defined but never used.","React Hook useEffect has missing dependencies: 'setupSpecs.provider' and 'setupSpecs.wallet'. Either include them or remove the dependency array.",["2007"],"'stake_increment_share' is assigned a value but never used.","'min_withdrawn_b' is assigned a value but never used.","'by_unstake' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'blockHeader.hash'. Either include it or remove the dependency array.",["2008"],"'symbol' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'input_LoanAdjust_CollateralTokenSymbol'. Either include it or remove the dependency array.",["2009"],"'TestProvider' is defined but never used.","'ApiPromise' is defined but never used.","'Children' is defined but never used.","'customerSpenders' is assigned a value but never used.","'setCustomerSpenders' is assigned a value but never used.",["2010"],"React Hook useEffect has missing dependencies: 'getBalance' and 'setupSpecs.provider'. Either include them or remove the dependency array.",["2011"],"'burnToAddress' is assigned a value but never used.","'burn_amount' is assigned a value but never used.","'gasPrice' is assigned a value but never used.","'sc' is assigned a value but never used.","'setSC' is assigned a value but never used.","'scStateVariables' is assigned a value but never used.","'setSCStateVariables' is assigned a value but never used.","'setCustomerSCAbstraction' is assigned a value but never used.","no-dupe-keys","Duplicate key 'ACA'.","ObjectExpression","unexpected","'sc_Schedule' is assigned a value but never used.","'setDexLiquidity' is assigned a value but never used.","'LP_TokenBindings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOraclePrices' and 'setupSpecs.provider'. Either include them or remove the dependency array.",["2012"],"React Hook useEffect has missing dependencies: 'getPortfolioHoldings' and 'setupSpecs.provider'. Either include them or remove the dependency array.",["2013"],"'handleTransfer' is assigned a value but never used.","no-native-reassign",["2014"],"no-negated-in-lhs",["2015"],"'useCallback' is defined but never used.","'decimals' is defined but never used.","'subscribeToAccountEvents' is defined but never used.","'unsubscribeToAccountEvents' is defined but never used.","'oracle_API_Prices' is defined but never used.","'EVMisSetup' is assigned a value but never used.","'EVM_Setup' is defined but never used.","'oracle_EVM_PricesHuman' is defined but never used.","'useState' is defined but never used.","'oracle_EVM_Description' is defined but never used.",["2016"],"'MarketLineApex' is assigned a value but never used.","'chartData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'oraclePrices'. Either include it or remove the dependency array.",["2017"],["2018"],["2014"],["2015"],["2019"],"'Dropdown' is defined but never used.","'country1' is assigned a value but never used.","'setCountry1' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression",["2020"],"'TokenBindings' is defined but never used.","'LP_TokenBindings' is defined but never used.","'SummarApexBar' is assigned a value but never used.","'CurrentApexBar' is assigned a value but never used.","'CoinChart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'customerPortfolio'. Either include it or remove the dependency array. If 'setInput_Supply_ACA' needs the current value of 'customerPortfolio', you can also switch to useReducer instead of useState and read 'customerPortfolio' in the reducer.",["2021"],"React Hook useEffect has a missing dependency: 'customerPortfolio'. Either include it or remove the dependency array. If 'setInputTranferAmount' needs the current value of 'customerPortfolio', you can also switch to useReducer instead of useState and read 'customerPortfolio' in the reducer.",["2022"],["2014"],["2015"],"'CoinLineChart1' is assigned a value but never used.","'tickSymbols' is assigned a value but never used.","'createWallet' is defined but never used.","'Identicon' is defined but never used.","'spender' is assigned a value but never used.","'dexLiquidity' is assigned a value but never used.","'customerSubstrateAccount' is assigned a value but never used.","'customerBalance' is assigned a value but never used.","'baseToken' is assigned a value but never used.","'approveSpender' is assigned a value but never used.","'getAllowanceForSpender' is assigned a value but never used.","'transferFrom' is assigned a value but never used.","'dex_getLiquidity' is assigned a value but never used.","'onClick' is assigned a value but never used.","Imported JSX component Quick_Deposit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Quick_Withdrawal must be in PascalCase or SCREAMING_SNAKE_CASE","'sampleData1' is assigned a value but never used.","'sampleData2' is assigned a value but never used.","'sampleData3' is assigned a value but never used.","'sampleData4' is assigned a value but never used.","'sampleData5' is assigned a value but never used.","'sampleData6' is assigned a value but never used.","'sampleData7' is assigned a value but never used.","'sampleData8' is assigned a value but never used.","'sampleData9' is assigned a value but never used.","'useEffect' is defined but never used.","'accountLoans' is defined but never used.","'result' is assigned a value but never used.","'unsubHDT' is defined but never used.","'unsubBCG' is defined but never used.","'unsubDOT' is assigned a value but never used.","'unsubLDOT' is assigned a value but never used.","'unsubRENBTC' is assigned a value but never used.","'unsubKAR' is assigned a value but never used.","'unsubKUSD' is assigned a value but never used.","'unsubKSM' is assigned a value but never used.","'unsubXBTC' is assigned a value but never used.","'unsubPOLKABTC' is assigned a value but never used.","'unsubPLM' is assigned a value but never used.","'unsubPHA' is assigned a value but never used.","'unsubLKSM' is assigned a value but never used.","'unsubSDN' is assigned a value but never used.","'formatedHDT' is assigned a value but never used.","'formatedBCG' is assigned a value but never used.","'acaAusdPool_status' is assigned a value but never used.","'dotAusdPool_status' is assigned a value but never used.","'ldotAusdPool_status' is assigned a value but never used.","'xbtcAusdPool_status' is assigned a value but never used.","'renbtcAusdPool_status' is assigned a value but never used.","'polkabtcAusdPool_status' is assigned a value but never used.","'plmAusdPool_status' is assigned a value but never used.","'hdtAusdPool_status' is assigned a value but never used.","'sdnAusdPool_status' is assigned a value but never used.","'bcgAusdPool_status' is assigned a value but never used.","'erMsg' is assigned a value but never used.","'closeLoan' is assigned a value but never used.",["2023"],["2024"],["2025"],["2026"],["2027"],["2028"],{"desc":"2029","fix":"2030"},{"desc":"2029","fix":"2031"},{"desc":"2032","fix":"2033"},{"desc":"2034","fix":"2035"},{"desc":"2036","fix":"2037"},{"desc":"2032","fix":"2038"},{"desc":"2039","fix":"2040"},{"desc":"2041","fix":"2042"},{"desc":"2043","fix":"2044"},"no-global-assign","no-unsafe-negation",{"desc":"2029","fix":"2045"},{"desc":"2046","fix":"2047"},{"desc":"2029","fix":"2048"},{"desc":"2029","fix":"2049"},{"desc":"2029","fix":"2050"},{"desc":"2051","fix":"2052"},{"desc":"2051","fix":"2053"},{"desc":"2029","fix":"2054"},{"desc":"2046","fix":"2055"},{"desc":"2029","fix":"2056"},{"desc":"2029","fix":"2057"},{"desc":"2051","fix":"2058"},{"desc":"2051","fix":"2059"},"Update the dependencies array to be: [changeBackground]",{"range":"2060","text":"2061"},{"range":"2062","text":"2061"},"Update the dependencies array to be: [setupSpecs.connected, setupSpecs.provider, setupSpecs.wallet]",{"range":"2063","text":"2064"},"Update the dependencies array to be: [api, selectedAddress, decimals, blockHeader.hash]",{"range":"2065","text":"2066"},"Update the dependencies array to be: [api, input_LoanClose_CollateralTokenSymbol, extension, selectedAddress, decimals, input_LoanAdjust_CollateralTokenSymbol]",{"range":"2067","text":"2068"},{"range":"2069","text":"2064"},"Update the dependencies array to be: [customerAccount, getBalance, sc.scReadOnly, setupSpecs.provider]",{"range":"2070","text":"2071"},"Update the dependencies array to be: [getOraclePrices, setupSpecs.connected, setupSpecs.provider]",{"range":"2072","text":"2073"},"Update the dependencies array to be: [customerAccount, getPortfolioHoldings, setupSpecs.provider]",{"range":"2074","text":"2075"},{"range":"2076","text":"2061"},"Update the dependencies array to be: [customerLoans, oraclePrices]",{"range":"2077","text":"2078"},{"range":"2079","text":"2061"},{"range":"2080","text":"2061"},{"range":"2081","text":"2061"},"Update the dependencies array to be: [baseCurrency, customerPortfolio]",{"range":"2082","text":"2083"},{"range":"2084","text":"2083"},{"range":"2085","text":"2061"},{"range":"2086","text":"2078"},{"range":"2087","text":"2061"},{"range":"2088","text":"2061"},{"range":"2089","text":"2083"},{"range":"2090","text":"2083"},[954,956],"[changeBackground]",[1264,1266],[9180,9202],"[setupSpecs.connected, setupSpecs.provider, setupSpecs.wallet]",[66224,66256],"[api, selectedAddress, decimals, blockHeader.hash]",[93986,94068],"[api, input_LoanClose_CollateralTokenSymbol, extension, selectedAddress, decimals, input_LoanAdjust_CollateralTokenSymbol]",[3500,3522],[6503,6535],"[customerAccount, getBalance, sc.scReadOnly, setupSpecs.provider]",[21143,21165],"[getOraclePrices, setupSpecs.connected, setupSpecs.provider]",[23811,23828],"[customerAccount, getPortfolioHoldings, setupSpecs.provider]",[880,882],[4266,4281],"[customerLoans, oraclePrices]",[4545,4547],[2920,2922],[954,956],[1978,1992],"[baseCurrency, customerPortfolio]",[3013,3027],[2920,2922],[4266,4281],[4545,4547],[880,882],[1978,1992],[3013,3027]]